C     Copyright (C) 2018 Jiabo Li, Brian Duke, and Roy McWeeny
C 
C     This program is free software: you can redistribute it and/or modify
C     it under the terms of the GNU General Public License as published by
C     the Free Software Foundation, either version 3 of the License, or
C     (at your option) any later version.
C 
C     This program is distributed in the hope that it will be useful,
C     but WITHOUT ANY WARRANTY; without even the implied warranty of
C     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
C     GNU General Public License for more details.
C 
C     You should have received a copy of the GNU General Public License
C     along with this program.  If not, see <https://www.gnu.org/licenses/>.
C 
C**************************************************************
C
C     Routines for integrals, only used in stand-alone program.
C
C**************************************************************
      SUBROUTINE CALCINT(SOURCEDAT,ENUC,NBASIS,NATOM,NELE,IRESTART)
C**************************************************************      
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'maxcen.inc'
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INTEGER P1,P2,P3
      CHARACTER*1 IEX
      CHARACTER*64 NAME,NAM,SOURCEDAT
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1               ZAN(MAXCEN),C(3,MAXCEN),
     2               NVAR,NPAR,NVAL,NUQ,CFR,CFA,KONTYP(MAXCEN),
     3               P1(MAXCEN),P2(MAXCEN),P3(MAXCEN),KR(MAXCEN),
     5               KA(MAXCEN),KB(MAXCEN),
     4               PARVAL(MAXN3),ZIN(MAXCEN),X(MAXN3)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),IBLKSZ(16)
      COMMON/DISCB/NAM(16)
C     COMMON/LBLKIN/GG(340),INDEX4(340),NWORDG,NSKIPG
      COMMON/LBLKIN/GG(10000),INDIJ(10000),INDKL(10000),NWORDG,NSKIPG
      NSKIPG= 0
      OPEN(7,FILE=SOURCEDAT,STATUS='OLD',
     $ACCESS='SEQUENTIAL',FORM='FORMATTED')
C read SOURCEDAT and set up commons /NUMBER/,/BASIS/,/MOLEC/
      CALL RSOUR(7)
C calculate nuclear repulsion energy
      CALL SENUC(ENUC)
      CALL ROPEN
      IF(IRESTART.EQ.1) THEN
      ISEL=3
      NAM(3)='ED2'
C     CALL ROPEN
      ISEL=4
      NAM(4)='ED3'
      CALL ROPEN
C
C     LOAD BASIS FUNCTION INFO
C
      CLOSE(7)
      RETURN
      END IF
C     WRITE(42,*) ENUC
      CALL MICROM
      NBASIS = NUM
      NATOM  = NAT
      NELE   = NE
      CLOSE(7)
      WRITE(*,'(" SKIPPED INTEGRALS =",22X,I12)') NSKIPG
      return
      END

      SUBROUTINE RSOUR(I)  
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REWIND I
      CALL INPUT(I,I,1)
      REWIND I
      RETURN
      END
      SUBROUTINE SENUC(ENUC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NGMAX=200,NCMAX=20,NATMAX=200)
      DIMENSION ZZ(NATMAX),X(NATMAX),Y(NATMAX),Z(NATMAX)
      COMMON /NUMBER0/ NFO,IAT,NELEC
      COMMON /MOLEC/ ZZ,X,Y,Z
       ENUC=0.D0
       DO I1=1,IAT
       DO I2=(I1+1),IAT
         R12=(X(I1)-X(I2))**2+(Y(I1)-Y(I2))**2+(Z(I1)-Z(I2))**2
         R12=1.D0/DSQRT(R12)
         ENUC=ENUC+ZZ(I1)*ZZ(I2)*R12
       END DO
       END DO
      RETURN
      END
      SUBROUTINE DATIN
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'maxcen.inc'
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      CHARACTER*1 IA
      CHARACTER*3 FUNIT(10),NAMT
      CHARACTER*64 NAME,NAM
      CHARACTER*64 FSTR,RWFFILE,INTFILE,LOCFILE
      DIMENSION IPOST(16),IBLKST(16),NAMT(16),AMST(37)
     $,MADDT(20),WHIT(15),WLOWT(15),RHIT(15),RLOWT(15),RFACT(15),
     $AMPST(9),IPOITT(9)
      COMMON /FILNAM/ IOUTVB,FSTR,RWFFILE,INTFILE,LOCFILE,LENFIL,FUNIT
C     DATA FOR INTEGRATION POINTS AND WEIGHTS
C
      COMMON/RTDATA/WHI(15),WLOW(15),RHI(15),RLOW(15),RFAC(15),
     1AMPS(9),IPOINT(9),MADD(20)
C
C     ATMOL INPUT
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      COMMON/DISCB/NAM(16)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),
     1IBLKSZ(16)
      COMMON/ATMWT/AMS(37),AMASS(MAXCEN)
C
C
C
C  Hni and Wni are the i-th point and weight for n-point Gauss-Hermite
C  quadrature.
      COMMON/HERMIT/H11,H21,H22,H31,H32,H33,H41,H42,H43,H44,
     1    H51,H52,H53,H54,H55,H61,H62,H63,H64,H65,H66,
     2    H71,H72,H73,H74,H75,H76,H77
      COMMON/WERMIT/W11,W21,W22,W31,W32,W33,W41,W42,W43,W44,
     1    W51,W52,W53,W54,W55,W61,W62,W63,W64,W65,W66,
     2    W71,W72,W73,W74,W75,W76,W77
C
      DATA AMST/1.007825D0,4.002604D0,7.01600D0,9.01218D0,11.009305D0,
     &  12.0000000D0,14.003074D0,15.994915D0,18.99840D0,19.992440D0,
     &   22.98977D0,23.98504D0,26.98153D0,27.97693D0,30.97376D0,
     &31.97207D0,34.96885D0,39.96238D0,38.96371D0,39.96259D0,44.95592D0,
     &47.94795D0,50.94398D0,51.94051D0,54.93805D0,55.9349D0,58.93319D0,
     &57.9353D0,62.9295D0,63.92915D0,68.9257D0,73.921D0,74.921D0,
     79.916D0,78.914D0,83.911D0,0.0D0/
C
C     SET DATA IN /RTDATA/ USED BY INTEGRATION ROUTINES
C
      DATA MADDT/17,17,18,18,19,19,20,20,21,21,22,22,
     &   23,23,24,24,25,25,26,26/
C
C     ROOTS AND WEIGHTS GENERATED USING NAG ROUTINE D01BCF
C     RHI CONTAINS SQUARES OF GAUSS-HERMITE ROOTS OF ORDER
C     2,4,6.......18
C     WHI ARE CORRESPONDING WEIGHTS
C     RLOW CONTAINS SQUARES OF GAUSS-LEGENDRE ROOTS OF ORDER
C     2,4,6,......,18
C     WLOW ARE CORRESPONDING WEIGHTS
C     RFAC CONTAINS RATIOS RLOW/RHI
C
      DATA RHIT/
     &0.50000000000000D+00,0.27247448713916D+01,0.27525512860841D+00,
     &0.55253437422632D+01,0.17844927485433D+01,0.19016350919349D+00,
     &0.85886356890120D+01,0.39269635013583D+01,0.13390972881264D+01,
     &0.14530352150332D+00,0.11807189489972D+02,0.64147297336620D+01,
     &0.30859374437175D+01,0.10745620124369D+01,0.11758132021178D+00/
      DATA WHIT/
     &0.88622692545276D+00,0.81312835447246D-01,0.80491409000551D+00,
     &0.45300099055090D-02,0.15706732032286D+00,0.72462959522439D+00,
     &0.19960407221138D-03,0.17077983007414D-01,0.20780232581489D+00,
     &0.66114701255824D+00,0.76404328552331D-05,0.13436457467813D-02,
     &0.33874394455481D-01,0.24013861108232D+00,0.61086263373533D+00/
      DATA RLOWT/
     &0.33333333333333D+00,0.74155574714581D+00,0.11558710999705D+00,
     &0.86949939491826D+00,0.43719785275109D+00,0.56939115967007D-01,
     &0.92215660849206D+00,0.63467747623464D+00,0.27618431387246D+00,
     &0.33648268067507D-01,0.94849392628837D+00,0.74833462838728D+00,
     &0.46159736149627D+00,0.18783156765245D+00,0.22163568807218D-01/
      DATA WLOWT/
     &0.10000000000000D+01,0.34785484513745D+00,0.65214515486255D+00,
     &0.17132449237917D+00,0.36076157304814D+00,0.46791393457269D+00,
     &0.10122853629038D+00,0.22238103445337D+00,0.31370664587789D+00,
     &0.36268378337836D+00,0.66671344308689D-01,0.14945134915058D+00,
     &0.21908636251598D+00,0.26926671931000D+00,0.29552422471475D+00/
      DATA RFACT/
     &0.66666666666667D+00,0.27215603006790D+00,0.41992718021791D+00,
     &0.15736566546394D+00,0.24499839134006D+00,0.29942188282334D+00,
     &0.10736939391571D+00,0.16162041638918D+00,0.20624663818033D+00,
     &0.23157228207121D+00,0.80331896688366D-01,0.11665879303696D+00,
     &0.14958091987121D+00,0.17479825778177D+00,0.18849566212812D+00/
      DATA JRECT/-1/,IWIDTT/80/
      DATA ICHEKT,ISELT,ISELRT,ISELWT,IREPT/5*0/
      DATA IPOST/16*-1/
      DATA IBLKST/8*0,8*4096/
      DATA NAMT/'ED0','ED1','ED2','ED3','ED4','ED5','ED5',
     1'ED7','MT0','MT1','MT2','MT3','MT4','MT5','MT6','MT7'/
      DATA AMPST/24.0D0,30.0D0,35.0D0,39.0D0,43.0D0,47.0D0,
     $51.0D0,55.0D0,60.0D0/
      DATA IPOITT/0,1,3,6,10,15,21,28,36/
      DATA TH11 /0.0D+00/
      DATA TW11 /1.77245385090552D+00/
C
      DATA TH21,TH22 /-.707106781186548D+00,.707106781186548D+00/
      DATA TW21,TW22 /.8862269254528D+00,.8862269254528D+00/
C
      DATA TH31,TH32,TH33 /-1.22474487139159D+00,0.0D+00,
     1    1.22474487139159D+00/
      DATA TW31,TW32,TW33 /0.2954089751509D+00,1.181635900604D+00,
     1    0.2954089751509D+00/
C
      DATA TH41,TH42,TH43,TH44
     1    /-1.65068012388578D+00,-0.524647623275290D+00,
     2    0.524647623275290D+00,1.65068012388578D+00/
      DATA TW41,TW42,TW43,TW44 /8.131283544725D-02,8.049140900055D-01,
     1    8.049140900055D-01,8.131283544725D-02/
C
      DATA TH51,TH52,TH53,TH54,TH55 /-2.02018287045609D+00,
     1    -0.958572464613819D+00, 0.0D+00,
     2    0.958572464613819D+00, 2.02018287045609D+00 /
      DATA TW51,TW52,TW53,TW54,TW55 /1.995324205905D-02,3.936193231522
     1D-01, 9.453087204829D-01,3.936193231522D-01,1.995324205905D-02/
C
      DATA TH61,TH62,TH63,TH64,TH65,TH66 /-2.350604973674D+00,
     1    -1.335849074014D+00,-0.436077411928D+00,0.436077411928D+00,
     2    1.335849074014D+00, 2.350604973674D+00/
      DATA TW61,TW62,TW63,TW64,TW65,TW66 / 4.530009905509D-03,
     1    1.570673203229D-01, 7.246295952244D-01,7.246295952244D-01,
     2    1.570673203229D-01, 4.530009905509D-03/
C
      DATA TH71,TH72,TH73,TH74,TH75,TH76,TH77 /-2.651961356835233D0,
     1    -1.673551628767471D0, -0.816287882858965D0, 0.0D0,
     2    0.816287882858965D0, 1.673551628767471D0, 2.651961356835233D0/
      DATA TW71,TW72,TW73,TW74,TW75,TW76,TW77 /9.717812450995D-4,
     1    5.451558281913D-2, 4.256072526101D-1, 8.102646175568D-1,
     2    4.256072526101D-1, 5.451558281913D-2, 9.717812450995D-4 /
C
      JREC=JRECT
      IWIDTH=IWIDTT
      ICHECK=ICHEKT
      ISEL=ISELT
      ISELR=ISELRT
      ISELW=ISELWT
      IREP=IREPT
      DO 101 I=1,16
      IPOS(I)=IPOST(I)
      IBLKSZ(I)=IBLKST(I)
      NAM(I)=FSTR(1:LENFIL)//'.'//NAMT(I)
101   CONTINUE
      DO 102 I=1,37
      AMS(I)=AMST(I)
102   CONTINUE
      DO 103 I=1,20
      MADD(I)=MADDT(I)
103   CONTINUE
      DO 104 I=1,15
      WHI(I)=WHIT(I)
      WLOW(I)=WLOWT(I)
      RHI(I)=RHIT(I)
      RLOW(I)=RLOWT(I)
      RFAC(I)=RFACT(I)
104   CONTINUE
      DO 105 I=1,9
      AMPS(I)=AMPST(I)
      IPOINT(I)=IPOITT(I)
105   CONTINUE
      H11=TH11
      W11=TW11
      H21=TH21
      H22=TH22
      W21=TW21
      W22=TW22
      H31=TH31
      H32=TH32
      H33=TH33
      W31=TW31
      W32=TW32
      W33=TW33
      H41=TH41
      H42=TH42
      H43=TH43
      H44=TH44
      W41=TW41
      W42=TW42
      W43=TW43
      W44=TW44
      H51=TH51
      H52=TH52
      H53=TH53
      H54=TH54
      H55=TH55
      W51=TW51
      W52=TW52
      W53=TW53
      W54=TW54
      W55=TW55
      H61=TH61
      H62=TH62
      H63=TH63
      H64=TH64
      H65=TH65
      H66=TH66
      W61=TW61
      W62=TW62
      W63=TW63
      W64=TW64
      W65=TW65
      W66=TW66
      H71=TH71
      H72=TH72
      H73=TH73
      H74=TH74
      H75=TH75
      H76=TH76
      H77=TH77
      W71=TW71
      W72=TW72
      W73=TW73
      W74=TW74
      W75=TW75
      W76=TW76
      W77=TW77
      RETURN
      END
      SUBROUTINE INIT
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'maxcen.inc'
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      PARAMETER (MAXBF1=MAXBFN+1,MAXSH1=MAXSHL+1)
      INTEGER P1, P2, P3
      LOGICAL FIXED,LEX,LDAM12,LDAM13,LDAM23,LDIIS
      LOGICAL LADAPT,LSKIP,REVISE,LMOS,LNUCL
      CHARACTER*1 IAAA
      CHARACTER*8 SCFTYP,RUNTYP,GUESS,TITLE,CONF
      CHARACTER*8 ANAM,ATNAME,PARNAM,GROUP
      CHARACTER*8 BLANK,GRPC1,HFSCF,HCORE,TET,CLOSED,OSCF
      CHARACTER*12 BFLAB,BLANK12
      CHARACTER*64 NAME,NAM
      DIMENSION ISPACE(88)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHEK,IPOS(16),
     1    IBLKSZ(16)
      COMMON/DISCB/NAM(16)
      COMMON/TIMEX/TSTART,TI,TX,TIM,TTGO,TIMMAX
      COMMON /STREAM/ IREAD,IWRT
      COMMON/WORK/JREC,JUMP,ISTT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IAAA(80)
      COMMON/PRPSEC/ISECD1,ITYPD1,ISECD2,ITYPD2,LMOS,ISECV,
     1  ITYPV,ISECD3,ITYPD3,LNUCL,ORIGIN(3)
      COMMON/SCFBLK/EN,ETOT,EHF,SH1(2),SH2(2),GAP1(2),GAP2(2),
     1              D12,D13,D23,CANA,CANB,CANC,FIXED,LEX,
     2              LDAM12,LDAM13,LDAM23,LDIIS,
     3              NCYC,ISCHM,LOCK,MAXIT,NCONV,LOKCYC
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1               ZAN(MAXCEN),C(3,MAXCEN),
     2               NVAR,NPAR,NVAL,NUQ,CFR,CFA,KONTYP(MAXCEN),
     3               P1(MAXCEN),P2(MAXCEN),P3(MAXCEN),KR(MAXCEN),
     5               KA(MAXCEN),KB(MAXCEN),
     4               PARVAL(MAXN3),ZIN(MAXCEN),X(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1               ATNAME(MAXCEN)
      COMMON/GESBLK/ISWOP(2,25),NSWOP,IFILVA,IBLKA1
      COMMON/SYMTRY/T(216),ISO(MAXSH1,24),NT,NT2,XXX(21),INDEX,NAXIS
      COMMON/SYMTRB/GROUP
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      COMMON/MAPPER/IA(MAXBF1)
      COMMON/RTWT/XX,U(12),W(12),NPT,NPT2,DJI(60)
      EQUIVALENCE (NPRINT,ISPACE(1))
      DATA PT25/0.25D0/
      DATA ZERO,ONE,THREE,PT5/0.0D0,1.0D0,3.0D0,0.5D0/
      DATA BLANK /'        '/, GRPC1 /'C1'/, TET /'T'/
      DATA BLANK12 /'            '/
      DATA HFSCF,HCORE,CLOSED /'HFSCF','HCORE','CLOSED'/
      DATA PI /3.14159265358979D0/
      TIMLIM=73440.0D0
      TIMMAX=TIMLIM
      DO 50 I=1,88
      ISPACE(I)=0
   50 CONTINUE
      DO 10 I=1,MAXBF1
10    IA(I)=I*(I-1)/2
      NORMF=0
      NORMP=0
      DO 20 I=1,60
20    DJI(I)=ONE/(I+I-1)
      DO 30 I=1,10
30    TITLE(I)=BLANK
      IR=7
C     IW=9
      IW=97
      IREAD=IR
      IWRT=IW
C     WRITE (IW,70)
C     WRITE (* ,70)
70    FORMAT(1H /14X,52('*')/14X,'*',50X,'*'
     3    /14X,'*',
     4    6X,'           MICROMOL MARK 5            ',6X,'*'
     5    /14X,'*',50X,'*'
     6    /14X,'*',12X,'IBM PS/2 VERSION FEB 1988 ',12X,'*'
     8    /14X,'*',50X,'*'
     9    /14X,'*',13X,'R.D. Amos & S.M. Colwell.'
     2   ,12X,'*',
     7    /14X,'*',50X,'*'/14X,52('*'))
      CALL TIMIT(2)
      SAFT=TTGO/100.0
      IF (SAFT.LT.THREE) SAFT=THREE
      TIMLIM=TTGO-SAFT
C     DEFAULTS IN OPTIONS BLOCK
      NOPT=3
      NVIB=1
      IREST2=0
      IREST3=0
      VIBSIZ=0.001D0
      ITOL=18
      NRUNS=1
      ICUT=10
      IREST=-1
      NPRINT=-1
      IST=1
      JST=1
      KST=1
      LST=1
      INTLOC=1
      NREC=1
      IBLKM=1
      IBLKD=1
      IBLKS=1
      IFILM=3
      IFILD=4
      IFILS=8
      DO 80 I=1,24
80    ISEX(I)=I
      GUESS=HCORE
      RUNTYP=HFSCF
      SCFTYP=CLOSED
      NSWOP=0
      IFILVA=0
      IBLKA1=0
      LADAPT=.FALSE.
      LSKIP=.FALSE.
C     DEFAULTS IN BLOCK /INFOA/
      ICH=0
      MUL=1
      DO 90 I=1,MAXCEN
90    ANAM(I)=BLANK
      DO 100 I=1,MAXBFN
100   BFLAB(I)=BLANK12
      CFR=ONE
      CFA=PI/180.0
      NVAR=0
      NPAR=1
      NVAL=1
      PARNAM(1)=TET
      PARVAL(1)=DACOS(-ONE/THREE)
C     SCF BLOCK DEFAULT OPTIONS
      LOCK=0
      LOKCYC=999
      NCONV=5
      MAXIT=50
      NCYC=5
      ISCHM=3
      SH1(1)=PT5
      SH1(2)=PT5
      SH2(1)=PT25
      SH2(2)=PT25
      LDAM12=.FALSE.
      LDAM13=.FALSE.
      LDAM23=.FALSE.
      D12=ONE
      D13=ONE
      D23=ONE
      FIXED=.FALSE.
      GAP1(1)=ONE
      GAP1(2)=ONE
      GAP2(1)=PT5
      GAP2(2)=PT5
      LEX=.TRUE.
C     DEFAULT SYMMETRY
      NT=1
      ISO(1,1)=1
      INDEX=1
      NAXIS=0
      DO 110 I=1,216
110   T(I)=ZERO
      DO 120 I=10,21
120   XXX(I)=ZERO
      T(1)=ONE
      T(5)=ONE
      T(9)=ONE
      XXX(10)=ONE
      XXX(14)=ONE
      XXX(18)=ONE
      GROUP=GRPC1
C
C      DEFAULT /PRPSEC/
C
      ISECD1=7
      ISECD2=10
      ISECD3=23
      ISECV=8
      LMOS=.FALSE.
      LNUCL=.TRUE.
      ITYPD1=0
      ITYPD2=0
      ITYPD3=0
      ITYPV=0
      ORIGIN(1)=0.0D0
      ORIGIN(2)=0.0D0
      ORIGIN(3)=0.0D0
      REVISE=.FALSE.
      NUM3=4
      IBLK3=1
      DO 130 I=1,24
130   IODA(I)=-1
      MAXB=32767
      KBLKLA=1
      WRITE (IW,140)
140   FORMAT (' FILES AVAILABLE ')
      DO 160 ISEL=1,16
      CALL ROPEN
      IF (IPOS(ISEL) .GE. 0) WRITE (IW,150) NAM(ISEL)
150   FORMAT (1X, A40)
160   CONTINUE
      RETURN
      END
C      MAIN PROGRAM ---- CALLS MASTER
C  S.M. COLWELL JAN 1985
C Parameterization
C  S.M. Colwell Feb 1988
C This program has been parameterized using the basic parameters:
C  MAXCEN Maximum number of atoms.
C  MAXN3  Maximum number of coordinates (=MAXCEN*3)
C  MAXBFN Maximum number of basis functions.
C  MAXEXP Maximum number of exponentials.
C  MAXSHL Maximum number of shells.
C All other parameters are derived from these.
C Limits:
C  63 <= MAXBFN <= 127   The integral routines will fail if this is violated.
C  MAXBFN < 4.25*MAXCEN  If this is not true you need an alternative
C  parameterization for the common block BIG. This is given but commented out.
C
C      PROGRAM MAIN
      SUBROUTINE MICROM
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'maxcen.inc'
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
C     INTEGER*2 ERLOAD
      CHARACTER*3 FUNIT(10)
      CHARACTER*64 FSTR,RWFFILE,INTFILE,LOCFILE,FILE
      COMMON /FILNAM/ IOUTVB,FSTR,RWFFILE,INTFILE,LOCFILE,LENFIL,FUNIT
      PARAMETER (MAXB=1350)
      PARAMETER (NEXTRA=20,MAXEXT=MAXB+NEXTRA,MAXGRP=49)
      COMMON /GENCTL/NSUB,IMACRO,IPNT,MROT,ICON,LFROZN,LCIONLY,IMOLDEN,
     &LPTALL,LHYBRD,MELE(MAXGRP),MSPIN(MAXGRP),MNORBIT(MAXGRP),
     &MLORBIT(MAXGRP),MWIN(MAXGRP),MSTR(MAXGRP),METHOD(MAXGRP),
     &IBASIS(MAXEXT),NOCC(MAXEXT),NOBIAS,NEPS,NVIR,NOTROT(5000),
     &LTEST,IRESTART,IGUESSREAD,MTHEORY,NGPF,MBASIS,KEY(MAXGRP)
C
C     COMMON /GENCTL/NSUB,IMACRO,IPNT,MROT,ICON,LFROZN,LCIONLY,IMOLDEN,
C    &LPTALL,LHYBRD,MELE(99),MSPIN(99),MNORBIT(99),MLORBIT(99),MWIN(99),
C    &MSTR(99),METHOD(99),IBASIS(9999),NOCC(9999),NOBIAS,NEPS,NVIR,
C    &NOTROT(5000),LTEST,IRESTART,IGUESSREAD,MTHEORY,NGPF,MBASIS,KEY(99)
      COMMON/MAXLEN/MAXQ
      CALL CINIT
      MAXQ=16129
      FILE=FSTR(1:LENFIL)//'.output'
      IF (IPNT.GT.1) THEN
        OPEN(97,FILE=FILE,STATUS='OLD',ACCESS='SEQUENTIAL',
     $  FORM='FORMATTED')
      ELSE
        OPEN(97,FILE=FILE,STATUS='UNKNOWN',ACCESS='SEQUENTIAL',
     $  FORM='FORMATTED')
      ENDIF
C      ERLOAD=LOADER(10,'DATIN_.OVL')
      CALL DATIN
      CALL MASTER
C     WRITE(*,8873)
8873  FORMAT(1H , ' RUN COMPLETED')
       RETURN
      END

      SUBROUTINE INTEG
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'maxcen.inc'
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
C      INTEGER*2 ERLOAD
      LOGICAL  LADAPT,LSKIP
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
C      ERLOAD=LOADER(10,'STAND_.OVL')
      IF(IREST.EQ.0) CALL STANDV
      IF(IREST.LE.1.AND.(.NOT.LSKIP)) CALL JANDK
      LSKIP=.FALSE.
      RETURN
      END
C
      SUBROUTINE SECINI(IBL,NUM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL REVISE
      COMMON/SECTOR/NUM3,IBLK3,
     1IPOS(24),ICLASS(24),ILEN(24),MAXB,KBLKLA,REVISE
      DATA M37/37/
      NUM3=NUM
      IBLK3=IBL
      CALL SEARCH(IBLK3,NUM3)
      REVISE=.TRUE.
      CALL GET(IPOS(1),NW,NUM3)
      IF(NW.NE.M37)CALL HONDER(61)
      RETURN
      END
      SUBROUTINE SECGET(MPOS,MTYPE,IBLOCK)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL REVISE
      COMMON/SECTOR/NUM3,IBLK3,
     1IPOS(24),ICLASS(24),ILEN(24),MAXB,KBLKLA,REVISE
      DATA M1/1/
10    IF(MPOS.LT.M1)CALL HONDER(63)
      IF(IPOS(MPOS).LT.M1)CALL HONDER(64)
      IF(MTYPE.LT.M1)MTYPE=ICLASS(MPOS)
      IF(ICLASS(MPOS).NE.MTYPE)CALL HONDER(65)
20    IBLOCK=IPOS(MPOS)+IBLK3
      RETURN
      END
      SUBROUTINE SECSUM
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*4 IED
      LOGICAL REVISE
      COMMON/SECTOR/NUM3,IBLK3,
     1IPOS(24),ICLASS(24),ILEN(24),MAXB,KBLKLA,REVISE
      COMMON/DISCB/IED(256)
      WRITE(97,30)IED(NUM3),IBLK3,KBLKLA,MAXB
30    FORMAT(//' *SUMMARY OF DUMPFILE ON ',A4,'AT BLOCK',I6/2H *,/
     1' *CURRENT LENGTH=',I6,' BLOCKS'/2H *,/
     2' *MAXIMUM LENGTH=',I6,' BLOCKS'/2H *,/
     3' *SECTION TYPE BLOCK LENGTH')
      DO 60 I=1,24
      IF(IPOS(I))60,60,40
40    M=IBLK3+IPOS(I)
      WRITE(97,50)I,ICLASS(I),M,ILEN(I)
50    FORMAT(2H *,I7,I5,I6,I7)
60    CONTINUE
      RETURN
      END
      SUBROUTINE REVIND
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL REVISE
      COMMON/SECTOR/NUM3,IBLK3,
     1IPOS(24),ICLASS(24),ILEN(24),MAXB,KBLKLA,REVISE
      DATA M37/37/
      IF(REVISE)GO TO 70
      CALL SEARCH(IBLK3,NUM3)
      CALL PUT(IPOS(1),M37,NUM3)
      REVISE=.TRUE.
70    RETURN
      END
      SUBROUTINE SECPUT(MPOS,MTYPE,LENGTH,IBLOCK)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL REVISE
      COMMON/SECTOR/NUM3,IBLK3,
     1IPOS(24),ICLASS(24),ILEN(24),MAXB,KBLKLA,REVISE
      DATA M1/1/
      IF (MPOS.LT.M1) CALL HONDER(63)
      IF(IPOS(MPOS))90,90,100
90    REVISE=.FALSE.
      M=LENGTH+KBLKLA
      IF(M.GT.MAXB)CALL HONDER(71)
      IBLOCK=KBLKLA+IBLK3
      IPOS(MPOS)=KBLKLA
      ICLASS(MPOS)=MTYPE
      ILEN(MPOS)=LENGTH
      KBLKLA=M
      RETURN
100   IF(LENGTH.GT.ILEN(MPOS))CALL HONDER(72)
      IF(MTYPE.NE.ICLASS(MPOS))REVISE=.FALSE.
      ICLASS(MPOS)=MTYPE
      IBLOCK=IPOS(MPOS)+IBLK3
      RETURN
      END
      SUBROUTINE WHTPS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*64 NAME,NAM
      COMMON /STREAM/ IR,IW
      COMMON/DISC/ISEL,ISELR ,ISELW,IREP,ICHEK,IPOS(16),IBLKSZ(16)
      COMMON/DISCB/NAM(16)
C...
C...  PART OF THE BASIC ATMOL ROUTINE SYSTEM
C...
      DO 20 K=1,16
      IF(IPOS(K))20,30,30
   20 CONTINUE
      RETURN
   30 WRITE(IW,40)
   40 FORMAT(/8X,'POSITIONED'/' DDNAME   AT BLOCK')
      DO 60 I=K,16
      IF(IPOS(I))60,50,50
   50 WRITE(IW,70)NAM(I),IPOS(I)
   60 CONTINUE
   70 FORMAT(1X,A40,8X,I5)
      RETURN
      END

      SUBROUTINE HONDER(N)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*1 IA,SPACE,Q
      COMMON/STREAM/IR,IW
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      DATA    SPACE /' '/, Q /'?'/
C
500   WRITE(IW,502) N
502   FORMAT(/1X,'------ HONDO error ',I4)
C
      WRITE(IW,501)
501   FORMAT(' Current input line is')
C
      WRITE(IW,1) IA
1     FORMAT(1X,80A1)
      IF (JREC .EQ. 0) K=1
      IF (JREC .GT. 0) K=ISTRT(JREC)
      IF (JREC .GT. JUMP) K=ISTRT(JUMP)+INUMB(JUMP)+1
      WRITE (IW,1001) (SPACE, I=1,K), Q
1001  FORMAT (80A1)
C
50    CONTINUE
C     STOP
      return
      END
      SUBROUTINE WRT3M(Q,N,M,NMAX,IBLK,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION Q(NMAX,M)
      COMMON/BLKIN/A(511)
      DATA M1,M511/1,511/
      WRITE(*,*)'NUM3 = ',NUM3
      CALL SEARCH(IBLK,NUM3)
      K=M1
      DO 3 J=1,M
      DO 3 I=1,N
      A(K)=Q(I,J)
      K=K+M1
      IF(K.LE.M511) GOTO 3
      K=M1
      CALL PUT(A,M511,NUM3)
3     CONTINUE
      IF(K.GT.M1) CALL PUT(A,M511,NUM3)
      RETURN
      END
      SUBROUTINE READM(Q,N,M,NMAX,IBLK,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION Q(NMAX,M)
      COMMON/BLKIN/A(511)
      DATA M1,M511/1,511/
      CALL SEARCH(IBLK,NUM3)
      CALL GET(A,NW,NUM3)
      K=M1
      DO 2 J=1,M
      DO 2 I=1,N
      Q(I,J)=A(K)
      K=K+M1
      IF(K.LE.M511) GOTO 2
      K=M1
      CALL GET(A,NW,NUM3)
2     CONTINUE
      RETURN
      END
      SUBROUTINE READQ(Q,NWORD,IBLK,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION Q(1)
      CALL SEARCH(IBLK,NUM3)
      J=1
10    CONTINUE
      CALL GET(Q(J),L,NUM3)
      J=J+L
      IF(J.LE.NWORD)GO TO 10
      RETURN
      END
      SUBROUTINE READS(Q,NWORD,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION Q(1)
      J=1
10    CONTINUE
      CALL GET(Q(J),L,NUM3)
      J=J+L
      IF(J.LE.NWORD)GO TO 10
      RETURN
      END
      SUBROUTINE WRT3(Q,NWORD,IBLK,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION Q(*)
      CALL SEARCH(IBLK,NUM3)
      L=511
      J=1
      K=NWORD
10    K=K-511
      IF(K)20,30,30
20    L=K+511
30    CALL PUT(Q(J),L,NUM3)
      J=J+511
      IF(K)40,40,10
40    RETURN
      END
      SUBROUTINE WRT3S(Q,NWORD,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION Q(*)
      L=511
      J=1
      K=NWORD
10    K=K-511
      IF(K)20,30,30
20    L=K+511
30    CALL PUT(Q(J),L,NUM3)
      J=J+511
      IF(K)40,40,10
40    RETURN
      END
C     PRINT  M2
C
      SUBROUTINE PRINT(N1,N2,IW)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'maxcen.inc'
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      DIMENSION NN(48)
      COMMON/SYMTRY/T(216),INVT(24),ISO(MAXSHL,24),NT
     &,NT2,XX(21),INDEX,NAXIS
      IMAX=N1-1
10    IMIN=IMAX+1
      IMAX=IMAX+4
      IF(IMAX.GT.N2) IMAX=N2
      NJ=9*N1-8
      DO 30 J=1,3
      NI=0
      DO 20 I=IMIN,IMAX
      NN(I)=NJ+NI
20    NI=NI+9
      WRITE(IW,40) (T(NN(I)),T(NN(I)+1),T(NN(I)+2),I=IMIN,IMAX)
30    NJ=NJ+3
      WRITE(IW,50)
      IF(IMAX.LT.N2) GO TO 10
40    FORMAT(4X,4(3F10.5,2H *))
50    FORMAT(/)
      RETURN
      END
C  MASTER.
C
C     CALLING ROUTINE FOR ALL SECTIONS OF THE PROGRAM
C
      SUBROUTINE MASTER
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C      INTEGER*2 ERLOAD
      CHARACTER*8 TYPE, TITLE,SCFTYP,RUNTYP,GUESS,CONF
      LOGICAL LADAPT,LSKIP,REVISE
      DIMENSION TYPE(10)
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      DATA TYPE/'HFSCF','FINISH','INTEGRAL','SCF','GRADIENT',
     $'GRADONE','OPTIMIZE','FORCE','PROPERTY','        '/
C
C      ERLOAD=LOADER(9,'INIT_.OVL')
      CALL INIT
20    CONTINUE
C      ERLOAD=LOADER(10,'START_.OVL')
      CALL START
      DO 30 I=1,10
      IF(RUNTYP.EQ.TYPE(I))GOTO 40
30    CONTINUE
      CALL HONDER(15)
C40    GOTO (50,60,80,90,100,100,120,140,150,20) I
40    GOTO (50,60,80,50,50,50,50,50,50,20) I
C50    CALL HFSCF
50    CONTINUE
      WRITE(6,*)'ONLY RUNTYP=INTEGRAL IS POSSIBLE'
      STOP
      GOTO 20
C
80    CONTINUE
      CALL INTEG
      CALL HELFEY
      GOTO 20
C
C90    CALL SCFRUN
C90    CONTINUE
C      WRITE(6,*)'ONLY RUNTYP=INTEGRAL IS POSSIBLE'
C      STOP
C      GOTO 20
C
C100   IF(IREST.GT.3) GOTO 110
C100   CONTINUE
C      CALL HFSCF
C110   CALL HFGRAD
C110   CONTINUE
C      WRITE(6,*)'ONLY RUNTYP=INTEGRAL IS POSSIBLE'
C      STOP
C      GO TO 20
C
C  GEOMETRY OPTIMIZATION
C120   CALL OPTX
C120   CONTINUE
C      WRITE(6,*)'ONLY RUNTYP=INTEGRAL IS POSSIBLE'
C      STOP
C      GO TO 20
C
C  NUMERICAL FORCE CONSTANT EVALUATION
C140   CALL FORCX
C140   CONTINUE
C      WRITE(6,*)'ONLY RUNTYP=INTEGRAL IS POSSIBLE'
C      STOP
C      GO TO 20
C
C
C  ONE-ELECTRON PROPERTIES
C150   CALL PROP1E
C150   CONTINUE
C      CALL ROTAT
C      WRITE(6,*)'ONLY RUNTYP=INTEGRAL IS POSSIBLE'
C      STOP
C      GO TO 20
C
60    CONTINUE
C     CALL CLENUP
      WRITE(IW,70)
70    FORMAT(//////1X,80('-')/30X,'ALL FINISHED'/1X,80('-'))
      RETURN
      END
C  SIMPLIFIED I/O ROUTINES
      SUBROUTINE FMOVE(A,B,NWORD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C  Moves NWORD elements of array A into array B
      DIMENSION A(*),B(*)
      DO 10 I=1,NWORD
      B(I)=A(I)
10    CONTINUE
      RETURN
      END
C
      SUBROUTINE SEARCH(IBLK,IUNIT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),IBLKSZ(16)
      IPOS(IUNIT)=IBLK
      RETURN
      END
C
      SUBROUTINE PUT(C,NWORD,IUNIT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION C(*)
      COMMON/BUFIN/BUFF(511)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),IBLKSZ(16)
      IPOSN=IPOS(IUNIT)
      CALL FMOVE(C,BUFF,NWORD)
      IF(IUNIT.EQ.3) WRITE(*,*)'PUT:  NWORD=',NWORD
      WRITE(IUNIT,REC=IPOSN) (BUFF(I),I=1,511),NWORD
      IPOS(IUNIT)=IPOSN+1
      RETURN
      END
      SUBROUTINE PUT2E(G,INDIJ,INDKL,NWORD,LBUFF,IUNIT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION G(*),INDIJ(*),INDKL(*)
C     WRITE(*,*)'PUT2E: NWORD', NWORD
      WRITE(IUNIT) (G(I),I=1,LBUFF),(INDIJ(I),I=1,LBUFF),
     &             (INDKL(I),I=1,LBUFF),NWORD
      RETURN
      END
C
C   EXTRA SUBROUTINES EXPLICITLY FOR CHARACTER VARIABLES
C   S. M. COLWELL JAN '86
C
      SUBROUTINE READQC(Q,NWORD,IBLK,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*8 Q
      DIMENSION Q(*)
      CALL SEARCH(IBLK,NUM3)
      J=1
10    CONTINUE
      CALL GETCX(Q(J),L,NUM3)
      J=J+L
      IF(J.LE.NWORD)GO TO 10
      RETURN
      END
C
      SUBROUTINE WRT3C(Q,NWORD,IBLK,NUM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*8 Q
      DIMENSION Q(*)
      CALL SEARCH(IBLK,NUM3)
      L=127
      J=1
      K=NWORD
10    K=K-127
      IF(K)20,30,30
20    L=K+127
30    CALL PUTCX(Q(J),L,NUM3)
      J=J+127
      IF(K)40,40,10
40    RETURN
      END
C
      SUBROUTINE FMOVEC(A,B,NWORD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C  Moves NWORD elements of array A into array B
      CHARACTER*8 A,B
      DIMENSION A(*),B(*)
      DO 10 I=1,NWORD
      B(I)=A(I)
10    CONTINUE
      RETURN
      END
C
      SUBROUTINE PUTCX(C,NWORD,IUNIT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*8 C,CUFF
      DIMENSION C(*)
      COMMON/CUFIN/CUFF(127)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),IBLKSZ(16)
      IPOSN=IPOS(IUNIT)
      CALL FMOVEC(C,CUFF,NWORD)
      WRITE(IUNIT,REC=IPOSN) (CUFF(I),I=1,127),NWORD
      IPOS(IUNIT)=IPOSN+1
      RETURN
      END
C
      SUBROUTINE GETCX(C,NWORD,IUNIT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*8 C,CUFF
      DIMENSION C(*)
      COMMON/CUFIN/CUFF(127)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),IBLKSZ(16)
      IPOSN=IPOS(IUNIT)
      READ(IUNIT,REC=IPOSN) (CUFF(I),I=1,127),NWORD
      CALL FMOVEC(CUFF,C,NWORD)
      IPOS(IUNIT)=IPOSN+1
      RETURN
      END
C
      SUBROUTINE GET(C,NWORD,IUNIT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION C(*)
      COMMON/BUFIN/BUFF(511)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),IBLKSZ(16)
      IPOSN=IPOS(IUNIT)
      READ(IUNIT,REC=IPOSN) (BUFF(I),I=1,511),NWORD
      CALL FMOVE(BUFF,C,NWORD)
      IPOS(IUNIT)=IPOSN+1
      RETURN
      END
C
      FUNCTION VECSUM(A,B,N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(*),B(*)
      VECSUM=0.0D0
      DO 10 I=1,N
      VECSUM=VECSUM+A(I)*B(I)
10    CONTINUE
      RETURN
      END
C
      SUBROUTINE SAXPY(N,SA,SX,SY)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION SX(*),SY(*)
      IF(N.LE.0.OR.SA.EQ.0) RETURN
      DO 10 I=1,N
      SY(I)=SA*SX(I)+SY(I)
10    CONTINUE
      RETURN
      END
C
      SUBROUTINE ROPEN
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*64 NAME,NAM
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHECK,IPOS(16),IBLKSZ(16)
      COMMON/DISCB/NAM(16)
      PARAMETER (MAXB=1350)
      PARAMETER (NEXTRA=20,MAXEXT=MAXB+NEXTRA,MAXGRP=49)
      COMMON /GENCTL/NSUB,IMACRO,IPNT,MROT,ICON,LFROZN,LCIONLY,IMOLDEN,
     &LPTALL,LHYBRD,MELE(MAXGRP),MSPIN(MAXGRP),MNORBIT(MAXGRP),
     &MLORBIT(MAXGRP),MWIN(MAXGRP),MSTR(MAXGRP),METHOD(MAXGRP),
     &IBASIS(MAXEXT),NOCC(MAXEXT),NOBIAS,NEPS,NVIR,NOTROT(5000),
     &LTEST,IRESTART,IGUESSREAD,MTHEORY,NGPF,MBASIS,KEY(MAXGRP)
C
C     COMMON /GENCTL/NSUB,IMACRO,IPNT,MROT,ICON,LFROZN,LCIONLY,IMOLDEN,
C    &LPTALL,LHYBRD,MELE(99),MSPIN(99),MNORBIT(99),MLORBIT(99),MWIN(99),
C    &MSTR(99),METHOD(99),IBASIS(9999),NOCC(9999),NOBIAS,NEPS,NVIR,
C    &NOTROT(5000),LTEST,IRESTART,IGUESSREAD,MTHEORY,NGPF,MBASIS,KEY(99)
C     IF(ISEL.EQ.3) GOTO 10
      IF(ISEL.EQ.4) GOTO 10
C     IF(ISEL.EQ.8) GOTO 20
      GOTO 500
10    NAME=NAM(ISEL)
      IF (IPNT.GT.1) THEN
        CLOSE(ISEL)
        OPEN(ISEL,FILE=NAME,STATUS='OLD',ACCESS='DIRECT',
     &  FORM='UNFORMATTED',RECL=4096)
      ELSE
        OPEN(ISEL,FILE=NAME,STATUS='UNKNOWN',ACCESS='DIRECT',
     &  FORM='UNFORMATTED',RECL=4096)
      ENDIF
      IPOS(ISEL)=0
C      GO TO 500
C20    NAME=NAM(ISEL)
C      OPEN(ISEL,FILE=NAME,STATUS='UNKNOWN',ACCESS='DIRECT',
C     XFORM='UNFORMATTED',RECL=4096)
C      IPOS(ISEL)=0
500   CONTINUE
      RETURN
      END
      SUBROUTINE CINIT
C  INITIALISES ALL COMMON BLOCKS TO ZERO
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXBF1=MAXBFN+1,MAXEX4=MAXEXP*4,MAXSH7=MAXSHL*7+2)
      PARAMETER (MAXN2=MAXCEN*2,MAXN31=MAXN3+1,MAXC37=MAXCEN+37)
      PARAMETER (MAXINA=(MAXCEN*29)/2+8)
      PARAMETER (MAXINB=5*MAXCEN+MAXBFN+MAXBFN/2)
      PARAMETER (MAXSYM=251+MAXSHL*12,MAXOPT=7*MAXN3+12)
      PARAMETER (MAXSML=MAXCEN*MAXCEN+40)
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-4096)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.25*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.25*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*4 IWORKB,IDISCB,IBLANK
      CHARACTER*8 QOPTNB,QINFOB,QSYMB,QCUFIN,BLANK
      COMMON/BIG/QBIG1(MAXBIG)
      COMMON/BIGG/QGX(2048),QGY(2048),QGZ(JKBIGG)
      COMMON/BIGK/QK(MXBIGK)
      COMMON/SMALL/QSMALL(MAXSML)
      COMMON/MAXLEN/IMAX
      COMMON/RTDATA/QRTDAT(84),IRTDAT(29)
      COMMON/RTWT/QRTWT(86)
      COMMON/ATMWT/QATMWT(MAXC37)
      COMMON/HERMIT/QHERM(28)
      COMMON/WERMIT/QWERM(28)
      COMMON/WORK/IWORK(83)
      COMMON/WORKB/IWORKB(20)
      COMMON/OPTNS/QOPTNS(51)
      COMMON/OPTNSB/QOPTNB(14)
      COMMON/TIMEX/QTIMEX(6)
      COMMON/SCFBLK/QSCF(23)
      COMMON/INFOA/QINFOA(MAXINA)
      COMMON/INFOB/QINFOB(MAXINB)
      COMMON/TEMP2/QTEMP2(25)
      COMMON/SECTOR/ISECT(77)
      COMMON/BLKIN/QBLKIN(511)
      COMMON/STREAM/ISTRM(2)
      COMMON/MAPPER/IMAP(MAXBF1)
      COMMON/NSHEL/QNSHEL(MAXEX4),INSHEL(MAXSH7)
      COMMON/INCRS/IINCRS(24)
      COMMON/SHLNOS/ISHLNS(22)
      COMMON/SHLINF/QSHLIN(334),ISHLIN(4),RSHLIN(401)
      COMMON/MISC/QMISC(5),IMISC(14)
      COMMON/SETINT/QSETIN(16),ISETIN(34)
      COMMON/INTPR/QINTPR(6),IINTPR(16)
      COMMON/GESBLK/IGESBL(53)
      COMMON/SYMTRY/QSYMTR(MAXSYM)
      COMMON/SYMTRB/QSYMB
      COMMON/DISC/IDISC(37)
      COMMON/DISCB/IDISCB(256)
      COMMON/GRAD/QGRAD(MAXN3)
      COMMON/ALIM/ILIM(MAXN2)
      COMMON/TGRAD/QDGRAD(9)
      COMMON/USEFUL/IUSE(5)
      COMMON/FUNCT/QFUNCT(MAXN31)
      COMMON/OPTMIZ/QOPTMZ(MAXOPT)
      COMMON/BUFIN/QBUFIN(511)
      COMMON/CUFIN/QCUFIN(127)
      COMMON/PRPSEC/IPROPS(10),QPROPS(3)
      COMMON/INTDIP/QDIP(21)
      COMMON/VIB104/QVIB4(5)
      DATA BLANK,IBLANK/'        ','    '/
      GOTO 9999
C Code for MAXBFN<=4.25*MAXCEN
      IF(MAXBFN.GT.425*MAXCEN/100) THEN
        WRITE(97,1919)
1919    FORMAT(1H ,'Wrong Parameterization for BIG for these values '
     1  ,'of MAXBFN and MAXCEN')
        STOP
      ENDIF
C Code for MAXBFN>=4.2*MAXCEN
C      IF(MAXBFN.LT.425*MAXCEN/100) THEN
C       WRITE(97,2929)
C       WRITE(*,2929)
C2929   FORMAT(1H ,'Wrong Parameterization for BIG for these values '
C      1,'of MAXBFN and MAXCEN')
C       STOP
C      ENDIF
      IF ((MAXBFN.LT.63).OR.(MAXBFN.GT.127)) THEN
       WRITE(97,3939)
       WRITE(*,3939)
3939   FORMAT(1H ,'MAXBFN out of range')
       STOP
      ENDIF
9999  CONTINUE
      DO 1 I=1,MAXBIG
1     QBIG1(I)=0.0D0
      DO 2 I=1,MAXSML
2     QSMALL(I)=0.0D0
      IMAX=0
      DO 3 I=1,29
3     IRTDAT(I)=0
      DO 103 I=1,84
103   QRTDAT(I)=0.0D0
      DO 4 I=1,86
4     QRTWT(I)=0.0D0
      DO 5 I=1,MAXC37
5     QATMWT(I)=0.0D0
      DO 6 I=1,28
      QHERM(I)=0.0D0
6     QWERM(I)=0.0D0
      DO 7 I=1,83
7     IWORK(I)=0
      DO 307 I=1,20
307   IWORKB(I)=IBLANK
      DO 8 I=1,51
8     QOPTNS(I)=0.0D0
      DO 308 I=1,14
308   QOPTNB(I)=BLANK
      DO 9 I=1,6
9     QTIMEX(I)=0.0D0
      DO 10 I=1,23
10    QSCF(I)=0.0D0
      DO 11 I=1,MAXINA
11    QINFOA(I)=0.0D0
      DO 311 I=1,MAXINB
311   QINFOB(I)=BLANK
      DO 12 I=1,25
12    QTEMP2(I)=0.0D0
      DO 13 I=1,77
13    ISECT(I)=0
      DO 14 I=1,511
14    QBLKIN(I)=0.0D0
      DO 15 I=1,2
15    ISTRM(I)=0
      DO 16 I=1,MAXBF1
16    IMAP(I)=0
C     JIABO - Should this line be
C     DO 17 I=1,MAXEX4
C     I think so.
C     DO 17 I=MAXEX4
      DO 17 I=1,MAXEX4
17    QNSHEL(I)=0.0D0
      DO 18 I=1,MAXSH7
18    INSHEL(I)=0
      DO 19 I=1,24
19    IINCRS(I)=0
      DO 20 I=1,22
20    ISHLNS(I)=0
      DO 21 I=1,334
21    QSHLIN(I)=0.0D0
      DO 221 I=1,4
221   ISHLIN(I)=0
      DO 121 I=1,401
121   RSHLIN(I)=0.0D0
      DO 522 I=1,5
522   QMISC(I)=0.0D0
      DO 22 I=1,14
22    IMISC(I)=0
      DO 23 I=1,16
23    QSETIN(I)=0.0D0
      DO 123 I=1,34
123   ISETIN(I)=0
      DO 24 I=1,6
24    QINTPR(I)=0.0D0
      DO 124 I=1,16
124   IINTPR(I)=0
      DO 25 I=1,53
25    IGESBL(I)=0
      DO 26 I=1,MAXSYM
26    QSYMTR(I)=0.0D0
      QSYMB=BLANK
      DO 29 I=1,37
29    IDISC(I)=0
      DO 329 I=1,16
329   IDISCB(I)=IBLANK
      DO 31 I=1,MAXN3
31    QGRAD(I)=0.0D0
      DO 32 I=1,MAXN2
32    ILIM(I)=0
      DO 34 I=1,9
34    QDGRAD(I)=0.0D0
      DO 35 I=1,5
35    IUSE(I)=0
      DO 36 I=1,MAXN31
36    QFUNCT(I)=0.0D0
      DO 37 I=1,MAXOPT
37    QOPTMZ(I)=0.0D0
      DO 38 I=1,2048
      QGX(I)=0.0D0
38    QGY(I)=0.0D0
      DO 39 I=1,JKBIGG
39    QGZ(I)=0.0D0
      DO 41 I=1,MXBIGK
41    QK(I)=0.0D0
      DO 50 I=1,511
50    QBUFIN(I)=0.0D0
      DO 51 I=1,127
51    QCUFIN(I)=BLANK
      DO 61 I=1,10
61    IPROPS(I)=0
      DO 161 I=1,3
161   QPROPS(I)=0.0D0
      DO 62 I=1,21
62    QDIP(I)=0.0D0
      DO 63 I=1,5
63    QVIB4(I)=0.0D0
      RETURN
      END
      SUBROUTINE DENFAN(DIJ,CSI,CPI,CDI,CSJ,CPJ,CDJ,
     1    MINI,MAXI,MINJ,MAXJ,IANDJ,DOUBLE,NORM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL IANDJ,DOUBLE,NORM
      DIMENSION DIJ(*)
      SQRT3=DSQRT(3.0D0)
      MAX=MAXJ
      NN=0
      DO 140 I=MINI,MAXI
      GOTO (10,20,60,60,30,60,60,40,60,60),I
10    DUM1=CSI
      GO TO 60
20    DUM1=CPI
      GO TO 60
30    DUM1=CDI
      GO TO 60
40    IF(NORM) DUM1=DUM1*SQRT3
      GO TO 60
60    IF(IANDJ) MAX=I
      DO 140 J=MINJ,MAX
      GO TO (70,90,130,130,100,130,130,110,130,130),J
70    DUM2=DUM1*CSJ
      IF(.NOT.DOUBLE) GO TO 130
      IF(I.GT.1) GO TO 80
      DUM2=DUM2+DUM2
      GO TO 130
80    DUM2=DUM2+CSI*CPJ
      GO TO 130
90    DUM2=DUM1*CPJ
      IF(DOUBLE) DUM2=DUM2+DUM2
      GO TO 130
100   DUM2=DUM1*CDJ
      IF(DOUBLE)  DUM2=DUM2+DUM2
      GO TO 130
110   IF(NORM)    DUM2=DUM2*SQRT3
      GO TO 130
130   NN=NN+1
140   DIJ(NN)=DUM2
      RETURN
      END
      SUBROUTINE DENFAC(DKL,CSK,CPK,CDK,CSL,CPL,CDL,MINK,
     & MAXK,MINL,MAXL,KANDL,DOUBLE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL KANDL,DOUBLE
      DIMENSION DKL(*)
      N=0
      MAX=MAXL
      DO 100 K=MINK,MAXK
      IF(KANDL)MAX=K
      GO TO(10,20,40,40,30,40,40,40,40,40),K
10    DUM1=CSK
      GO TO 40
20    DUM1=CPK
      GO TO 40
30    DUM1=CDK
40    DO 100 L=MINL,MAX
      GO TO(50,70,90,90,80,90,90,90,90,90),L
50    DUM2=DUM1*CSL
      IF(.NOT.DOUBLE) GO TO 90
      IF(K.GT.1) GO TO 60
      DUM2=DUM2+DUM2
      GO TO 90
60    DUM2=DUM2+CSK*CPL
      GO TO 90
70    DUM2=DUM1*CPL
      IF(DOUBLE) DUM2=DUM2+DUM2
      GO TO 90
80    DUM2=DUM1*CDL
      IF(DOUBLE) DUM2=DUM2+DUM2
90    N=N+1
100   DKL(N)=DUM2
      RETURN
      END
C  INDXA  A1
C
      SUBROUTINE INDXA(IJX,IJY,IJZ,IJ,MINI,MAXI,
     &MINJ,MAXJ,IANDJ,INC1,INC2,INC3)
      LOGICAL IANDJ
      DIMENSION IJX(36),IJY(36),IJZ(36)
     &         ,IX(10),IY(10),IZ(10)
      DATA IX/0,1,0,0,2,0,0,1,1,0/
      DATA IY/0,0,1,0,0,2,0,1,0,1/
      DATA IZ/0,0,0,1,0,0,2,0,1,1/
C
      IF(MAXI.GT.10.OR.MAXJ.GT.10) THEN
      WRITE(*,*)'MAXI,MAXJ =',MAXI,MAXJ
      CALL ABORT0('INDXA00001')
      END IF
      IJ=0
      JMAX=MAXJ
      DO 1 I=MINI,MAXI
      NX=IX(I)*INC1+INC3
      NY=IY(I)*INC1+INC3
      NZ=IZ(I)*INC1+INC3
      IF(IANDJ) JMAX=I
      DO 1 J=MINJ,JMAX
      IJ=IJ+1
      IJX(IJ)=NX+IX(J)*INC2
      IJY(IJ)=NY+IY(J)*INC2
      IJZ(IJ)=NZ+IZ(J)*INC2
1     CONTINUE
      RETURN
      END
C  INDXB  A1
C
      SUBROUTINE INDXB(IJGT,MINI,MAXI,
     &MINJ,MAXJ,IANDJ,INC1,INC2,INC3)
      LOGICAL IANDJ
      DIMENSION IJGT(*)
      IJ1=0
      JMAX=MAXJ
      DO 1 I=MINI,MAXI
      IF(IANDJ) JMAX=I
      DO 1 J=MINJ,JMAX
      IJ1=IJ1+1
      IJGT(IJ1)=INC1*(I-MINI)+INC2*(J-MINJ)+INC3
1     CONTINUE
      RETURN
      END
      SUBROUTINE STRUCT(N, C, AZ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      INTEGER P
      LOGICAL  LADAPT,LSKIP,REVISE
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      DIMENSION COV(36),C(3,MAXCEN),AZ(MAXCEN)
      COMMON/SMALL/BL(MAXCEN,MAXCEN),V(8),M(4,8)
C
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      DATA PI /3.14159265358979D0/
C  Covalent radii (mostly from Coulson & McWeeny) for atoms up to argon.
C  Radii invented for atoms above argon.
      DATA COV /0.57D0, 2.50D0,
     1 2.53D0,2.00D0,1.53D0,1.46D0,1.42D0,1.38D0,1.34D0,3.00D0,
     2 2.91D0,2.69D0,2.46D0,2.23D0,2.08D0,1.93D0,1.87D0,3.50D0,
     3 4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,
     4 4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,4.00D0,
     5 4.00D0,4.00D0/
      DATA ZERO,ONE,TWO/0.0D0,1.0D0,2.0D0/
      NM1=N-1
      IF(NM1.LE.0)RETURN
      DO 10 I=1,NM1
      IZ=IDINT(AZ(I)+0.1D0)
      COVI=TWO
      IF (IZ .GT. 0 .AND. IZ .LE. 36) COVI=COV(IZ)
      BL(I,I)=ZERO
      IP1=I+1
      DO 10 J=IP1,N
      BL(I,J)=DSQRT(
     1    (C(1,J)-C(1,I))**2 + (C(2,J)-C(2,I))**2 + (C(3,J)-C(3,I))**2)
      JZ=IDINT(AZ(J)+0.1D0)
      COVJ=TWO
      IF (JZ .GT. 0 .AND. JZ .LE. 18) COVJ=COV(JZ)
      IF (BL(I,J) .GT. (COVI+COVJ)*1.1) BL(I,J)=-BL(I,J)
      BL(J,I)=BL(I,J)
10    CONTINUE
      BL(N,N)=ZERO
      WRITE (IW,20)
20    FORMAT (' BOND LENGTHS IN BOHR (ANGSTROM)')
C
      MAX=5
      P=0
      DO 40 I=1,NM1
      IP1=I+1
      DO 40 J=IP1,N
      IF (BL(I,J) .LE. ZERO) GO TO 40
      P=P+1
      IF (P .LE. MAX) GO TO 30
      CALL PRTBUF(MAX,2, M, V)
      P=1
30    M(1,P)=I
      M(2,P)=J
      V(P)=BL(I,J)
40    CONTINUE
      IF (P .GT. 0) CALL PRTBUF(P,2, M, V)
      IF (P .EQ. 0) WRITE (IW,50)
50    FORMAT ('      NONE')
      WRITE (IW,60)
60    FORMAT (' BOND ANGLES')
C
      MAX=6
      P=0
      DO 100 J=1,NM1
      DO 90 I=1,N
      IF (BL(I,J) .LE. ZERO .OR. J .EQ. I) GO TO 90
      JP1=J+1
      DO 80 K=JP1,N
      IF (BL(I,K) .LE. ZERO .OR. K .EQ. I) GO TO 80
      P=P+1
      IF (P .LE. MAX) GO TO 70
      CALL PRTBUF(MAX,3, M, V)
      P=1
70    M(1,P)=J
      M(2,P)=I
      M(3,P)=K
      COSINE=(BL(I,J)**2+BL(I,K)**2-BL(J,K)**2)/(TWO*BL(I,J)*BL(I,K))
      IF(DABS(COSINE).GT.ONE) COSINE=DSIGN(ONE,COSINE)
      V(P)=(180.0D0/PI)*DACOS(COSINE)
80    CONTINUE
90    CONTINUE
100   CONTINUE
      IF (P .GT. 0) CALL PRTBUF(P,3, M, V)
      IF (P .EQ. 0) WRITE (IW,50)
      WRITE (IW,110)
110   FORMAT (' DIHEDRAL ANGLES')
C
      MAX=5
      P=0
      DO 160 I=1,NM1
      IP1=I+1
      DO 150 J=IP1,N
      IF (BL(I,J) .LE. ZERO) GO TO 150
C  I and J are bonded.  Construct unit vector from I to J.
      A=BL(I,J)
      XIJ=(C(1,J)-C(1,I))/A
      YIJ=(C(2,J)-C(2,I))/A
      ZIJ=(C(3,J)-C(3,I))/A
      DO 140 K=1,N
      IF (BL(I,K) .LE. ZERO .OR. K .EQ. I .OR. K .EQ. J) GO TO 140
C  I and K are bonded.  Construct unit vector in JIK plane, normal
C  to IJ.
      XIK=C(1,K)-C(1,I)
      YIK=C(2,K)-C(2,I)
      ZIK=C(3,K)-C(3,I)
      DOT=XIK*XIJ + YIK*YIJ + ZIK*ZIJ
      XIK=XIK-DOT*XIJ
      YIK=YIK-DOT*YIJ
      ZIK=ZIK-DOT*ZIJ
      A=DSQRT(XIK**2+YIK**2+ZIK**2)
      IF (A .LT. 1.0D-4) GO TO 140
      XIK=XIK/A
      YIK=YIK/A
      ZIK=ZIK/A
      DO 130 L=1,N
      IF (BL(J,L) .LE. ZERO .OR. L .EQ. I .OR. L .EQ. K) GO TO 130
C  J and L are bonded.  Construct unit vector in IJL plane, normal
C  to IJ.
      XJL=C(1,L)-C(1,J)
      YJL=C(2,L)-C(2,J)
      ZJL=C(3,L)-C(3,J)
      DOT=XJL*XIJ + YJL*YIJ + ZJL*ZIJ
      XJL=XJL-DOT*XIJ
      YJL=YJL-DOT*YIJ
      ZJL=ZJL-DOT*ZIJ
      A=DSQRT(XJL**2+YJL**2+ZJL**2)
      IF (A .LT. 1.0D-4) GO TO 140
      XJL=XJL/A
      YJL=YJL/A
      ZJL=ZJL/A
      P=P+1
      IF (P .LE. MAX) GO TO 120
      CALL PRTBUF(MAX,4, M, V)
      P=1
120   M(1,P)=K
      M(2,P)=I
      M(3,P)=J
      M(4,P)=L
      COSINE=XIK*XJL+YIK*YJL+ZIK*ZJL
      SINE=XIJ*(YJL*ZIK-ZJL*YIK)
     1   + YIJ*(ZJL*XIK-XJL*ZIK) + ZIJ*(XJL*YIK-YJL*XIK)
      V(P)=(180.0D0/PI)*DATAN2(SINE,COSINE)
130   CONTINUE
140   CONTINUE
150   CONTINUE
160   CONTINUE
      IF (P .GT. 0) CALL PRTBUF(P,4, M, V)
      IF (P .EQ. 0) WRITE (IW,50)
C
      WRITE (IW,170)
170   FORMAT (///)
      RETURN
      END
      SUBROUTINE PRTBUF(N,K, M, V)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      LOGICAL  LADAPT,LSKIP,REVISE
      CHARACTER*1 BRA,KET
      DIMENSION V(8),M(4,8)
C
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      DATA BRA,KET/'(',')'/
      DO 10 I=1,N
      DO 10 J=2,K
10    IF (M(J,I) .LT. 10) M(J,I)=-M(J,I)
C
      GO TO (20,20,60,80), K
C
20    WRITE (IW,30) (M(1,I), M(2,I), V(I), I=1,N)
30    FORMAT (///5(I2, '-', I2, F9.5, 2X))
      DO 40 I=1,N
40    V(I)=V(I)*0.52917724924D0
      WRITE (IW,50) (BRA, V(I), KET, I=1,N)
50    FORMAT (5(5X, A1, F7.5, A1,2X))
      RETURN
C
60    WRITE (IW,70) (M(1,I), M(2,I), M(3,I), V(I), I=1,N)
70    FORMAT(/1X,5(I2,2('-',I2),F12.6,2X),I2,2('-',I2),F12.6)
      RETURN
C
80    WRITE (IW,90) (M(1,I), M(2,I), M(3,I), M(4,I), V(I), I=1,N)
90    FORMAT (///1X, 5(I2, 3('-', I2), F12.6, 2X))
      RETURN
      END
C  VECOUT  A1
      SUBROUTINE VECOUT(V,E,N,M,NDIM,IW,BFLAB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*12 BFLAB
      DIMENSION BFLAB(2)
      DIMENSION V(NDIM,M),E(2)
      MAX=0
   10 MIN=MAX+1
      MAX=MAX+5
      IF(MAX.GT.M) MAX=M
      WRITE(IW,9999)
      WRITE(IW,9996) (E(J),J=MIN,MAX)
      WRITE(IW,9999)
      WRITE(IW,9998) (J,J=MIN,MAX)
      WRITE(IW,9999)
      DO 20 I=1,N
20    WRITE(IW,9997) I,BFLAB(I),(V(I,J),J=MIN,MAX)
      IF(MAX.LT.M) GO TO 10
9999  FORMAT(/)
9998  FORMAT(15X,5(5X,I3,5X))
9997  FORMAT(I5,2X,A8,7F13.8)
9996  FORMAT(15X,5F13.8)
      RETURN
      END
      SUBROUTINE STVINT
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-14)
      DIMENSION MIN(7),MAX(7)
      COMMON/BIG/XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
     &           ,YJUNK(JNKBIG)
      COMMON/HERMIT/H(28)
      COMMON/WERMIT/W(28)
      DATA MIN /1,2,4,7,11,16,22/
      DATA MAX /1,3,6,10,15,21,28/
      DATA ZERO,ONE /0.0D0,1.0D0/
      XINT=ZERO
      YINT=ZERO
      ZINT=ZERO
      NPTS=(NI+NJ)/2
      IMIN=MIN(NPTS)
      IMAX=MAX(NPTS)
      DO 13 I=IMIN,IMAX
      PX=ONE
      PY=ONE
      PZ=ONE
      DUM=H(I)/T
      PTX=DUM+X0
      PTY=DUM+Y0
      PTZ=DUM+Z0
      AX=PTX-XI
      AY=PTY-YI
      AZ=PTZ-ZI
      BX=PTX-XJ
      BY=PTY-YJ
      BZ=PTZ-ZJ
      GO TO (5,15,14,4,3,2,1),NI
    1 PX=   AX
      PY=   AY
      PZ=   AZ
    2 PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
    3 PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
    4 PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
14    PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
15    PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
    5 GO TO (12,11,10,9,8,7,6),NJ
    6 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
    7 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
    8 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
    9 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
   10 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
   11 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
   12 DUM=W(I)
      XINT=XINT+DUM*PX
      YINT=YINT+DUM*PY
      ZINT=ZINT+DUM*PZ
   13 CONTINUE
      RETURN
      END
      SUBROUTINE FFUN(X,F,NPT,DJI,MADD)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION F(60),MADD(20),DJI(60)
      DIMENSION XMAX(20)
      DATA XMAX/24.0D0,29.0D0,32.0D0,35.0D0,37.0D0,40.0D0,42.0D0,
     &   44.0D0,47.0D0,49.0D0,51.0D0,53.0D0,55.0D0,57.0D0,58.0D0,
     &   59.0D0,59.0D0,59.0D0,59.0D0,59.0D0/
      M=NPT+NPT-1
      FACT=4.8D0+0.4D0*NPT
      IF(X.LT.FACT) GOTO 120
      X2=0.5D0/X
      XINV=X2+X2
      F1=DSQRT(1.5707963267949D0*X2)
      IF(X.GE.XMAX(M)) GOTO 90
      X3=DEXP(-X)
      IF(X.GT.21.6D0) GO TO 30
      IF(X.GT.18.2D0)GOTO 40
      IF(X.GT.(12.0D0+0.1D0*NPT))GOTO 20
      IF(X.GT.(9.2D0+0.2D0*NPT))GOTO 10
      F1=F1+((((((4.6897511375022D-1*XINV-6.9955602298985D-1)*XINV
     1+5.3689283271887D-1)*XINV-3.2883030418398D-1)*XINV
     2+2.4645596956002D-1)*XINV-4.9984072848436D-1)*XINV
     3-3.1501078774085D-6)*X3
      GOTO 50
10    F1= (((-1.8784686463512D-1*XINV+2.2991849164985D-1)*XINV
     1-4.9893752514047D-1)*XINV-2.1916512131607D-5)*X3
     2 + F1
      GO TO 50
20    F1=  (( 1.9623264149430D-1*XINV-4.9695241464490D-1)*XINV
     1-6.0156581186481D-5)*X3 + F1
      GOTO 50
30    F1=F1-X3*X2
      GOTO 50
40    F1=F1-X3*X2*(1.0D0-X2)
50    F(1)=F1
      IF(M) 80,80,60
60     X23=X2*X3
      DO 70 I=1,M
      F(I+1)=F(I)*X2-X23
70    X2=X2+XINV
80    RETURN
90    F(1)=F1
      IF(M)80,80,100
100   DO 110 I=1,M
      F(I+1)=F(I)*X2
110   X2=X2+XINV
      RETURN
120   IF(X-1.0D-10) 130,150,150
130   J=M+1
      DO 140 I=1,J
140   F(I)=DJI(I)
      RETURN
150   IF(X-1.0D-5) 160,180,180
160   J=M+1
      DO 170 I=1,J
170   F(I)=DJI(I)-X*DJI(I+1)
      RETURN
180   X2=X+X
      I=X2+MADD(M)
      J=I
      X3=DEXP(-X)
      F(J+1)=0.0D0
      DO 190 K=1,I
      F(J)=(F(J+1)*X2+X3)*DJI(J)
190   J=J-1
      RETURN
      END
      SUBROUTINE ROOTS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      LOGICAL JUMP
      DIMENSION F(60)
      DIMENSION  ROOT(12),WT(12),BETA(12),GAMMA(12),V(12),D(12)
      COMMON/RTDATA/WHI(15),WLOW(15),RHI(15),RLOW(15),RFAC(15),
     &   AMPS(9),IPOINT(9),MADD(20)
      COMMON/RTWT/X,ROOT,WT,NPT,NPT2,DJI(60)
      DATA M1/1/
      DATA MS2,M24/-2,24/
      DATA EPS/1.0D-12/
      DATA D(1)/1.0D0/
      NPT2=NPT-2
      MPRIME=NPT+NPT-1
      MPRIM2=MPRIME-1
      IFLAG=IPOINT(NPT)
      XMAX=AMPS(NPT)
      IF(X.GT.1.0D-11) GOTO 30
      DO 20 IPT=1,NPT
      ROOT(IPT)=RLOW(IFLAG+IPT)
20     WT(IPT)=WLOW(IFLAG+IPT)
      GOTO 190
30     IF(X.GE.XMAX) GOTO 170
40    CALL FFUN(X,F,NPT,DJI,MADD)
      A=F(2)/F(1)
      IF(NPT.GT.M1) GOTO 50
      ROOT(1)=A
      WT(1)=F(1)
      GOTO 190
50    A1=A
      DO 60 MM=1,MPRIM2
60    F(MM+24)=F(MM+2)-A*F(MM+1)
      IBAS=0
      JBAS=M24
      MAX=MPRIM2
      DO 80 K=2,NPT
      CFAC=F(JBAS+1)
      AX=F(JBAS+2)/CFAC
      BET=A-AX
      BETA(K-1)=BET
      A=AX
      GAM=-CFAC/F(IBAS+1)
      GAMMA(K-1)=GAM
      IF(K.EQ.NPT) GOTO 90
      MAX=MAX+MS2
      DO 70 MM=1,MAX
70    F(IBAS+MM)=BET*F(JBAS+MM+1)+GAM*F(IBAS+MM+2)+F(JBAS+MM+2)
      IBAS=JBAS
80    JBAS=M24-JBAS
90    GAM=0.0D0
      DO 100 K=1,NPT
      R=RLOW(IFLAG+K)/(RFAC(IFLAG+K)*X+1.0D0)
      IF(X.GT.17.0D0)R=RHI(IFLAG+K)/X
      ROOT(K)=R
100   GAM=GAM+R
      EPSI=EPS*AX
      DO 160 MM=1,NPT
      RRR=ROOT(MM)
      R=RRR*AX/GAM
      JUMP=.FALSE.
      DO 140 ICOUNT=1,50
      V(1)=R-A1
      TOP=R+BETA(1)
      DD=V(1)+TOP
      D(2)=DD
      VV=V(1)*TOP+GAMMA(1)
      IF(NPT2)130,130,110
110   V(2)=VV
      DO 120 K=3,NPT
      TOP=R+BETA(K-1)
      DD=TOP*DD+GAMMA(K-1)*D(K-2)+VV
      D(K)=DD
      VV=TOP*VV+GAMMA(K-1)*V(K-2)
120   V(K)=VV
130   SCALE=VV/DD
      R=R-SCALE
      IF(JUMP) GOTO 150
       IF(DABS(SCALE).LT.EPSI) JUMP=.TRUE.
140   CONTINUE
C      WRITE(97,123)X,NPT
123   FORMAT(1X,'NO CONVERGENCE',F15.6,I6)
150   ROOT(MM)=R
       WT(MM)=CFAC/(DD*V(NPT-1))
      AX=AX-R
160   GAM=GAM-RRR
      GOTO 190
170   TOP=1.0D0/X
      SCALE=DSQRT(TOP)
      DO 180 IPT=1,NPT
      ROOT(IPT)=RHI(IFLAG+IPT)*TOP
180   WT(IPT)=WHI(IFLAG+IPT)*SCALE
190   DO 200 I=1,NPT
      RR=ROOT(I)
200   ROOT(I)=RR/(1.0D0-RR)
      RETURN
      END
      SUBROUTINE LIGEN(A,Q,E,IKY,N,NDIM,ITYPE,THRESH)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXSML=MAXCEN*MAXCEN+40,JNKSML=MAXSML-MAXBFN)
      DIMENSION A(*),E(*),Q(NDIM,N),IKY(*)
      COMMON/SMALL/Y(MAXBFN),XJNK(JNKSML)
      DATA ZERO,ONE,HALF/0.0D0,1.0D0,0.5D0/
      DATA TENTH/0.1D0/
      DATA MS1,M1/-1,1/
      DO 20 I=1,N
      DO 10 J=1,N
10    Q(I,J)=ZERO
20    Q(I,I)=ONE
      IF(N.EQ.M1)GOTO 380
30    TE=ZERO
      DO 40 I=2,N
      I1=I+MS1
      IKYI=IKY(I)
      DO 40 J=1,I1
      TEMP=DABS(A(J+IKYI))
      IF(TE.LT.TEMP)TE=TEMP
40    CONTINUE
      IF(TE.LT.THRESH)GOTO 200
      TE=TE*TENTH
      DO 190 I=2,N
      I1=I+MS1
      IP1=I+M1
      IKYI=IKY(I)
      ITEST=N-IP1
      II=I+IKYI
      DO 50 IR=1,N
50    Y(IR)=Q(IR,I)
      DO 170 J=1,I1
      IJ=J+IKYI
      VIJ=A(IJ)
      IF(DABS(VIJ) .LT. TE) GO TO 170
      VII=A(II)*HALF
      J1=J+MS1
      JP1=J+M1
      IKYJ=IKY(J)
      JJ=J+IKYJ
      VJJ=A(JJ)*HALF
      TEMP=VII-VJJ
      TEM=DSQRT(TEMP*TEMP+VIJ*VIJ)
      IF(TEMP)60,70,70
60    TEM=-TEM
70    COST=(TEMP+TEM)/VIJ
      SINT=DSQRT(ONE/(ONE+COST*COST))
      COST=COST*SINT
      TEMP=VII+VJJ
      A(II)=TEMP+TEM
      A(JJ)=TEMP-TEM
      A(IJ)=ZERO
      IF(J1)100,100,80
80    DO 90 K=1,J1
      JJ=K+IKYJ
      VIJ=A(K+IKYI)
      A(K+IKYI)=VIJ*COST+A(JJ)*SINT
90    A(JJ)=A(JJ)*COST-VIJ*SINT
100   IF(I1 .LT. JP1) GO TO 120
      DO 110 K=JP1,I1
      JJ=IKY(K)+J
      VIJ=A(K+IKYI)
      A(K+IKYI)=VIJ*COST+A(JJ)*SINT
110   A(JJ)=A(JJ)*COST-VIJ*SINT
120   IF(ITEST)150,130,130
130   DO 140 K=IP1,N
      IJ=IKY(K)+I
      JJ=J+IKY(K)
      VIJ=A(IJ)
      A(IJ)=VIJ*COST+A(JJ)*SINT
140   A(JJ)=A(JJ)*COST-VIJ*SINT
150   DO 160 K=1,N
      VJJ=Q(K,J)
      Q(K,J)=VJJ*COST-Y(K)*SINT
160   Y(K)=Y(K)*COST+VJJ*SINT
170   CONTINUE
      DO 180 IR=1,N
180   Q(IR,I)=Y(IR)
190   CONTINUE
      GOTO 30
200   DO 300 I=1,N
300   E(I)=A(IKY(I)+I)
      GOTO(210,250,370),ITYPE
C
C     SORT EIGENVALUES INTO INCREASING ORDER
210   DO 240 MIN=1,N
      JM=MIN
      EM=E(MIN)
      DO 220 J=MIN,N
      IF(E(J).GE.EM)GOTO 220
      EM=E(J)
      JM=J
220   CONTINUE
      IF(JM.EQ.MIN)GOTO 240
      TEMP=E(JM)
      E(JM)=E(MIN)
      E(MIN)=TEMP
      DO 230 J=1,N
      TEMP=Q(J,JM)
      Q(J,JM)=Q(J,MIN)
230   Q(J,MIN)=TEMP
240   CONTINUE
      GOTO 370
C
C     SORT INTO DECREASING ORDER
250   DO 280 MAX=1,N
      JM=MAX
      EM=E(MAX)
      DO 260 J=MAX,N
      IF(E(J).LE.EM)GOTO 260
      JM=J
      EM=E(J)
260   CONTINUE
      IF(JM.EQ.MAX)GOTO 280
      TEMP=E(JM)
      E(JM)=E(MAX)
      E(MAX)=TEMP
      DO 270 J=1,N
      TEMP=Q(J,JM)
      Q(J,JM)=Q(J,MAX)
270   Q(J,MAX)=TEMP
280   CONTINUE
C
370   CONTINUE
      RETURN
380   E(1)=A(1)
      RETURN
      END
C  OPTX  A1
      SUBROUTINE STANDV
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-4096)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-1776)
      INTEGER P1,P2,P3
      LOGICAL IANDJ,OUT,NORM,DOUBLE,REVISE
      LOGICAL FIXED,LEX,LDAM12,LDAM13,LDAM23,LDIIS
      CHARACTER*3 FUNIT(10)
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      CHARACTER*8 PARNAM,ATNAM,ANAM
      CHARACTER*12 BFLAB
      CHARACTER*64 FSTR,RWFFILE,INTFILE,LOCFILE,FILE
      COMMON /FILNAM/ IOUTVB,FSTR,RWFFILE,INTFILE,LOCFILE,LENFIL,FUNIT
      COMMON/SCFBLK/EN,ETOT,EHF,SH1(2),SH2(2),GAP1(2),GAP2(2),
     1              D12,D13,D23,CANA,CANB,CANC,FIXED,LEX,
     2              LDAM12,LDAM13,LDAM23,LDIIS,
     3              NCYC,ISCHM,LOCK,MAXIT,NCONV,LOKCYC
      COMMON/TIMEX/TSTART,TI,TX,TIM,TJUNK,TIMMAX
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      COMMON/RTWT/XX,U(12),W(12),NROOTS,IJUNK,ZJUNK(60)
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NNP, NE, NA, NB,
     1             ZAN(MAXCEN),C(3,MAXCEN),
     &             NVAR,NPAR,NVAL,NUQ,
     &             CFR,CFA,KONTYP(MAXCEN),P1(MAXCEN),P2(MAXCEN),
     &             P3(MAXCEN)
     &             ,KR(MAXCEN),KA(MAXCEN),KB(MAXCEN),PARVAL(MAXN3)
     &             ,ZZIN(MAXCEN),X(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1             ATNAM(MAXCEN)
      COMMON/NSHEL/EX(MAXEXP),CS(MAXEXP),CP(MAXEXP),CD(MAXEXP),
     1             KSTART(MAXSHL),KATOM(MAXSHL),KTYPE(MAXSHL),
     3             KNG(MAXSHL),KLOC(MAXSHL),
     2             KMIN(MAXSHL),KMAX(MAXSHL),NSHELL,NSEL2
      COMMON/MAXLEN/MAXQ
      COMMON/BIG/XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
     1          ,S(36),G(36),FT(36),DIJ(400),XIN(400),YIN(400)
     2          ,ZIN(400),IJX(36),IJY(36),IJZ(36),QJNK(JNKBIG)
      COMMON/BIGG/Q(MXBIGG)
      DATA ZERO,PT5,TWO,THREE,FIVE,SEVEN /0.0D0,0.5D0,2.0D0,
     1 3.0D0,5.0D0,7.0D0/
      DATA ONE/1.0D0/
      DATA PI212 /1.1283791670955D0/
      IF(NPRINT.EQ.3) WRITE(IW,10)
C     IF(NPRINT.EQ.3) WRITE( *,10)
10    FORMAT(//,10X,20(1H*),//,10X,'1 ELECTRON INTEGRALS',
     1 //,10X,20(1H*))
C     WRITE(*,'(1H ,//,'' ....... ONE-ELECTRON INTEGRALS ......'')')
      IBLOK=0
      II1=1+NNP
      II2=II1+NNP
      IF(II2.GT.MAXQ)CALL HONDER(999)
      NWORD=NNP
      TOLA=2.30258D0*ITOL
      OUT=NPRINT.EQ.3
      NORM=NORMF.NE.1.OR.NORMP.NE.1
40    DO 50 I=1,NNP
      Q(I)=ZERO
50    Q(II1+I-1)=ZERO
      DO 320 II=1,NSHELL
      I=KATOM(II)
      XI=C(1,I)
      YI=C(2,I)
      ZI=C(3,I)
      I1=KSTART(II)
      I2=I1+KNG(II)-1
      LIT=KTYPE(II)
      MINI=KMIN(II)
      MAXI=KMAX(II)
      LOCI=KLOC(II)-MINI
      DO 320 JJ=1,II
      CUTOFF=10.0D0**(-ICUT)
      TOL=TOLA
      J=KATOM(JJ)
      XJ=C(1,J)
      YJ=C(2,J)
      ZJ=C(3,J)
      J1=KSTART(JJ)
      J2=J1+KNG(JJ)-1
      LJT=KTYPE(JJ)
      MINJ=KMIN(JJ)
      MAXJ=KMAX(JJ)
      LOCJ=KLOC(JJ)-MINJ
      NROOTS=(LIT+LJT)/2
      RR=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
      IANDJ=II.EQ.JJ
      CALL INDXA(IJX,IJY,IJZ,IJ,MINI,MAXI,MINJ,MAXJ,IANDJ,4,1,1)
      IJ=0
      MAX=MAXJ
      DO 90 I=MINI,MAXI
      IF(IANDJ) MAX=I
      DO 90 J=MINJ,MAX
      IJ=IJ+1
      IF(J.GT.1) GO TO 60
      FT(IJ)=THREE
      GO TO 90
60    CONTINUE
      IF(J.GT.4)GO TO 70
      FT(IJ)=FIVE
      GO TO 90
70    FT(IJ)=SEVEN
90    CONTINUE
      DO 100 I=1,IJ
      S(I)=ZERO
100   G(I)=ZERO
      JGMAX=J2
      DO 270 IG=I1,I2
      AI=EX(IG)
      ARRI=AI*RR
      AXI=AI*XI
      AYI=AI*YI
      AZI=AI*ZI
      CSI=CS(IG)
      CPI=CP(IG)
      CDI=CD(IG)
      IF(IANDJ) JGMAX=IG
      DO 270 JG=J1,JGMAX
      AJ=EX(JG)
      AA=AI+AJ
      AAINV=ONE/AA
      DUM=AJ*ARRI*AAINV
      IF(DUM.GT.TOL) GO TO 270
      FAC=DEXP(-DUM)
      CSJ=CS(JG)*FAC
      CPJ=CP(JG)*FAC
      CDJ=CD(JG)*FAC
      AX=(AXI+AJ*XJ)*AAINV
      AY=(AYI+AJ*YJ)*AAINV
      AZ=(AZI+AJ*ZJ)*AAINV
      DOUBLE=IANDJ.AND.IG.NE.JG
      CALL DENFAN(DIJ,CSI,CPI,CDI,CSJ,CPJ,CDJ,MINI,MAXI,
     1    MINJ,MAXJ,IANDJ,DOUBLE,NORM)
      T=DSQRT(AA)
      TINV=ONE/T
      T1=-TWO*AJ*AJ*TINV
      T2=-PT5*TINV
      X0=AX
      Y0=AY
      Z0=AZ
      IN=-4
      DO 140 I=1,LIT
      IN=IN+4
      NI=I
      DO 140 J=1,LJT
      JN=IN+J
      NJ=J
      CALL STVINT
      XIN(JN)=XINT*TINV
      YIN(JN)=YINT*TINV
      ZIN(JN)=ZINT*TINV
      NJ=J+2
      CALL STVINT
      XIN(JN+16)=XINT*T1
      YIN(JN+16)=YINT*T1
      ZIN(JN+16)=ZINT*T1
      NJ=J-2
      IF(NJ.GT.0) GO TO 120
      XINT=ZERO
      YINT=ZERO
      ZINT=ZERO
      GO TO 130
120   CONTINUE
      CALL STVINT
130   N=(J-1)*(J-2)
      DUM=FLOAT(N)*T2
      XIN(JN+32)=XINT*DUM
      YIN(JN+32)=YINT*DUM
      ZIN(JN+32)=ZINT*DUM
140   CONTINUE
      DO 150 I=1,IJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      YZ=YIN(NY)*ZIN(NZ)
      DUM  = YZ*XIN(NX)
      DUM1 = (XIN(NX+16)+XIN(NX+32))*YZ
     1      +(YIN(NY+16)+YIN(NY+32))*XIN(NX)*ZIN(NZ)
     2      +(ZIN(NZ+16)+ZIN(NZ+32))*XIN(NX)*YIN(NY)
      S(I)=S(I)+DIJ(I)*DUM
150   G(I)=G(I)+DIJ(I)*(DUM*AJ*FT(I)+DUM1)
160   CONTINUE
      DUM=PI212/AA
      DO 170 I=1,IJ
170   DIJ(I)=DIJ(I)*DUM
      AAX=AA*AX
      AAY=AA*AY
      AAZ=AA*AZ
190   DO 260 IC=1,NAT
      ZNUC=-ZAN(IC)
      CX=C(1,IC)
      CY=C(2,IC)
      CZ=C(3,IC)
      XX=AA*((AX-CX)**2+(AY-CY)**2+(AZ-CZ)**2)
      CALL ROOTS
      MM=0
      DO 230 K=1,NROOTS
      UU=AA*U(K)
      WW=W(K)*ZNUC
      TT=AA+UU
      T=DSQRT(TT)
      TINV=ONE/TT
      X0=(AAX+UU*CX)*TINV
      Y0=(AAY+UU*CY)*TINV
      Z0=(AAZ+UU*CZ)*TINV
      IN=-4+MM
      DO 220 I=1,LIT
      IN=IN+4
      NI=I
      DO 220 J=1,LJT
      JN=IN+J
      NJ=J
      CALL STVINT
      XIN(JN)=XINT
      YIN(JN)=YINT
220   ZIN(JN)=ZINT*WW
230   MM=MM+16
      DO 250 I=1,IJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DUM=ZERO
      MM=0
      DO 240 K=1,NROOTS
      DUM=DUM+XIN(NX+MM)*YIN(NY+MM)*ZIN(NZ+MM)
      MM=MM+16
 240  CONTINUE
      FACTOR=DUM*DIJ(I)
      G(I)=G(I)+FACTOR
250   CONTINUE
260   CONTINUE
270   CONTINUE
      MAX=MAXJ
      NN=0
      DO 310 I=MINI,MAXI
      LI=LOCI+I
      IN=(LI*(LI-1))/2
      IF(IANDJ) MAX=I
      DO 310 J=MINJ,MAX
      LJ=LOCJ+J
      JN=LJ+IN
      NN=NN+1
      Q(JN)=S(NN)
      Q(II1+JN-1)=G(NN)
      IF(DABS(S(NN)).LT.CUTOFF)Q(JN)=ZERO
      IF(DABS(G(NN)).LT.CUTOFF)Q(II1+JN-1)=ZERO
310   CONTINUE
320   CONTINUE
C     IF(OUT) CALL PRTHS(Q(1),Q(II1),NUM,IW)
C-ROV begin
C     CALL PRTHS2(Q(1),Q(II1),NUM,IW)
C-ROV end
C
C     JLI: 03-22-4
C
C     NBLOK=(NWORD-1)/511+1
C     CALL SECPUT(ISEX(5),5,NBLOK,IBLOK)
C     CALL WRT3(Q(1),NWORD,IBLOK,IFILD)
C     CALL SECPUT(ISEX(6),6,NBLOK,IBLOK)
C     CALL WRT3(Q(II1),NWORD,IBLOK,IFILD)
C
C     JLI: 03-22-4
C
CJiabo writes ONE-ELECTRON INTEGRALS S and H on file unit 81
C
      CALL SENUC(ENUC)
      FILE=FSTR(1:LENFIL)//'.'//FUNIT(1)
C     IAO1E=81
      CALL GETIOUNIT('IAO1E   ',IAO1E)
      OPEN(UNIT=IAO1E,FILE=FILE,STATUS='UNKNOWN',
     1ACCESS='SEQUENTIAL',FORM='UNFORMATTED')
      NUMSQ=NUM*(NUM+1)/2
      REWIND(IAO1E)
      WRITE(IAO1E)NUMSQ
      WRITE(IAO1E)(Q(I),I=1,NUMSQ)
      WRITE(IAO1E)(Q(II1-1+I),I=1,NUMSQ)
      CLOSE(IAO1E)
C     CLOSE(71)
C
C
      LDA(ISEX(5))=NWORD
      LDA(ISEX(6))=NWORD
      CALL REVIND
C     WRITE(IW,420)
C     WRITE( *,420)
420   FORMAT(1H ,/,' ....... END OF ONE-ELECTRON INTEGRALS ......',//)
      IF(NPRINT.EQ.-5) CALL TIMIT(3)
      IF(NPRINT.NE.-5) CALL TIMIT(1)
      IF(TIM.LT.TIMLIM) RETURN
      WRITE(IW,430)
      WRITE( *,430)
430   FORMAT(//1X,'INSUFFICIENT TIME TO CONTINUE, RESTART')
C     CALL CLENUP
      STOP
      END
      SUBROUTINE JANDK
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-4096)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-7536)
      LOGICAL LAB,LABC,LABCD
      LOGICAL SKIPA,SKIPB,SKIPC,NPSYM
      LOGICAL OUT,IANDJ,KANDL,SAME,NORM,DTRUIJ,DTRUKL
      LOGICAL RESTAR,REVISE,LADAPT,LSKIP
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      CHARACTER*8 PARNAM,ATNAM,ANAM,GROUP
      CHARACTER*12 BFLAB
      INTEGER P1,P2,P3
      DIMENSION MI(24),MJ(24),MK(24),M0(24)
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL,
     1            SAME,NORM,DTRUIJ,DTRUKL,KLUNK(5)
      COMMON/NSHEL/EX(MAXEXP),CS(MAXEXP),CP(MAXEXP),CD(MAXEXP),
     1             KSTART(MAXSHL),KATOM(MAXSHL),KTYPE(MAXSHL),
     3             KNG(MAXSHL),KLOC(MAXSHL),
     2             KMIN(MAXSHL),KMAX(MAXSHL),NSHELL,NSEL2
      COMMON/SHLNOS/QQ4,LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1              MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL,
     2              NIJ,IJ,KL,IJKL
      COMMON/SYMTRY/T(216),INVT(24),ISO(MAXSHL,24),NT
     &             ,NT2,XX(21),INDEX,NAXIS
      COMMON/SYMTRB/GROUP
      COMMON/BIG/AAA(3600),IJDEN(400),IK(400),IJX(36),IJY(36)
     1          ,IJZ(36),KLX(36),KLY(36),KLZ(36),DIJ(400)
     2          ,DKL(400),IJGT(36),KLGT(36),IGT(1296*4)
     3          ,YJUNK(JNKBIG)
      COMMON/INCRS/KLN2,KLN1,IJN2,IJN1,INC1,INC2,INC3,INC4,INC5,
     1             LENDD,IOFF,IXI,IYI,IZI,IC6,IC7,IC8,IC9,IJUNK(6)
      COMMON/TIMEX/TSTART,TI,TX,TIM,TTGO,TIMMAX
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      COMMON/MAXLEN/MAXQ
      COMMON/INFOA/NAT,ICH,MUL,NUM,NX,NE,NA,NB,ZAN(MAXCEN),C(3,MAXCEN)
     &            ,NVAR,NPAR,NVAL,NUQ
     &            ,CFR,CFA,KONTYP(MAXCEN),P1(MAXCEN),P2(MAXCEN),
     &             P3(MAXCEN)
     &            ,KR(MAXCEN),KA(MAXCEN),KB(MAXCEN),PARVAL(MAXN3)
     &            ,ZIN(MAXCEN),X(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1             ATNAM(MAXCEN)
C     WRITE(*,'(1H ,//,'' ....... TWO-ELECTRON INTEGRALS ......'',//)')
      RESTAR=IREST.EQ.1
      TIME1 = XCLOCK()
      CALL TIMIT(3)
      TIM0=TIM
      TIM1=TIM
      TIM2=TIM
      DTMAX=1.0
      CALL DEBUT
      IF(IST.GT.NSHELL) RETURN
      DO 400 II=IST,NSHELL
      J1=1
10    FORMAT(' I,J,K,L =',4I3,' NREC= ',I5,' ILC= ',I5
     1 ,' DEL(T) =',F10.2,' T=' ,F12.2)
      DO 20 IT=1,NT
      ID=ISO(II,IT)
      IF(ID.GT.II) GO TO 390
      MI(IT)=ID
20    CONTINUE
      J0=J1
      IF(RESTAR) J0=JST
      KTPI=KTYPE(II)-1
      ICENI=KATOM(II)
      DO 380 JJ=J0,II
      JST=J1
      DO 50 IT=1,NT
      ID=MI(IT)
      JD=ISO(JJ,IT)
      MJ(IT)=JD
      IF(ID.GE.JD) GO TO 30
      ND=ID
      ID=JD
      JD=ND
30    IF(ID-II) 50,40,380
40    IF(JD-JJ) 50,50,380
50    CONTINUE
      K0=J1
      IF(RESTAR) K0=KST
      KTPJ=KTYPE(JJ)-1+KTPI
      LAB=KATOM(JJ).EQ.ICENI
      DO 370 KK=K0,JJ
      KST=J1
      DO 110 IT=1,NT
      ID=MI(IT)
      JD=MJ(IT)
      KD=ISO(KK,IT)
      MK(IT)=KD
60    IF(ID.GE.JD) GO TO 70
      ND=ID
      ID=JD
      JD=ND
70    IF(JD.GE.KD) GO TO 80
      ND=JD
      JD=KD
      KD=ND
      GO TO 60
80    IF(ID-II) 110,90,370
90    IF(JD-JJ) 110,100,370
100   IF(KD-KK) 110,110,370
110   CONTINUE
      KTPK=KTYPE(KK)-1+KTPJ
      LABC=LAB.AND.KATOM(KK).EQ.ICENI
      L0=J1
      IF(RESTAR) L0=LST
      DO 360 LL=L0,KK
C     WRITE(*,*)'I,J,K,L SHELLS:=',II,JJ,KK,LL
      KTPL=KTYPE(LL)-1+KTPK
      LABCD=LABC.AND.KATOM(LL).EQ.ICENI
      IF(LABCD.AND.(((KTPL/2)*2).NE.KTPL))GOTO 360
120   CONTINUE
      RESTAR=.FALSE.
      LST=J1
      N4=0
      DO 210 IT=1,NT
      ID=MI(IT)
      JD=MJ(IT)
      KD=MK(IT)
      LD=ISO(LL,IT)
130   IF(ID.GE.JD) GO TO 140
      ND=ID
      ID=JD
      JD=ND
140   IF(JD.GE.KD) GO TO 150
      ND=JD
      JD=KD
      KD=ND
      GO TO 130
150   IF(KD.GE.LD) GO TO 160
      ND=KD
      KD=LD
      LD=ND
      GO TO 140
160   IF(ID-II) 210,170,360
170   IF(JD-JJ) 210,180,360
180   IF(KD-KK) 210,190,360
190   IF(LD-LL) 210,200,360
200   N4=N4+1
      M0(N4)=IT
210   CONTINUE
      SKIPA=JJ.EQ.KK
      SKIPB=(II.EQ.KK).OR.(JJ.EQ.LL)
      SKIPC=(II.EQ.JJ).OR.(KK.EQ.LL)
      NPSYM=.FALSE.
      IF(SKIPA.OR.SKIPB.OR.SKIPC) GO TO 300
      NPSYM=.TRUE.
      DO 260 M=1,N4
      IT=M0(M)
      IH=MI(IT)
      JH=MJ(IT)
      IF(JH.GT.IH) GO TO 220
      ID=IH
      JD=JH
      GO TO 230
220   ID=JH
      JD=IH
230   IF(.NOT.SKIPA) SKIPA=(ID.EQ.II.AND.JD.EQ.KK).OR.
     1                     (ID.EQ.JJ.AND.JD.EQ.LL)
      IF(.NOT.SKIPB) SKIPB=(ID.EQ.II.AND.JD.EQ.LL).OR.
     1                     (ID.EQ.JJ.AND.JD.EQ.KK)
      IF(SKIPA.AND.SKIPB) GO TO 270
      KH=MK(IT)
      IF(KH.GT.IH) GO TO 240
      ID=IH
      KD=KH
      GO TO 250
240   ID=KH
      KD=IH
250   IF(.NOT.SKIPC) SKIPC=(ID.EQ.II.AND.KD.EQ.LL).OR.
     1                     (ID.EQ.JJ.AND.KD.EQ.KK)
      IF(SKIPA.AND.SKIPC) GO TO 280
      IF(SKIPB.AND.SKIPC) GO TO 290
260   CONTINUE
      GO TO 300
270   SKIPC=.TRUE.
      GO TO 300
280   SKIPB=.TRUE.
      GO TO 300
290   SKIPA=.TRUE.
300   CONTINUE
      Q4=FLOAT(NT)/FLOAT(N4)
      IEXCH=1
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      QQ4=Q4
      IF(SKIPA.AND.NPSYM) QQ4=QQ4+Q4
      IF(SKIPB.AND.NPSYM) QQ4=QQ4+Q4
      IOFF=0
      GO TO 330
310   IF(SKIPA) GO TO 320
      IEXCH=2
      ISH=II
      JSH=KK
      KSH=JJ
      LSH=LL
      QQ4=Q4
      IF(SKIPC.AND.NPSYM) QQ4=QQ4+Q4
      GO TO 330
320   IF(SKIPB.OR.SKIPC) GO TO 350
      IEXCH=3
      ISH=II
      JSH=LL
      KSH=JJ
      LSH=KK
      QQ4=Q4
330   CONTINUE
      CALL SHELLS(1,ISH,JSH,KSH,LSH)
      CALL IJPRIM
      CALL SHELLS(2,ISH,JSH,KSH,LSH)
      IF(NIJ.EQ.0)GOTO 340
      CALL GENRAL
340   CONTINUE
      GO TO (310,320,350),IEXCH
350   CONTINUE
      CALL TIMIT(3)
      DT0=TIM-TIM0
      DT2=TIM-TIM2
      TIM2=TIM
      IF(DT2.GT.DTMAX) DTMAX=DT2
      IF((TIMLIM-TIM).GT.(DTMAX*1.5+8.0)) GOTO 360
      CALL FINAL(0,II,JJ,KK,LL)
360   CONTINUE
370   CONTINUE
      IF((TIMLIM-TIM).LT.(DTMAX*2.0+10.0))CALL FINAL(2,II,JJ,KK,LL)
380   CONTINUE
390   CALL TIMIT(3)
      DT0=TIM-TIM0
      DT1=TIM-TIM1
      TIM1=TIM
C     IF(NPRINT.NE.-5) WRITE(IW,10) II,II,II,II,NREC,ICOUNT,DT1,DT0
C     WRITE(* ,10) II,II,II,II,NREC,ICOUNT,DT1,DT0
 400  CONTINUE
      CALL FINAL(1,II,JJ,KK,LL)
      CALL TIMIT(3)
      TIME2 = XCLOCK()
      DTIM=TIME2-TIME1
      WRITE( *,410) DTIM
      IF(NPRINT.NE.-5) WRITE(IW,410) DTIM
410   FORMAT(1X,'Time for integral evaluation',15X,F10.3,/)
      RETURN
      END
      SUBROUTINE DEBUT
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      INTEGER*2 IJ,KL
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      LOGICAL  LADAPT,LSKIP,REVISE
      LOGICAL OUT,IANDJ,KANDL,SAME,NORM,DTRUIJ,DTRUKL
      COMMON/BLKIN/XX(340),IJ(340),KL(340),NWORD,NJUNK
      COMMON/INTPR/QINT(3),VALINT(3),JCINT(16)
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL
     1          ,SAME,NORM,DTRUIJ,DTRUKL,KLUNK(5)
      DATA ONE,TEN,E /1.0D0,10.0D0,2.30258D0/
      OUT=NPRINT.EQ.4
      IF(OUT) WRITE( *,10)
      IF(OUT) WRITE(IW,10)
10    FORMAT(//,10X,20(1H*),//,10X,'2 Electron integrals',
     1 //,10X,20(1H*))
      NORM=NORMF.NE.1.OR.NORMP.NE.1
      NINTMX=340
      JCINT(1)=0
      CUTOFF=ONE/(TEN**ICUT)
      TOL(1)=E*(ITOL+1)
      TOL(2)=E*(ITOL-1)
      TOL(3)=ONE/TEN**(ITOL+1)
      TOL(4)=ONE/TEN**(ITOL-1)
   35 IF(IREST.NE.1) GOTO 60
      ICOUNT=INTLOC
      IPOSM=IBLKM+(NREC-1)
      WRITE( *,40) IFILM,IBLKM,NREC,ICOUNT,IST,JST,KST,LST,IPOSM
      WRITE(IW,40) IFILM,IBLKM,NREC,ICOUNT,IST,JST,KST,LST,IPOSM
40    FORMAT(//10X,'Integrals (re-)started'//10X,'integrals are on',
     1' file  ',I3,'  from block  ',I5
     2/10X,'NREC= ',I4,' ICOUNT= ',I4,' IST= ',I4,' JST= ',I4,' KST= ',
     3I4,' LST= ',I4
     4/10X,'restarting at block',I6)
      CALL SEARCH(IPOSM,IFILM)
      IF(INTLOC.EQ.1) GOTO 50
      CALL GET(XX,NW,IFILM)
      CALL SEARCH(IPOSM,IFILM)
50    CONTINUE
      CALL WHTPS
      RETURN
60    IST=1
      JST=1
      KST=1
      LST=1
      INTLOC=1
      NREC=1
      ICOUNT=1
      IREST=1
      CALL SEARCH(IBLKM,IFILM)
      IPOSM=1
      RETURN
      END
      SUBROUTINE FINAL(INDEX,II,JJ,KK,LL)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      LOGICAL OUT,IANDJ,KANDL,SAME,NORM,DTRUIJ,DTRUKL
      LOGICAL  LADAPT,LSKIP,REVISE
      INTEGER*2 IOUT,JOUT
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL
     1           ,SAME,NORM,DTRUIJ,DTRUKL,KLUNK(5)
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
C     COMMON/BLKIN/XX(340),IOUT(340),JOUT(340),NWORD,NJUNK
C     COMMON/LBLKIN/GG(340),INDEX4(340),NWORDG,NSKIPG
      COMMON/LBLKIN/GG(10000),INDIJ(10000),INDKL(10000),NWORDG,NSKIPG
      COMMON/NSHEL/EX(MAXEXP),CS(MAXEXP),CP(MAXEXP),CD(MAXEXP),
     1             KSTART(MAXSHL),KATOM(MAXSHL),KTYPE(MAXSHL),
     3             KNG(MAXSHL),KLOC(MAXSHL),
     2             KMIN(MAXSHL),KMAX(MAXSHL),NSHELL,NSEL2
      COMMON/SHLNOS/QQ4,LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1              MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL,
     2              NIJ,IJ,KL,IJKL
      COMMON/INTPR/Q(3),V(3),JC,N1(3),J1(3),J2(3),J3(3),J4(3)
      DATA M0,M511/0,511/
      IBLOK=0
C     LBUFF=10000
      LBUFF=4095
      CALL GETIOUNIT('IAO2E   ',IAO2E)
      IF(JC.EQ.0.OR.INDEX.EQ.2) GO TO 20
      WRITE(IW,10)(J1(M),J2(M),J3(M),J4(M),Q(M),N1(M),V(M),M=1,JC)
10    FORMAT(3(4I3,F6.3,I5,E20.12))
20    CONTINUE
C     WRITE(*,80) IST,JST,KST,LST
      ISTR=IST
      JSTR=JST
      KSTR=KST
      LSTR=LST
      IF(INDEX.EQ.1) GO TO 60
      IST=II
      JST=JJ
      KST=KK
      LST=LL+1
      IF(LST.LE.KK) GO TO 30
      LST=1
      KST=KK+1
      IF(KST.LE.JJ) GO TO 30
      KST=1
      JST=JJ+1
      IF(JST.LE.II) GO TO 30
      JST=1
      IST=II+1
      IF(IST.GT.NSHELL) RETURN
30    INTLOC=ICOUNT
      IREST=1
      CALL SECGET(ISEX(24),24,IBLOK)
      CALL WRT3C(TITLE,LDA(ISEX(24)),IBLOK,IFILD)
      CALL SECGET(ISEX(4),4,IBLOK)
      CALL WRT3(VIBSIZ,LDA(ISEX(4)),IBLOK,IFILD)
      IF(INDEX.EQ.2)GOTO 120
      WRITE( *,40) NREC,INTLOC,IST,JST,KST,LST
      WRITE(IW,40) NREC,INTLOC,IST,JST,KST,LST
40    FORMAT(//10X,'Insufficient time to complete evaluations',
     1' of two-electron integrals'
     2//10X,'NREC= ',I6,' INTLOC= ',I4,' IST= ',I4,' JST= ',I4,
     3' KST= ',I4,' LST= ',I4)
      IF(INTLOC.EQ.1) GOTO 50
      IPOSM=IBLKM+(NREC-1)
      CALL SEARCH(IPOSM,IFILM)
      NWORD =INTLOC-1
C     CALL PUT(XX,M511,IFILM)
      CALL PUT2E(GG,INDIJ,INDKL,NWORD,LBUFF,IAO2E)
50    CONTINUE
      STOP
60    CONTINUE
      NWORD =ICOUNT-1
      IST=1
      JST=1
      KST=1
      LST=1
      IREST=2
      IPOSM=IBLKM+(NREC-1)
      CALL SEARCH(IPOSM,IFILM)
      IF(ICOUNT.EQ.1) GOTO 70
C     CALL PUT(XX,M511,IFILM)
      CALL PUT2E(GG,INDIJ,INDKL,NWORD,LBUFF,IAO2E)
      IPOSM=IPOSM+1
70    NWORD=0
      MBLKM=IPOSM
C
C     WRITE THE LAST RECORD WITH ZERO INTEGRAL
C
      CALL PUT2E(GG,INDIJ,INDKL,M0,LBUFF,IAO2E)
      NINT=LBUFF*(NREC-1)+ICOUNT-1
      WRITE( *,100) NINT
C     WRITE(IW,100) NINT
C     WRITE(* ,90) NREC,ICOUNT
C     WRITE(IW,90) NREC,ICOUNT
C     WRITE( *,80) IST,JST,KST,LST
C     WRITE(IW,80) IST,JST,KST,LST
80     FORMAT(' IST= ',I4,' JST= ',I4,' KST= ',I4,' LST= ',I4)
C     WRITE( *,110) IREST
C     WRITE(IW,110)IREST
90     FORMAT(' There are ',I7,' records of two-electron',
     1' integrals,  INTLOC=',I4)
100   FORMAT(' Total number of two-electron integrals = ',I12)
110   FORMAT('  End of two-electron integrals ,IREST=',I4)
      INTLOC=1
      NREC=1
      ICOUNT=1
      CALL SECGET(ISEX(24),24,IBLOK)
      CALL WRT3C(TITLE,LDA(ISEX(24)),IBLOK,IFILD)
      CALL SECGET(ISEX(4),4,IBLOK)
      CALL WRT3(VIBSIZ,LDA(ISEX(4)),IBLOK,IFILD)
       CALL WHTPS
      RETURN
120   IST=ISTR
      JST=JSTR
      KST=KSTR
      LST=LSTR
      RETURN
      END
      SUBROUTINE SHELLS(NELEC,ISH,JSH,KSH,LSH)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-7536)
      LOGICAL OUT,IANDJ,KANDL,SAME
      LOGICAL NORM,DTRUIJ,DTRUKL
      INTEGER P1,P2,P3
      CHARACTER*8 PARNAM,ATNAM,ANAM
      CHARACTER*12 BFLAB
      COMMON/INFOA/NAT,ICH,MUL,NUM,NX,NE,NA,NB,ZAN(MAXCEN),C(3,MAXCEN),
     &             NVAR,NPAR,NVAL,NUQ,
     &             CFR,CFA,KONTYP(MAXCEN),P1(MAXCEN),P2(MAXCEN),
     &             P3(MAXCEN)
     &             ,KR(MAXCEN),KA(MAXCEN),KB(MAXCEN),PARVAL(MAXN3)
     &             ,ZIN(MAXCEN),X(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1             ATNAM(MAXCEN)
      COMMON/RTWT/XX,U(12),W(12),NROOTS,JUNK,ZJUNK(60)
      COMMON/NSHEL/EX(MAXEXP),CS(MAXEXP),CP(MAXEXP),CD(MAXEXP),
     1             KSTART(MAXSHL),KATOM(MAXSHL),KTYPE(MAXSHL),
     3             KNG(MAXSHL),KLOC(MAXSHL),
     2             KMIN(MAXSHL),KMAX(MAXSHL),NSHELL,NSEL2
      COMMON/INCRS/KLN2,KLN1,IJN2,IJN1,INC1,INCL,INCK,INCJ,INCI,
     1             LENDD,IOFF,IXI,IYI,IZI,INC6,IC7,IC8,IC9,NGM
     2             ,KUNK(5)
      COMMON/BIG/AAA(3600),IJDEN(400),IK(400),IJX(36),IJY(36)
     1          ,IJZ(36),KLX(36),KLY(36),KLZ(36),DIJ(400),DKL(400)
     2          ,IJGT(36),KLGT(36),IGT(1296*4),YJUNK(JNKBIG)
      COMMON/BIGG/QQ(MAXNX2),QQQ(JKBIGG)
      COMMON/SHLNOS/QQ4,LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1              MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL,
     2              NIJ,IJ,KL,IJKL
      COMMON/SHLINF/GA(20),CSA(20),CPA(20),CDA(20),
     1              GB(20),CSB(20),CPB(20),CDB(20),
     2              GC(20),CSC(20),CPC(20),CDC(20),
     3              GD(20),CSD(20),CPD(20),CDD(20),
     4              AX,AY,AZ,BX,BY,BZ,RAB,CX,CY,CZ,DX,DY,DZ,RCD,
     5              NGA,NGB,NGC,NGD,EXIJ(400),RSMALL
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL,SAME
     1           ,NORM,DTRUIJ,DTRUKL,KLUNK(5)
      IF(NELEC.EQ.2) GO TO 30
      IANDJ=ISH.EQ.JSH
      DTRUIJ=.FALSE.
      I=KATOM(ISH)
      AX=C(1,I)
      AY=C(2,I)
      AZ=C(3,I)
      I1=KSTART(ISH)
      I2=I1+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)-MINI
      NGA=0
      DO 10 I=I1,I2
      NGA=NGA+1
      GA(NGA)=EX(I)
      CSA(NGA)=CS(I)
      CPA(NGA)=CP(I)
10    CDA(NGA)=CD(I)
      J=KATOM(JSH)
      BX=C(1,J)
      BY=C(2,J)
      BZ=C(3,J)
      J1=KSTART(JSH)
      J2=J1+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)-MINJ
      NGB=0
      DO 20 J=J1,J2
      NGB=NGB+1
      GB(NGB)=EX(J)
      CSB(NGB)=CS(J)
      CPB(NGB)=CP(J)
      CDB(NGB)=CD(J)
20    CONTINUE
      RAB=((AX-BX)**2+(AY-BY)**2+(AZ-BZ)**2)
      DTRUIJ=MAXI.GT.4.OR.MAXJ.GT.4
      GOTO 210
30    KANDL=KSH.EQ.LSH
      SAME=ISH.EQ.KSH.AND.JSH.EQ.LSH
      DTRUKL=.FALSE.
      K=KATOM(KSH)
      CX=C(1,K)
      CY=C(2,K)
      CZ=C(3,K)
      K1=KSTART(KSH)
      K2=K1+KNG(KSH)-1
      LKT=KTYPE(KSH)
      MINK=KMIN(KSH)
      MAXK=KMAX(KSH)
      LOCK=KLOC(KSH)-MINK
      NGC=0
      DO 40 K=K1,K2
      NGC=NGC+1
      GC(NGC)=EX(K)
      CSC(NGC)=CS(K)
      CPC(NGC)=CP(K)
40    CDC(NGC)=CD(K)
      L=KATOM(LSH)
      DX=C(1,L)
      DY=C(2,L)
      DZ=C(3,L)
      L1=KSTART(LSH)
      L2=L1+KNG(LSH)-1
      LLT=KTYPE(LSH)
      MINL=KMIN(LSH)
      MAXL=KMAX(LSH)
      LOCL=KLOC(LSH)-MINL
      NGD=0
      DO 50 L=L1,L2
      NGD=NGD+1
      GD(NGD)=EX(L)
      CSD(NGD)=CS(L)
      CPD(NGD)=CP(L)
50    CDD(NGD)=CD(L)
      NROOTS=(LIT+LJT+LKT+LLT-2)/2
      RCD=((CX-DX)**2+(CY-DY)**2+(CZ-DZ)**2)
      DTRUKL=MAXK.GT.4.OR.MAXL.GT.4
      NGL=MAXL-MINL+1
      NGK=MAXK-MINK+1
      NGJ=MAXJ-MINJ+1
      NGI=MAXI-MINI+1
      INCL=1
      INCK=NGL
      INCJ=INCK*NGK
      INCI=INCJ*NGJ
      LENDD=INCI*NGI
70    CONTINUE
      IF(MOD(LENDD,4).EQ.0)LENDD=LENDD+1
      CALL INDXB(IJGT,MINI,MAXI,MINJ,MAXJ,IANDJ,INCI,INCJ,1)
      CALL INDXB(KLGT,MINK,MAXK,MINL,MAXL,KANDL,INCK,INCL,0)
      KLN2=1
      KLN1=LLT
      IJN2=KLN1*LKT
      IJN1=IJN2*LJT
      INC1=IJN1*LIT
      IF(MOD(INC1,4).EQ.0)INC1=INC1+1
      CALL INDXA(IJX,IJY,IJZ,IJ,MINI,MAXI,MINJ,MAXJ,IANDJ,
     1IJN1,IJN2,1)
      CALL INDXA(KLX,KLY,KLZ,KL,MINK,MAXK,MINL,MAXL,KANDL,
     1KLN1,KLN2,0)
      MAX=KL
      DO 80 I=1,IJ
      IF(SAME) MAX=I
80    IK(I)=MAX
      IXI=LENDD
      IYI=IXI+LENDD
      IZI=IYI+LENDD
      IJKL=0
      DO 90 I=1,IJ
      MAX=IK(I)
      DO 90 K=1,MAX
      IJKL=IJKL+1
      IGT(IJKL)=IJGT(I)+KLGT(K)
      IGT(IXI+IJKL)=IJX(I)+KLX(K)
      IGT(IYI+IJKL)=IJY(I)+KLY(K)
      IF(IZI+IJKL.GT.1296) THEN
C        WRITE(*,*)'IZI,IJKL, LENDD =',IZI,IJKL,LENDD
C        CALL ABORT0('SHELLS0001')
      END IF
      IGT(IZI+IJKL)=IJZ(I)+KLZ(K)
90    CONTINUE
100   INC6=1
      IC7=LENDD+1
      IC8=IC7+INC1
      IC9=IC8+INC1
      INC1=INC1*3
      DO 200 I=1,LENDD
200   QQ(I)=0.0D0
      IXI=IXI+1
      IYI=IYI+1
      IZI=IZI+1
210   CONTINUE
      RETURN
      END
      SUBROUTINE IJPRIM
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-3800)
      LOGICAL OUT,IANDJ,KANDL,SAME,NORM,DTRUIJ,DTRUKL
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL
     1           ,SAME,NORM,DTRUIJ,DTRUKL,KLUNK(5)
      COMMON/SHLINF/AG(20),CSA(20),CPA(20),CDA(20),
     1              BG(20),CSB(20),CPB(20),CDB(20),
     2              CG(20),CSC(20),CPC(20),CDC(20),
     3              DG(20),CSD(20),CPD(20),CDD(20),
     4              XI,YI,ZI,XJ,YJ,ZJ,RRI,XK,YK,ZK,XL,YL,ZL,RRK,
     5              NGA,NGB,NGC,NGD,EXIJ(400),RSMALL
      COMMON/SHLNOS/QQ4,LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1              MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL,
     2              NIJ,IJ,KL,IJKL
      COMMON/BIG/A(400),R(400),X1(400),Y1(400),Z1(400),DIJ(1600)
     2          ,IJDEN(400),YJUNK(JNKBIG)
      DATA ONE/1.0D0/
      MAX=MAXJ
      N=0
      NN=0
      DO 50 I=MINI,MAXI
      GO TO (10,10,20,20,10,20,20,20,20,20),I
10    NM=NN
20    NN=NM
      IF(IANDJ) MAX=I
      DO 50 J=MINJ,MAX
      GO TO (30,30,40,40,30,40,40,40,40,40),J
30    NN=NN+1
40    N=N+1
50    IJDEN(N)=NN
      NIJ=0
      JBMAX=NGB
      DO 190 IA=1,NGA
      AI=AG(IA)
      ARRI=AI*RRI
      AXI=AI*XI
      AYI=AI*YI
      AZI=AI*ZI
      CSI=CSA(IA)
      CPI=CPA(IA)
      CDI=CDA(IA)
      IF(IANDJ) JBMAX=IA
      DO 180 JB=1,JBMAX
      AJ=BG(JB)
      AA=AI+AJ
      AINV=ONE/AA
      DUM=AJ*ARRI*AINV
      CSJ=CSB(JB)*AINV
      CPJ=CPB(JB)*AINV
      CDJ=CDB(JB)*AINV
      NM=(NIJ+NIJ)+(NIJ+NIJ)
      NN=NM
      NIJ=NIJ+1
      EXIJ(NIJ)=DEXP(-DUM)
      R(NIJ)=DUM
      A(NIJ)=AA
      X1(NIJ)=(AXI+AJ*XJ)*AINV
      Y1(NIJ)=(AYI+AJ*YJ)*AINV
      Z1(NIJ)=(AZI+AJ*ZJ)*AINV
      DO 150 I=MINI,MAXI
      IF(IANDJ)MAX=I
      GO TO(60,70,150,150,80,150,150,150,150,150),I
60    DUM1=CSI
      GO TO 90
70    DUM1=CPI
      GOTO 90
80    DUM1=CDI
90    DO 140 J=MINJ,MAX
      GO TO(100,110,140,140,120,140,140,140,140,140),J
100   DUM2=DUM1*CSJ
      GO TO 130
110   DUM2=DUM1*CPJ
      GOTO 130
120   DUM2=DUM1*CDJ
130   NN=NN+1
      DIJ(NN)=DUM2
140   CONTINUE
150   CONTINUE
      IF(.NOT.IANDJ) GO TO 180
      IF(IA.EQ.JB) GO TO 180
      GO TO (170,160,170,170),LIT
160   IF(MINI.EQ.2) GO TO 170
      DIJ(NM+2)=DIJ(NM+2)+CSI*CPJ
      DIJ(NM+3)=DIJ(NM+3)+DIJ(NM+3)
170   DIJ(NM+1)=DIJ(NM+1)+DIJ(NM+1)
180   CONTINUE
190   CONTINUE
      IF(NIJ.EQ.0)GOTO 210
      RSMALL=R(1)
      DO 200 N=1,NIJ
      IF(RSMALL.GT.R(N))RSMALL=R(N)
200   CONTINUE
      IF(RSMALL.GE.TOL(1))NIJ=0
210   CONTINUE
      RETURN
      END
      SUBROUTINE GENRAL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-7536)
      LOGICAL OUT,IANDJ,KANDL,SAME,DOUBLE,NORM
      LOGICAL DTRUIJ,DTRUKL,DTRU
      DIMENSION IN1(12),IQQ(10000)
      COMMON/SHLINF/AG(20),CSA(20),CPA(20),CDA(20),
     1              BG(20),CSB(20),CPB(20),CDB(20),
     2              CG(20),CSC(20),CPC(20),CDC(20),
     3              DG(20),CSD(20),CPD(20),CDD(20),
     4              XI,YI,ZI,XJ,YJ,ZJ,RRI,XK,YK,ZK,XL,YL,ZL,RRK,
     5              NGA,NGB,NGC,NGD,EXIJ(400),RSMALL
      COMMON/BIG/AA(400),R(400),X1(400),Y1(400),Z1(400),
     &           DD(1600),IJDEN(400),IK(400),
     1           IJX(36),IJY(36),IJZ(36),KLX(36),KLY(36),KLZ(36),
     2           DIJ(400),DKL(400),IJGT(36),KLGT(36)
     5          ,IGT(1296*4),YJUNK(JNKBIG)
      COMMON/BIGG/QQ(MAXNX2),QQQ(JKBIGG)
      COMMON/SHLNOS/QQ4,LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1              MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL,
     2              NIJ,IJ,KL,IJKL
      COMMON/RTWT/XX,U(12),W(12),NROOTS,JUNK,ZJUNK(60)
      COMMON/INCRS/KLN2,KLN1,IJN2,IJN1,INC1,INC2,INC3,INC4,INC5,
     1             LENDD,IOFF,IXI,IYI,IZI,IC6,IC7,IC8,IC9,IJUNK(6)
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL
     1           ,SAME,NORM,DTRUIJ,DTRUKL,KLUNK(5)
      COMMON/SETINT/BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00
     1             ,F00,DXIJ,DYIJ,DZIJ,DXKL,DYKL,DZKL,IN(12),KN(12)
     3             ,NI,NJ,NK,NL,NMAX,MMAX,IJ1,IJ2,KL1,KL2
      EQUIVALENCE (IQQ(1),IGT(1))
      DATA PI252/34.986836655250D0/
      DATA ONE,PT5/1.0D0,0.5D0/
      DTRU=DTRUIJ.OR.DTRUKL
      FACTOR=PI252*QQ4
      IF (LIT .LT. LJT) GO TO 10
      NI = LIT-1
      NJ = LJT-1
      IJ1 = IJN1
      IJ2 = IJN2
      XC = XI
      YC = YI
      ZC = ZI
      DXIJ = XI-XJ
      DYIJ = YI-YJ
      DZIJ = ZI-ZJ
      GO TO 20
10    CONTINUE
      NI = LJT-1
      NJ = LIT-1
      IJ1 = IJN2
      IJ2 = IJN1
      XC = XJ
      YC = YJ
      ZC = ZJ
      DXIJ = XJ-XI
      DYIJ = YJ-YI
      DZIJ = ZJ-ZI
20    CONTINUE
      IF (LKT .LT. LLT) GO TO 30
      NK = LKT-1
      NL = LLT-1
      KL1 = KLN1
      KL2 = KLN2
      XD = XK
      YD = YK
      ZD = ZK
      DXKL = XK-XL
      DYKL = YK-YL
      DZKL = ZK-ZL
      GO TO 40
30    CONTINUE
      NK = LLT-1
      NL = LKT-1
      KL1 = KLN2
      KL2 = KLN1
      XD = XL
      YD = YL
      ZD = ZL
      DXKL = XL-XK
      DYKL = YL-YK
      DZKL = ZL-ZK
40    CONTINUE
      NMAX = NI+NJ
      MMAX = NK+NL
      MAX = NMAX+1
      DO 50 I = 1,MAX
      N = I-1
      IF (N .LE. NI) IN1(I) = IJ1*N+1
      IF (N .GT. NI) IN1(I) = IJ1*NI+IJ2*(N-NI)+1
50    CONTINUE
      MAX = MMAX+1
      DO 60 K = 1,MAX
      N = K-1
      IF (N .LE. NK) KN(K) = KL1*N
      IF (N .GT. NK) KN(K) = KL1*NK+KL2*(N-NK)
60    CONTINUE
      LGMAX=NGD
      DO 150 KG=1,NGC
      AK=CG(KG)
      BRRK=AK*RRK
      AKXK=AK*XK
      AKYK=AK*YK
      AKZK=AK*ZK
      CSK=CSC(KG)*FACTOR
      CPK=CPC(KG)*FACTOR
      CDK=CDC(KG)*FACTOR
      IF(KANDL) LGMAX=KG
      DO 140 LG=1,LGMAX
      AL=DG(LG)
      B=AK+AL
      BINV=ONE/B
      BBRRK=AL*BRRK*BINV
      IF((BBRRK+RSMALL).GT.TOL(1)) GO TO 140
      EXKL=DEXP(-BBRRK)
      CSL=CSD(LG)*BINV
      CPL=CPD(LG)*BINV
      CDL=CDD(LG)*BINV
      XB=(AKXK+AL*XL)*BINV
      YB=(AKYK+AL*YL)*BINV
      ZB=(AKZK+AL*ZL)*BINV
      BXBK=B*(XB-XD)
      BYBK=B*(YB-YD)
      BZBK=B*(ZB-ZD)
      BXBI=B*(XB-XC)
      BYBI=B*(YB-YC)
      BZBI=B*(ZB-ZC)
      DOUBLE=KANDL.AND.KG.NE.LG
      CALL DENFAC(DKL,CSK,CPK,CDK,CSL,CPL,CDL,MINK,MAXK,
     1MINL,MAXL,KANDL,DOUBLE)
      DKLD=DKL(1)
80    NN=0
      DKLD=DKLD*EXKL
      IF(DABS(DKLD).LT.TOL(3))GOTO 140
      DO 130 N=1,NIJ
      DUM=BBRRK+R(N)
      IF(DUM.GT.TOL(2)) GO TO 130
      DIJD=DD(NN+1)
100   DIJD=DIJD*DKLD
      A=AA(N)
      AB=A*B
      AANDB=A+B
      EXPE=DIJD*EXIJ(N)/DSQRT(AANDB)
      IF(DABS(EXPE).LT.TOL(4))GOTO 130
      RHO=AB/AANDB
      XA=X1(N)
      YA=Y1(N)
      ZA=Z1(N)
      XX=RHO*((XA-XB)**2+(YA-YB)**2+(ZA-ZB)**2)
      AXAK=A*(XA-XD)
      AYAK=A*(YA-YD)
      AZAK=A*(ZA-ZD)
      AXAI=A*(XA-XC)
      AYAI=A*(YA-YC)
      AZAI=A*(ZA-ZC)
      C1X=BXBK+AXAK
      C2X=A*BXBK
      C3X=BXBI+AXAI
      C4X=B*AXAI
      C1Y=BYBK+AYAK
      C2Y=A*BYBK
      C3Y=BYBI+AYAI
      C4Y=B*AYAI
      C1Z=BZBK+AZAK
      C2Z=A*BZBK
      C3Z=BZBI+AZAI
      C4Z=B*AZAI
      CALL ROOTS
      MM=0
      MAX=NMAX+1
      DO 120 M=1,NROOTS
      U2=U(M)*RHO
      F00=EXPE*W(M)
      DO 110 I=1,MAX
110   IN(I)=IN1(I)+MM
      DUM=ONE/(AB+U2*AANDB)
      DUM2=PT5*DUM
      BP01=(A+U2)*DUM2
      B00=U2*DUM2
      B10=(B+U2)*DUM2
      XCP00=(U2*C1X+C2X)*DUM
      XC00 =(U2*C3X+C4X)*DUM
      YCP00=(U2*C1Y+C2Y)*DUM
      YC00 =(U2*C3Y+C4Y)*DUM
      ZCP00=(U2*C1Z+C2Z)*DUM
      ZC00 =(U2*C3Z+C4Z)*DUM
      CALL XYZE(QQ(IC7),QQ(IC8),QQ(IC9))
120   MM=MM+INC1
      CALL FMAE(QQ(IC6),QQ(IC7),QQ(IC8),
     &         QQ(IC9),IQQ(1),IQQ(IXI),IQQ(IYI),IQQ(IZI))
130   NN=NN+4
140   CONTINUE
150   CONTINUE
      IF(DTRU.AND.NORM)CALL INORM(QQ(IC6))
      CALL QOUT(QQ(IC6))
250   CONTINUE
      RETURN
      END
      SUBROUTINE QOUT(G)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-4944)
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      LOGICAL IANDJ,KANDL,SAME,OUT,LJUNK1,LJUNK2
     &,LJUNK3,DTRUIJ,DTRUKL,LADAPT,LSKIP,REVISE
      INTEGER*2 IOUT,JOUT
      DIMENSION G(*)
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL,SAME
     &           ,LJUNK1,DTRUIJ,DTRUKL,LJUNK2,LJUNK3,KLUNK(3)
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      COMMON/SHLNOS/QQ4,LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     1              MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL,
     2              NIJ,IJ,KL,IJKL
      COMMON/BIG/AAA(3600),IJDEN(400),IK(400),IJX(36),IJY(36)
     1          ,IJZ(36),KLX(36),KLY(36),KLZ(36),DIJ(400)
     2          ,DKL(400),IJGT(36),KLGT(36),YJUNK(JNKBIG)
C     COMMON/BLKIN/XX(340),IOUT(340),JOUT(340),NWORD,NJUNK
      COMMON/LBLKIN/GG(10000),INDIJ(10000),INDKL(10000),NWORDG,NSKIPG
      IJN=0
      JMAX=MAXJ
C     LBUFF = 10000
      LBUFF = 4095
      CALL GETIOUNIT('IAO2E   ',IAO2E)
      DO 70 I=MINI,MAXI
      IF(IANDJ) JMAX=I
      I1=LOCI+I
      DO 60 J=MINJ,JMAX
      IJN=IJN+1
      N1=IJGT(IJN)
      I2=LOCJ+J
      LMAX=MAXL
      KLN=0
      DO 50 K=MINK,MAXK
      IF(KANDL) LMAX=K
      I3=LOCK+K
      DO 40 L=MINL,LMAX
      KLN=KLN+1
      IF(SAME.AND.KLN.GT.IJN) GO TO 60
      NN=N1+KLGT(KLN)
      VAL=G(NN)
      IF(DABS(VAL).LT.CUTOFF) NSKIPG = NSKIPG + 1
      IF(DABS(VAL).LT.CUTOFF) GO TO 40
      I4=LOCL+L
      LAB1=MAX0(I1,I2)*256+MIN0(I1,I2)
      LAB2=MAX0(I3,I4)*256+MIN0(I3,I4)
      IF(I1.GE.I2) THEN
      II12 = I1*(I1-1)/2 + I2
      ELSE
      II12 = I2*(I2-1)/2 + I1
      END IF
      IF(I3.GE.I4) THEN
      II34 = I3*(I3-1)/2 + I4
      ELSE
      II34 = I4*(I4-1)/2 + I3
      END IF
      IF(II12.GE.II34) THEN
      INDIJ(ICOUNT) = II12
      INDKL(ICOUNT) = II34
      ELSE
      INDIJ(ICOUNT) = II34
      INDKL(ICOUNT) = II12
      END IF
      IF(OUT) CALL INTOUT(I1,I2,I3,I4,QQ4,NN,VAL)
C     XX(ICOUNT)=VAL
      GG(ICOUNT)=VAL
C     IOUT(ICOUNT)=MAX0(LAB1,LAB2)
C     JOUT(ICOUNT)=MIN0(LAB1,LAB2)
      ICOUNT = ICOUNT+1
      IF(ICOUNT.LE.LBUFF) GO TO 40
      NWORD  = LBUFF
C     CALL PUT(XX,511,IFILM)
      CALL PUT2E(GG,INDIJ,INDKL,NWORD,LBUFF,IAO2E)
      ICOUNT=1
      NREC=NREC+1
  999 CONTINUE
40    CONTINUE
50    CONTINUE
60    CONTINUE
70    CONTINUE
      RETURN
      END
      SUBROUTINE FMAE(G,X,Y,Z,IGT,IX,IY,IZ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-4944)
      DIMENSION G(*),X(*),Y(*),Z(*),IGT(*),IX(*),IY(*),IZ(*)
      COMMON/RTWT/XX,U(12),W(12),NROOTS,JUNK,ZJUNK(60)
      COMMON/SHLNOS/QQ4,LIT(17),IJ,KL,IJKL
      COMMON/BIG/AAA(3600),IJDEN(400),IK(400),IJX(36),IJY(36),
     1           IJZ(36),KLX(36),KLY(36),KLZ(36),DIJ(400),
     2           DKL(400),IJGT(36),KLGT(36),YJUNK(JNKBIG)
      COMMON/INCRS/KLN2,KLN1,IJN2,IJN1,INC,JJUNK(19)
      I1=INC
110   DO 120 I=1,IJKL
      N=IGT(I)
      MX=IX(I)
      MY=IY(I)
      MZ=IZ(I)
      S=0.0
      DO 130 NR=1,NROOTS
      S=S+X(MX)*Y(MY)*Z(MZ)
      MX=I1+MX
      MY=I1+MY
130   MZ=I1+MZ
      G(N)=G(N)+S
120   CONTINUE
      RETURN
      END
      SUBROUTINE INTOUT(I1,I2,I3,I4,Q4,NN,VAL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      COMMON/INTPR/Q(3),V(3),JC,N1(3),J1(3),J2(3),J3(3),J4(3)
      JC=JC+1
      J1(JC)=I1
      J2(JC)=I2
      J3(JC)=I3
      J4(JC)=I4
      Q(JC)=Q4
      N1(JC)=NN
      V(JC)=VAL
      IF(JC.LT.3) GO TO 100
      JC=0
      WRITE(97,500)(J1(M),J2(M),J3(M),J4(M),Q(M),N1(M),V(M),M=1,3)
  500 FORMAT(3(4I3,F6.3,I5,E20.12))
  100 CONTINUE
      RETURN
      END
      SUBROUTINE XYZE(X,Y,Z)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      LOGICAL N0,N1,M0,M1
      DIMENSION X(*),Y(*),Z(*)
      COMMON/SETINT/A(16),I(12),K(12),NIMAX,
     3              NJMAX,NKMAX,NLMAX,NMAX,MMAX,IJKL(4)
      DATA ZERO,ONE/0.0D0,1.0D0/
      BP01=A(1)
      B00=A(2)
      B10=A(3)
      XCP00=A(4)
      XC00=A(5)
      YCP00=A(6)
      YC00=A(7)
      ZCP00=A(8)
      ZC00=A(9)
      F00=A(10)
      DXIJ=A(11)
      DYIJ=A(12)
      DZIJ=A(13)
      DXKL=A(14)
      DYKL=A(15)
      DZKL=A(16)
      IJ1=IJKL(1)
      IJ2=IJKL(2)
      KL1=IJKL(3)
      KL2=IJKL(4)
      N0=NMAX.EQ.0
      N1=NMAX.LE.1
      M0=MMAX.EQ.0
      M1=MMAX.LE.1
      IF(N0)GOTO 320
      IF(M0)GOTO 250
      I1=I(1)
      X(I1)=ONE
      Y(I1)=ONE
      Z(I1)=F00
      I2=I(2)
      X(I2)=XC00
      Y(I2)=YC00
      Z(I2)=ZC00*F00
      K2=K(2)
      I3=I1+K2
      X(I3)=XCP00
      Y(I3)=YCP00
      Z(I3)=ZCP00*F00
      I3=I2+K2
      CP10=B00
      X(I3)=XCP00*X(I2)+CP10
      Y(I3)=YCP00*Y(I2)+CP10
      Z(I3)=ZCP00*Z(I2)+CP10*F00
      IF(N1) GO TO 30
      C10=ZERO
      I3=I1
      I4=I2
      DO 20 N=2,NMAX
      C10=C10+B10
      I5=I(N+1)
      X(I5)=C10*X(I3)+XC00*X(I4)
      Y(I5)=C10*Y(I3)+YC00*Y(I4)
      Z(I5)=C10*Z(I3)+ZC00*Z(I4)
      CP10=CP10+B00
      I3=I5+K2
      X(I3)=XCP00*X(I5)+CP10*X(I4)
      Y(I3)=YCP00*Y(I5)+CP10*Y(I4)
      Z(I3)=ZCP00*Z(I5)+CP10*Z(I4)
10    I3=I4
20    I4=I5
30    IF(M1) GO TO 60
      CP01=ZERO
      C01=B00
      I3=I1
      I4=I1+K2
      DO 50 M=2,MMAX
      CP01=CP01+BP01
      I5=I1+K(M+1)
      X(I5)=CP01*X(I3)+XCP00*X(I4)
      Y(I5)=CP01*Y(I3)+YCP00*Y(I4)
      Z(I5)=CP01*Z(I3)+ZCP00*Z(I4)
      C01=C01+B00
      I3=I2+K(M+1)
      X(I3)=XC00*X(I5)+C01*X(I4)
      Y(I3)=YC00*Y(I5)+C01*Y(I4)
      Z(I3)=ZC00*Z(I5)+C01*Z(I4)
40    I3=I4
50    I4=I5
60    IF(N1.OR.M1) GO TO 90
      C01=B00
      K3=K2
      DO 80 M=2,MMAX
      K4=K(M+1)
      C01=C01+B00
      I3=I1
      I4=I2
      C10=B10
      DO 70 N=2,NMAX
      I5=I(N+1)
      X(I5+K4)=C10*X(I3+K4)+XC00*X(I4+K4)+C01*X(I4+K3)
      Y(I5+K4)=C10*Y(I3+K4)+YC00*Y(I4+K4)+C01*Y(I4+K3)
      Z(I5+K4)=C10*Z(I3+K4)+ZC00*Z(I4+K4)+C01*Z(I4+K3)
      C10=C10+B10
      I3=I4
70    I4=I5
80    K3=K4
90    IF(NJMAX.EQ.0) GO TO 160
      M=0
      I5=I(NMAX+1)
100   MIN=NIMAX
      KM=K(M+1)
110   N=NMAX
      I3=I5+KM
120   I4=I(N)+KM
      X(I3)=X(I3)+DXIJ*X(I4)
      Y(I3)=Y(I3)+DYIJ*Y(I4)
      Z(I3)=Z(I3)+DZIJ*Z(I4)
      I3=I4
      N=N-1
      IF(N.GT.MIN) GO TO 120
      MIN=MIN+1
      IF(MIN.LT.NMAX) GO TO 110
      IF(NIMAX.EQ.0) GO TO 150
      I3=IJ2+KM+I1
      DO 140 NJ=1,NJMAX
      I4=I3
      DO 130 NI=1,NIMAX
      X(I4)=X(I4+IJ1-IJ2)+DXIJ*X(I4-IJ2)
      Y(I4)=Y(I4+IJ1-IJ2)+DYIJ*Y(I4-IJ2)
      Z(I4)=Z(I4+IJ1-IJ2)+DZIJ*Z(I4-IJ2)
130   I4=I4+IJ1
140   I3=I3+IJ2
150   M=M+1
      IF(M.LE.MMAX) GO TO 100
160   IF(NLMAX.EQ.0) GO TO 240
      I5=K(MMAX+1)
      IA=I1
      NI=0
170   NJ=0
      IB=IA
180   MIN=NKMAX
190   M=MMAX
      I3=IB+I5
200   I4=IB+K(M)
      X(I3)=X(I3)+DXKL*X(I4)
      Y(I3)=Y(I3)+DYKL*Y(I4)
      Z(I3)=Z(I3)+DZKL*Z(I4)
      I3=I4
      M=M-1
      IF(M.GT.MIN) GO TO 200
      MIN=MIN+1
      IF(MIN.LT.MMAX) GO TO 190
      IF(NKMAX.EQ.0) GO TO 230
      I3=IB+KL2
      DO 220 NL=1,NLMAX
      I4=I3
      DO 210 NK=1,NKMAX
      X(I4)=X(I4+KL1-KL2)+DXKL*X(I4-KL2)
      Y(I4)=Y(I4+KL1-KL2)+DYKL*Y(I4-KL2)
      Z(I4)=Z(I4+KL1-KL2)+DZKL*Z(I4-KL2)
210   I4=I4+KL1
220   I3=I3+KL2
230   NJ=NJ+1
      IB=IB+IJ2
      IF(NJ.LE.NJMAX) GO TO 180
      NI=NI+1
      IA=IA+IJ1
      IF(NI.LE.NIMAX) GO TO 170
240   RETURN
250   I1 = I(1)
      X(I1) = ONE
      Y(I1) = ONE
      Z(I1) = F00
      IF (N0) GO TO 310
      I2 = I(2)
      X(I2) = XC00
      Y(I2) = YC00
      Z(I2) = ZC00*F00
      IF (N1) GO TO 310
      C10 = ZERO
      I3 = I1
      I4 = I2
      DO 260 NI = 2,NMAX
      C10 = C10+B10
      I5 = I(NI+1)
      X(I5) = C10*X(I3)+XC00*X(I4)
      Y(I5) = C10*Y(I3)+YC00*Y(I4)
      Z(I5) = C10*Z(I3)+ZC00*Z(I4)
      I3 = I4
260   I4 = I5
      IF (NJMAX .EQ. 0) GO TO 310
      I5 = I(NMAX+1)
      MIN = NIMAX
270   NI = NMAX
      I3 = I5
280   I4 = I(NI)
      X(I3) = X(I3)+DXIJ*X(I4)
      Y(I3) = Y(I3)+DYIJ*Y(I4)
      Z(I3) = Z(I3)+DZIJ*Z(I4)
      I3 = I4
      NI = NI-1
      IF (NI .GT. MIN) GO TO 280
      MIN = MIN+1
      IF (MIN .LT. NMAX) GO TO 270
      IF (NIMAX .EQ. 0) GO TO 310
      I3 = IJ2+I1
      DO 300 NJ = 1,NJMAX
      I4 = I3
      DO 290 NI = 1,NIMAX
      X(I4) = X(I4+IJ1-IJ2)+DXIJ*X(I4-IJ2)
      Y(I4) = Y(I4+IJ1-IJ2)+DYIJ*Y(I4-IJ2)
      Z(I4) = Z(I4+IJ1-IJ2)+DZIJ*Z(I4-IJ2)
290   I4 = I4+IJ1
300   I3 = I3+IJ2
310   RETURN
320   I1 = I(1)
      X(I1) = ONE
      Y(I1) = ONE
      Z(I1) = F00
      IF (M0) GO TO 380
      K2 = K(2)
      I3 = I1+K2
      X(I3) = XCP00
      Y(I3) = YCP00
      Z(I3) = ZCP00*F00
      IF (M1) GO TO 380
      CP01 = ZERO
      I3 = I1
      I4 = I1+K2
      DO 330 NK = 2,MMAX
      CP01 = CP01+BP01
      I5 = I1+K(NK+1)
      X(I5) = CP01*X(I3)+XCP00*X(I4)
      Y(I5) = CP01*Y(I3)+YCP00*Y(I4)
      Z(I5) = CP01*Z(I3)+ZCP00*Z(I4)
      I3 = I4
330   I4 = I5
      IF (NLMAX .EQ. 0) GO TO 380
      I5 = K(MMAX+1)
      MIN=NKMAX
340   NK = MMAX
      I3 = I1+I5
350   I4 = I1+K(NK)
      X(I3) = X(I3)+DXKL*X(I4)
      Y(I3) = Y(I3)+DYKL*Y(I4)
      Z(I3) = Z(I3)+DZKL*Z(I4)
      I3 = I4
      NK = NK-1
      IF (NK .GT. MIN) GO TO 350
      MIN = MIN+1
      IF (MIN .LT. MMAX) GO TO 340
      IF (NKMAX .EQ. 0) GO TO 380
      I3 = I1+KL2
      DO 370 NL = 1,NLMAX
      I4 = I3
      DO 360 NK = 1,NKMAX
      X(I4) = X(I4+KL1-KL2)+DXKL*X(I4-KL2)
      Y(I4) = Y(I4+KL1-KL2)+DYKL*Y(I4-KL2)
      Z(I4) = Z(I4+KL1-KL2)+DZKL*Z(I4-KL2)
360   I4 = I4+KL1
370   I3 = I3+KL2
380   RETURN
      END
      SUBROUTINE INORM(ABDENS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.2*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.2*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-4944)
      LOGICAL OUT,IANDJ,KANDL,SAME,NORM,DTRUIJ,DTRUKL
      DIMENSION ABDENS(*)
      COMMON/MISC/TOL(4),CUTOFF,ICOUNT,NINTMX,OUT,IANDJ,KANDL
     &           ,SAME,NORM,DTRUIJ,DTRUKL,KLUNK(5)
      COMMON/SHLNOS/QQ4,LIT,LJT,LKT,LLT,LOCI,LOCJ,LOCK,LOCL,
     &              MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,MAXL,
     &              NIJ,IJ,KL,IJKL
      COMMON/BIG/AAA(3600),IJDEN(400),IK(400),IJX(36),IJY(36)
     &          ,IJZ(36),KLX(36),KLY(36),KLZ(36),DIJ(400)
     &         ,DKL(400),IJGT(36),KLGT(36),YJUNK(JNKBIG)
      DATA ONE/1.0D0/
      ROOT3=DSQRT(3.0D0)
      ROOT5=DSQRT(5.0D0)
      N=0
      MAX=MAXJ
      DUM1=ONE
      DO 20 I=MINI,MAXI
      IF(I.EQ.8) DUM1=ROOT3
      IF(I.EQ.14)DUM1=ROOT5
      IF(I.EQ.20)DUM1=DUM1*ROOT3
      DUM2=DUM1
      IF(IANDJ) MAX=I
      DO 10 J=MINJ,MAX
      IF(J.EQ.8) DUM2=DUM2*ROOT3
      IF(J.EQ.14)DUM2=DUM2*ROOT5
      IF(J.EQ.20)DUM2=DUM2*ROOT3
      N=N+1
  10  DIJ(N)=DUM2
  20  CONTINUE
      N=0
      DUM1=ONE
      MAX=MAXL
      DO 40 K=MINK,MAXK
      IF(K.EQ.8) DUM1=ROOT3
      IF(K.EQ.14)DUM1=ROOT5
      IF(K.EQ.20)DUM1=DUM1*ROOT3
      DUM2=DUM1
      IF(KANDL) MAX=K
      DO 30 L=MINL,MAX
      IF(L.EQ.8) DUM2=DUM2*ROOT3
      IF(L.EQ.14)DUM2=DUM2*ROOT5
      IF(L.EQ.20)DUM2=DUM2*ROOT3
      N=N+1
  30  DKL(N)=DUM2
  40  CONTINUE
      DO 50 I=1,IJ
      D1=DIJ(I)
      N1=IJGT(I)
      MAX=IK(I)
      DO 50 K=1,MAX
      N=N1+KLGT(K)
      ABDENS(N)=ABDENS(N)*D1*DKL(K)
  50  CONTINUE
      RETURN
      END
      SUBROUTINE START
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXEX4=MAXEXP*4,MAXSH1=MAXSHL+1)
      PARAMETER (MAXSH7=(MAXSHL*7+1)/2+1)
      PARAMETER (MAXINA=(29*MAXCEN)/2+8,MAXINB=5*MAXCEN+MAXBFN)
      PARAMETER (MAXSYM=251+12*MAXSHL)
      INTEGER P1, P2, P3
      LOGICAL LMOS,LNUCL,LBASIS,LCM,REVISE,LADAPT,LSKIP
      LOGICAL FIXED,LEX,LDAM12,LDAM13,LDAM23,LDIIS
      CHARACTER*1 IAAA
      CHARACTER*4 BFNAM,ATNAM,IFILEV
      CHARACTER*8 ANG,BLANK,DEG,BUFF,CHECK,COMMNT
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      CHARACTER*8 PARNAM,ANAM,ATNAME
      CHARACTER*8 FIX,STOP,ALTER,NO,OFF,GROUP,YES,ON,CLOSED,OSCF
      CHARACTER*8 WORDS(61),OPTS(51),TYPES(10)
      CHARACTER*12 BFLAB,BFLABE
      CHARACTER*20 BASNAME
      CHARACTER*64 NAM
      DIMENSION ATDAT(2)
      DIMENSION R(MAXSHL),BFNAM(10),ATNAM(37)
      COMMON/DISC/ISEL,ISELR,ISELW,IREP,ICHEK,IPOS(16)
     1           ,IBLKSZ(16)
      COMMON/DISCB/NAM(16)
      COMMON/TIMEX/TSTART,TI,TX,TIM,TTGO,TIMMAX
      COMMON/WORK/JREC,JUMP,ISTT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IAAA(80)
      COMMON/PRPSEC/ISECD1,ITYPD1,ISECD2,ITYPD2,LMOS,ISECV,
     1  ITYPV,ISECD3,ITYPD3,LNUCL,GX,GY,GZ
      COMMON/SCFBLK/EN,ETOT,EHF,SH1(2),SH2(2),GAP1(2),GAP2(2),
     1              D12,D13,D23,CANA,CANB,CANC,FIXED,LEX,
     2              LDAM12,LDAM13,LDAM23,LDIIS,
     3              NCYC,ISCHM,LOCK,MAXIT,NCONV,LOKCYC
      COMMON/GESBLK/ISWOP(2,25),NSWOP,IFILVA,IBLKA1
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1               ZAN(MAXCEN),C(3,MAXCEN),
     2               NVAR,NPAR,NVAL,NUQ,CFR,CFA,KONTYP(MAXCEN),
     3               P1(MAXCEN),P2(MAXCEN),P3(MAXCEN),KR(MAXCEN),
     5               KA(MAXCEN),KB(MAXCEN),
     4               PARVAL(MAXN3),ZIN(MAXCEN),X(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1             ATNAME(MAXCEN)
      COMMON/NSHEL/EX(MAXEXP),CS(MAXEXP),CP(MAXEXP),CD(MAXEXP),
     1             KSTART(MAXSHL),KATOM(MAXSHL),KTYPE(MAXSHL),
     3             KNG(MAXSHL),KLOC(MAXSHL),
     2             KMIN(MAXSHL),KMAX(MAXSHL),NSHELL,NSEL2
      COMMON/SYMTRY/T(216),ISO(MAXSH1,24),NT,NT2,XXX(21),INDEX,NAXIS
      COMMON/SYMTRB/GROUP
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      COMMON/ATMWT/AMS(37),AMASS(MAXCEN)
C
C     NOV. 10, 2002. Added to set BFLABEL
C     Jiabo Li
C
      COMMON /GENINF/NATOM,NELE,NSPIN,NBASIS,NATNUM(MAXCEN),
     & NATBAS(MAXCEN),ENREP,XYZ(3,MAXCEN),BFLABE(MAXBFN),BASNAME
      EQUIVALENCE (ATDAT(1),NAT)
C     EQUIVALENCE (WORDS(1),OPTS(1)),(WORDS(52),TYPES(1))
      DATA BFNAM/' s',' x',' y',' z','xx','yy','zz','xy','xz','yz'/
      DATA ATNAM/' H','He','Li','Be',' B',' C',' N',' O',' F','Ne',
     1           'Na','Mg','Al','Si',' P',' S','Cl','Ar',
     2           ' K','Ca','Sc','Ti',' V','Cr','Mn','Fe','Co',
     3           'Ni','Cu','Zn','Ga','Ge','As','Se','Br','Kr','  '/
      DATA BLANK, ONE,  BOHR /'        ', 1.0D0, 0.52917724924D0/
      DATA OSCF,CLOSED/'OSCF','CLOSED'/
      DATA OPTS / 'TITLE', 'SYMMETRY', 'PRINT', 'ACCURACY', 'NORM',
     1    'LEVEL',  'RESTORE', 'CHARGE','MULTIPLI','SCFTYP',
     2    ' OSCF','ANGSTROM', 'MAINFILE', 'DUMPFILE', 'SCRATCHF',
     3    'WEIGHTS','GEOMETRY', 'ATOMS', 'MAXIT', 'CONVERGE',
     4    'GUESS', 'START',  'RUNTYP', 'SHIFT','DIIS',
     5    'LOCK', 'TIME', 'SKIP', 'IMPTPRIN',' END',
     6     'FINISH', 'VARIABLE', 'CONSTANT', 'NOTE','NCOORB',
     8    'SWAP','EXTRAPOL','CANONICA','WIDTH','GRADTOL',
     A   'DAMP12','DAMP13','DAMP23','STEPSIZE','NPOINTS',
     B    'DENSITY','MOS','NONUCLEA','ORIGIN','GAUGE','        '/
      DATA TYPES/ 'HFSCF','CHECK','INTEGRAL','SCF','GRADIENT',
     $'GRADONE','OPTIMIZE','FORCE','PROPERTY','        '/
      DATA FIX,STOP,ALTER/'FIXED','END','ALTER'/
     1    , YES/'YES'/ ON /'ON'/
     2    , NO /'NO'/, OFF /'OFF'/,COMMNT/'NOTE'/
      DATA ANG /'A'/, DEG /'D'/
C     THIS EQUIVALENCE DOES NOT WORK WITH SALFORD COMPILER, SO COPY
      DO I=1,51
        WORDS(I)=OPTS(I)
      ENDDO
      DO I=52,61
        WORDS(I)=TYPES(I-51)
      ENDDO
C
      IBLOK=0
      KEY=1
      LBASIS=.FALSE.
C  LBASIS is true if a previous basis already exists and is to be reused
C  READ TITLE AND OPTIONS
20    CALL READC
      IF (JUMP.EQ.0) GO TO 20
      CALL READA(BUFF)
      DO 30 I=1,51
      IF (BUFF.EQ.WORDS(I)) GO TO
     1      (60,  90, 200, 210, 220,   750,  240, 270, 280, 710,
     2      720, 290, 310, 320, 330,   610, 370, 380, 410, 420,
     3      440, 1050, 620, 750, 960,   770,  45,  700, 650, 40,
     4        40, 800, 830, 20, 160,   780, 100, 340, 50, 910,
     5        110, 120,130,930,940,  1460,1470,1450,1480,1490,20,
     9      1040, 30, 1040, 1040,1040,1040, 1040,1040,1040,20),I
30    CONTINUE
      CALL HONDER(1)
C  END, FINISH
40    RUNTYP=WORDS(31)
      RETURN
C  TIME
45    CALL READF(TIMLIM)
      TIMMAX=TIMLIM
      GO TO 20
C  WIDTH
50    CALL READI(IWIDTH)
      GOTO 20
C  TITLE
60    READ(IR,70) (TITLE(I),I=1,10)
70    FORMAT(10A8)
      WRITE(IW,80) (TITLE(J),J=1,10)
80    FORMAT (1H0/10A8//)
      GO TO 20
C  SYMMETRY
90    CALL PTGRP(NPRINT,IW)
      GO TO 20
C     EXTRAPOLATE
100   LEX=.TRUE.
      CALL READA(BUFF)
      IF(BUFF.EQ.NO.OR.BUFF.EQ.OFF) LEX=.FALSE.
      GOTO 20
C       DAMP FACTORS D12,D13,D23
110   CALL READF(D12)
      LDAM12=.TRUE.
      GO TO 20
120   CALL READF(D13)
      LDAM13=.TRUE.
      GOTO 20
130   CALL READF(D23)
      LDAM23=.TRUE.
      GO TO 20
C
C   CANONICAL
340   CALL READF(CANA)
      CALL READF(CANB)
      CALL READF(CANC)
      GO TO 20
C  NCOORB
160   CALL READI(NCOORB)
      GOTO 20
C  PRINT
200   CALL READI(NPRINT)
      GO TO 20
C  ACCURACY
210   CALL READI(ITOL)
      CALL READI(ICUT)
      CALL READI(ITOLI)
      CALL READI(ICUTI)
      IF(ITOLI.EQ.0)ITOLI=ITOL
      IF(ICUTI.EQ.0)ICUTI=ICUT
      GO TO 20
C  NORM
220   CALL READI(NORMF)
      CALL READI(NORMP)
      GO TO 20
C     --------------------   RESTORE -----------------
240   IF(JUMP.GT.1) CALL GETFIL(NNNN,IBLKD,LLLL,IFILD)
      NUM3=IFILD
      IBLK3=IBLKD
      CALL SECINI(IBLKD,IFILD)
C  Get title and options
      CALL SECGET(ISEX(4),4,IBLOK)
      CALL READQ(VIBSIZ,50,IBLOK,IFILD)
      CALL SECGET(ISEX(24),24,IBLOK)
      CALL READQC(TITLE,14,IBLOK,IFILD)
C  Get symmetry data
      CALL SECGET(ISEX(1),1,IBLOK)
      CALL READQ(T,LDA(ISEX(1)),IBLOK,IFILD)
      CALL SECGET(ISEX(21),21,IBLOK)
      CALL READQC(GROUP,LDA(ISEX(21)),IBLOK,IFILD)
C  Get atom data
      CALL SECGET(ISEX(2),2,IBLOK)
      CALL READQ(ATDAT,LDA(ISEX(2)),IBLOK,IFILD)
      CALL SECGET(ISEX(22),22,IBLOK)
      CALL READQC(ANAM,LDA(ISEX(22)),IBLOK,IFILD)
C  Get basis set data
      CALL SECGET(ISEX(3),3,IBLOK)
      CALL READQ(EX,LDA(ISEX(3)),IBLOK,IFILD)
C     get /SCFBLK/
      CALL SECGET(ISEX(13),13,IBLOK)
      CALL READQ(EN,LDA(ISEX(13)),IBLOK,IFILD)
      WRITE(IW,250) NAM(IFILD),(TITLE(K),K=1,10),NRUNS
250   FORMAT (1H0/10X, 'JOB RESTORED FROM DUMPFILE ', A4
     1    ///10X,'ORIGINAL TITLE WAS  ',//10A8
     2    ///10X,'RUN NUMBER  ',I4)
      NRUNS=NRUNS+1
      DO 260 I=1,NAT
      IZ=DINT(ZAN(I)+0.1)
      IF(IZ.LE.0.OR.IZ.GT.36)IZ=37
260   AMASS(I)=AMS(IZ)
      GO TO 20
C  CHARGE
270   CALL READI(ICH)
      GO TO 20
C MULTIPLICITY
280   CALL READI(NMUL(1))
      CALL READI(NMUL(2))
      IF(NMUL(2).EQ.0) NMUL(2)=1
      MUL=NMUL(1)+NMUL(2)-1
      GO TO 20
C  ANGSTROM
290   CFR=1D0/BOHR
      GO TO 20
C
C      DENSITY
C
1460  CALL READI(ISECD1)
      CALL READI(ITYPD1)
      IF(NITEMS.EQ.3)GOTO 20
      CALL READI(ISECD2)
      CALL READI(ITYPD2)
      IF(NITEMS.EQ.5)GOTO 20
      CALL READI(ISECD3)
      CALL READI(ITYPD3)
      GOTO 20
C
C     MOS
C
1470  LMOS=.TRUE.
      CALL READI(ISECV)
      CALL READI(ITYPV)
      GOTO 20
C
C   NONUCLEA
C
1450  LNUCL=.FALSE.
      GOTO 20
C
C  MOVE ORIGIN
1480  IF(NAT.EQ.0) WRITE(*,1481)
1481  FORMAT(1H ,'You cannot move the origin before reading the',
     1' geometry.')
      IF(NAT.EQ.0) WRITE(IW,1481)
      IF(NAT.EQ.0) STOP
      CALL MOVORG
      GO TO 20
C
C  GAUGE
1490  CALL READF(GX)
      CALL READF(GY)
      CALL READF(GZ)
      GO TO 20
C
C ---------------FILES-------
C  MAINFILE
310   CALL GETFIL(NFILE,IBLKM,MBLKM,IFILM)
      GO TO 20
C  DUMPFILE
320   CALL GETFIL(NNNN,IBLKD,LLLL,IFILD)
      NUM3=IFILD
      IBLK3=IBLKD
      GOTO 20
330   CALL GETFIL(NNNN,IBLKS,LLLL,IFILS)
      GO TO 20
C  GEOMETRY
370   LBASIS=.TRUE.
C  ATOMS
380   CALL ATOMS(LBASIS)
      LBASIS=.FALSE.
      CALL STRUCT (NAT, C, ZAN)
      DO 390 I=1,NAT
      IZ=DINT(ZAN(I)+0.1)
      IF(IZ.LE.0.OR.IZ.GT.36)IZ=37
390   AMASS(I)=AMS(IZ)
      GO TO 20
C  WEIGHTS
610   CALL READC
      CALL READA(BUFF)
      IF(BUFF.EQ.STOP) GO TO 20
      ITEM=0
      CALL READI(IZ)
      CALL READF(Z)
      AMASS(IZ)=Z
      GO TO 610
C  MAXIT
410   CALL READI(MAXIT)
      GO TO 20
C  CONVERGENCE
420   CALL READI(NCONV)
      GO TO 20
C  GUESS
440   CALL READA(GUESS)
      IF(GUESS.EQ.WORDS(7)) GOTO 450
      GOTO 20
C   -------------- GUESS --------------
C  GUESS RESTORE
450   IF (JUMP .GT. 2) GO TO 460
      IFILVA=IFILD
      IBLKA1=0
      IBLKA2=0
      GOTO 20
460   CALL READA4(IFILEV)
      DO 470 I=1,16
      IF(IFILEV.EQ.NAM(I))IFILVA=I
470   CONTINUE
      CALL READI(IBLKA1)
      CALL READI(IBLKA2)
      IF (JREC.GE.JUMP) GOTO 20
      CALL READA4(IFILEV)
      CALL READI(IB2V1)
      CALL READI(IB2V2)
      GOTO 20
C  SCFTYP
710   CALL READA(SCFTYP)
      GO TO 20
C  OSCF
720   SCFTYP=BUFF
      GO TO 20
C  RUNTYP
620   CALL READA(RUNTYP)
      DO 630 KEY=1,10
      IF (WORDS(51+KEY) .EQ. RUNTYP) GO TO 640
630   CONTINUE
      CALL HONDER(15)
640   CONTINUE
      GOTO 20
C  IMPTPRINT
650   CALL READI(I)
      IF (I .EQ. 0) GO TO 20
      IF (I .LT. 1 .OR. I .GT. 15) CALL HONDER(8)
      GO TO 650
C  SKIP
700   LSKIP=.TRUE.
      GO TO 20
C  SHIFT
750   SHB=0.0D0
      SHD=0.0D0
      CALL READF(SHA)
      IF(JUMP.GE.6) CALL READF(SHB)
      CALL READI(NCYC)
      CALL READF(SHC)
      IF(JUMP.GE.6) CALL READF(SHD)
      CALL READA(BUFF)
      IF(BUFF.EQ.FIX)GOTO 760
      FIXED=.FALSE.
      GAP1(1)=SHA
      GAP1(2)=SHB
      GAP2(1)=SHC
      GAP2(2)=SHD
      SH1(1)=0.5D0
      SH1(2)=0.5D0
      GOTO 20
760   FIXED=.TRUE.
      SH1(1)=SHA
      SH1(2)=SHB
      SH2(1)=SHC
      SH2(2)=SHD
      GO TO 20
C  LOCK
770   LOCK=1
      CALL READI(LOKCYC)
      GO TO 20
C  SWOP
780   NSWOP=0
      CONF=BLANK
790   CALL READC
      CALL READA(BUFF)
      IF (BUFF.EQ.STOP) GO TO 20
      CONF=ALTER
      JREC=0
      NSWOP=NSWOP+1
      CALL READI(ISWOP(1,NSWOP))
      CALL READI(ISWOP(2,NSWOP))
      GO TO 790
C  VARIABLES
800   IF (NVAR .EQ. 0) GO TO 820
      I=0
810   I=I+1
      IF (I+NVAR .GT. NPAR) GO TO 820
      PARNAM(I)=PARNAM(I+NVAR)
      PARVAL(I)=PARVAL(I+NVAR)
      GO TO 810
820   CALL READC
      CALL READA(BUFF)
      IF (BUFF .EQ. COMMNT .OR. BUFF .EQ. BLANK) GO TO 820
      IF (BUFF .EQ. STOP) GO TO 20
      NVAR=NVAR+1
      NPAR=NPAR+1
      NVAL=NPAR
      PARNAM(NPAR)=PARNAM(NVAR)
      PARVAL(NPAR)=PARVAL(NVAR)
      PARNAM(NVAR)=BUFF
      CALL READF(PARVAL(NVAR))
      CALL READA(BUFF)
      IF (BUFF .EQ. ANG) PARVAL(NVAR)=PARVAL(NVAR)/BOHR
      IF (BUFF .EQ. BLANK) PARVAL(NVAR)=PARVAL(NVAR)*CFR
      IF (BUFF .EQ. DEG) PARVAL(NVAR)=PARVAL(NVAR)*CFA
      GO TO 820
C  CONSTANTS
830   NPAR=NVAR
840   CALL READC
      CALL READA(BUFF)
      IF (BUFF .EQ. COMMNT .OR. BUFF .EQ. BLANK) GO TO 840
      IF (BUFF .EQ. STOP) GO TO 20
      NPAR=NPAR+1
      NVAL=NPAR
      PARNAM(NPAR)=BUFF
      CALL READF(PARVAL(NPAR))
      CALL READA(BUFF)
      IF (BUFF .EQ. ANG) PARVAL(NPAR)=PARVAL(NPAR)/BOHR
      IF (BUFF .EQ. BLANK) PARVAL(NPAR)=PARVAL(NPAR)*CFR
      IF (BUFF .EQ. DEG) PARVAL(NPAR)=PARVAL(NPAR)*CFA
      GO TO 840
C
C GRADTOL
910   CALL READI(NOPT)
      IF(NOPT.EQ.0) NOPT=3
      GO TO 20
C
C  STEPSIZE FOR FORCE CONSTANT CALCULATIONS
930   CALL READF(VIBSIZ)
      GO TO 20
C  NUMBER OF POINTS FOR DIFFERENTIATION
C  IN NUMERICAL FORCE CONSTANT CALCULATIONS
940   CALL READI(NVIB)
      GO TO 20
C
C  DIIS
960   CALL READA(BUFF)
      IF(BUFF.EQ.YES.OR.BUFF.EQ.ON) LDIIS=.TRUE.
      IF(BUFF.EQ.OFF.OR.BUFF.EQ.NO) LDIIS=.FALSE.
      CALL READF(DIISE)
      IF(DIISE.EQ.0.0) DIISE=0.05
      CALL READF(DIISD)
      IF(DIISD.EQ.0.0) DIISD=1.0D-08
      CALL READI(MINVEC)
      IF(MINVEC.EQ.0) MINVEC=4
      GO TO 20
C  HFSCF
1040  RUNTYP=BUFF
      KEY=I-51
      GOTO 20
C    ---------  START      START      START   ------------
1050  IF(JUMP.EQ.2)CALL READI(IREST)
C     EXIT FOR SCF
      IF(KEY.EQ.4) GOTO 1350
C     WRITE(IW,1060) NAM(IFILM),IBLKM,NAM(IFILD),
C    1    IBLKD,NAM(IFILS),IBLKS
      WRITE(IW,1060) NAM(IFILD),IBLKD
C1060  FORMAT(///////
C    1    /1X,'MAIN FILE ON   ',2X,A40,' STARTING AT BLOCK',I4
C    2    /1X,'DUMP FILE ON   ',2X,A40,' STARTING AT BLOCK',I4
C    3    /1X,'SCRATCH FILE ON',2X,A40,' STARTING AT BLOCK',I4//
C    4    /1H0, 'START')
1060  FORMAT(///////
     1    /1X,'MAIN FILE ON   ',2X,A40,' STARTING AT BLOCK',I4//
     4    /1H0, 'START')
      CALL CHKFIL(IFILD)
C     CALL CHKFIL(IFILS)
      WRITE(IW,1070) TIMLIM,NPRINT,ITOL,ICUT,NORMF,NORMP,
     1   IREST,IST,JST,KST,LST,NREC,INTLOC
1070  FORMAT(/' TIME LIMIT = ',F10.3 /
     1    ' OUTPUT OPTION = ',I5/
     2    ' PREFACTOR TOLERANCE FOR INTEGRALS = 1.0D-',I2/
     3    ' INTEGRAL CUTOFF = 1.0D-',I2/
     4    ' OPTION FOR NORMALIZATION OF BASIS FUNCTIONS = ',I5/
     5    ' OPTION FOR UNNORMALIZATION OF PRIMITIVES = ',I5/
     7    ' RESTART OPTION = ',I5//
     8    ' STARTING SHELLS FOR 2E-INTEGRALS = ',4I5/
     9    ' RECORD NUMBER = ',I10/
     A    ' LOCATION OF FIRST INTEGRAL IN THIS RECORD = ',I5)
      IF (IREST.GE.0) GO TO 1190
      N=0
      DO 1090 II=1,NSHELL
      IAT=KATOM(II)
      J=DINT(ZAN(IAT)+0.01D0)
      IF(J.LE.0.OR.J.GE.37)J=37
      MINI=KMIN(II)
      MAXI=KMAX(II)
      DO 1090 I=MINI,MAXI
      N=N+1
      CALL PACK2(BFLAB(N),ATNAM(J),BFNAM(I),IAT)
      BFLABE(N) = BFLAB(N)
C
C     Jiabo Li
C     Print BFLABEL
C
C     WRITE(*,'(I5,A12)')N,BFLAB(N)
C     WRITE(*,'(I5,A12)')N,BFLABE(N)
1090  CONTINUE
      IF(NPRINT.EQ.-1)GOTO 1190
      IPASS=1
      FAC=ONE
      WRITE(IW,1100)
1100  FORMAT(/10X,'INTERNUCLEAR DISTANCES ( A.U.)'/10X,30(1H-))
1110  MAX=0
1120  MIN=MAX+1
      MAX=MAX+5
      IF (MAX.GT.NAT) MAX=NAT
      WRITE(IW,1130)
1130  FORMAT (1H )
      WRITE(IW,1140) (ANAM(J),J=MIN,MAX)
1140  FORMAT(17X,5(3X,A8,4X))
      WRITE(IW,1130)
      DO 1170 I=1,NAT
      DO 1150 J=MIN,MAX
1150  R(J)=FAC*RIJ(C,I,J)
      WRITE(IW,1160) I,ANAM(I),(R(J),J=MIN,MAX)
1160  FORMAT(I3,2X,A8,2X,5F13.6)
1170  CONTINUE
      IF (MAX.LT.NAT) GO TO 1120
      IF (IPASS.EQ.2) GO TO 1190
      IPASS=2
      FAC=BOHR
      WRITE(IW,1180)
1180  FORMAT(/10X,'INTERNUCLEAR DISTANCES (ANGS.)'/10X,30(1H-))
      GO TO 1110
1190  CONTINUE
1200  FORMAT(/' TOTAL NUMBER OF SHELLS                      =',I5/
     1    ' TOTAL NUMBER OF BASIS FUNCTIONS             =',I5/
     2    ' NUMBER OF ELECTRONS                         =',I5/
     3    ' CHARGE OF MOLECULE                          =',I5/
     4    ' STATE MULTIPLICITY                          =',I5/
     5    ' NUMBER OF DOUBLY OCCUPIED ORBITALS          =',I5/
     6    ' NO OF SINGLY OCCUPIED ORBITALS (ALPHA)      =',I5/
     7    ' NO OF SINGLY OCCUPIED ORBITALS (BETA)       =',I5/
     8    ' TOTAL NUMBER OF ATOMS                       =',I5)
      IF(SCFTYP.EQ.CLOSED.AND.MUL.NE.1) WRITE(IW,1291)
1291  FORMAT(1H ,'MULTIPLICITY NOT ONE WITH SCF CLOSED')
      NE=-ICH
      DO 1210 I=1,NAT
1210  NE=NE+DINT(ZAN(I)+0.1D0)
      LCM=MOD(NE+MUL,2).EQ. 1
      NA=(NE+MUL-1)/2
      NB=(NE-MUL+1)/2
      IF(SCFTYP.EQ.OSCF) NA=(NE-MUL+1)/2
      IF(SCFTYP.EQ.OSCF) NB=NA+(MUL-1)
      NDOUB=NA
      NSINA=0
      IF(SCFTYP.EQ.OSCF) NSINA=NB-NA
      NSINB=0
      WRITE(IW,1200) NSHELL,NUM,NE,ICH,MUL,NDOUB,NSINA,NSINB,NAT
C     WRITE( *,1200) NSHELL,NUM,NE,ICH,MUL,NDOUB,NSINA,NSINB,NAT
1280  IF (LCM) GO TO 1300
      WRITE (IW,1290)
1290  FORMAT (' Multiplicity inconsistent with number of electrons'
     1    /' JOB ABANDONED')
C     STOP
1300  WRITE(IW,1310) SCFTYP,RUNTYP,GUESS
C     WRITE( *,1310) SCFTYP,RUNTYP,GUESS
1310  FORMAT(' SCFTYP = ',A8   / ' RUNTYP = ',A8     /'  GUESS = ',A8)
C    CREATE DIRECTORY
1340  IF(IREST.EQ.-1)IREST=0
1350  CALL SECPUT(ISEX(4),4,1,IBLOK)
      LDA(ISEX(4))=50
      CALL WRT3(VIBSIZ,50,IBLOK,IFILD)
      CALL SECPUT(ISEX(24),24,1,IBLOK)
      LDA(ISEX(24))=14
      CALL WRT3C(TITLE,14,IBLOK,IFILD)
      LDA(ISEX(1))=MAXSYM
      LBLOK=LENSEC(MAXSYM)
      CALL SECPUT(ISEX(1),1,LBLOK,IBLOK)
      CALL WRT3(T,LDA(ISEX(1)),IBLOK,IFILD)
      CALL SECPUT(ISEX(21),21,1,IBLOK)
      LDA(ISEX(21))=1
      CALL WRT3C(GROUP,1,IBLOK,IFILD)
      LDA(ISEX(2))=MAXINA
      LBLOK=LENSEC(MAXINA)
      CALL SECPUT(ISEX(2),2,LBLOK,IBLOK)
      CALL WRT3(ATDAT,LDA(ISEX(2)),IBLOK,IFILD)
      LDA(ISEX(22))=MAXINB
      LBLOK=(MAXINB-1)/127+1
      CALL SECPUT(ISEX(22),22,LBLOK,IBLOK)
      CALL WRT3C(ANAM,LDA(ISEX(22)),IBLOK,IFILD)
      LDA(ISEX(3))=MAXEX4+MAXSH7
      LBLOK=LENSEC(MAXEX4+MAXSH7)
      CALL SECPUT(ISEX(3),3,LBLOK,IBLOK)
      CALL WRT3(EX,LDA(ISEX(3)),IBLOK,IFILD)
      CALL SECPUT(ISEX(13),13,1,IBLOK)
      LDA(ISEX(13))=23
      CALL WRT3(EN,23,IBLOK,IFILD)
      LDA(ISEX(20))=879
      CALL REVIND
      CALL TIMIT(3)
      RETURN
      END
      SUBROUTINE CHKFIL(IFIL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*64 NAM
      COMMON/DISC/ISEL(5),IPOS(32)
      COMMON/DISCB/NAM(16)
      IF(IPOS(IFIL).GE.0)RETURN
      WRITE(97,10) NAM(IFIL)
10    FORMAT(//10X,'FILE ',A4,' HAS NOT BEEN OPENED')
C     CALL CLENUP
      STOP
      END
      SUBROUTINE PACK2(CHAR,K,L,IAT)
      CHARACTER*2 I(6),K(*),L(*),NAT1,NAT2
      CHARACTER*12 A,CHAR
      CHARACTER*80 NUMBER
      EQUIVALENCE (A,I(1))
      NUMBER   = '0123456789'
      NC1      = 1+IAT/10
      NC2      = 1+IAT-10*(NC1-1)
      NAT1(1:1)=' '
      NAT1(2:2)= NUMBER(NC1:NC1)
      IF(NC1.EQ.1) NAT1(2:2)=' '
      NAT2(1:1)= NUMBER(NC2:NC2)
      NAT2(2:2)=' '
      I(1)=NAT1
      I(2)=NAT2
      I(3)=K(1)
      I(4)='  '
      I(5)='  '
      I(6)=L(1)
      CHAR=A
      RETURN
      END
      SUBROUTINE ATOMS (LBASIS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-4096)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.25*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.25*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-28-3*MAXEXP-27*MAXSHL/2)
      INTEGER P1, P2, P3
      LOGICAL LBASIS,LADAPT,LSKIP,REVISE
      CHARACTER*1 IAAA
      CHARACTER*4 ALABEL,TYPE
      CHARACTER*8 ATOM1,ANAM,ATNAME,PARNAM,OSCF,CLOSED
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      CHARACTER*8 FINI,COMMNT,BLANK,BUFF,BASIS
C     Added by Jiabo Li, April 8,2000
      CHARACTER*12 BFLABE,BFLAB
      CHARACTER*20 BASNAME
      DIMENSION NBFS(11),MINF(11),MAXF(11),ALABEL(11),NANGM(11)
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IAAA(80)
      COMMON/BIG/SC,SCC(3),CSINP(MAXEXP),CPINP(MAXEXP),CDINP(MAXEXP)
     &          ,INTYP(MAXSHL),NS(MAXSHL),EXX(6),CSS(6),CPP(6),CDD(6)
     &          ,ICT(MAXSHL,24),KS(MAXSHL),XJUNK(JNKBIG)
      COMMON /GENINF/NATOM,NELE,NSPIN,NBASIS,NATNUM(MAXCEN),
     & NATBAS(MAXCEN),ENREP,XYZ(3,MAXCEN),BFLABE(MAXBFN),BASNAME
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1               ZAN(MAXCEN),C(3,MAXCEN),
     2               NVAR,NPAR,NVAL,NUQ,CFR,CFA,KONTYP(MAXCEN),
     3               P1(MAXCEN),P2(MAXCEN),P3(MAXCEN),KR(MAXCEN),
     5               KA(MAXCEN),KB(MAXCEN),
     4               PARVAL(MAXN3),ZIN(MAXCEN),X(3,MAXCEN)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1               ATNAME(MAXCEN)
      COMMON/NSHEL/EX(MAXEXP),CS(MAXEXP),CP(MAXEXP),CD(MAXEXP),
     1             KSTART(MAXSHL),KATOM(MAXSHL),KTYPE(MAXSHL),
     3             KNG(MAXSHL),KLOC(MAXSHL)
     2            ,KMIN(MAXSHL),KMAX(MAXSHL),NSHELL,NSEL2
      COMMON/SYMTRY/T(216),INVT(24),NEWSH(MAXSHL,24),NT,NT2,
     1              XOLD,YOLD,ZOLD,XNEW,YNEW,ZNEW,XP,YP,ZP
     2             ,U1,U2,U3,V1,V2,V3,W1,W2,W3,X0,Y0,Z0
     3             ,INDEX,NAXIS
      COMMON/SYMTRB/GROUP
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON/SECTOR/NUM3,IBLK3,IODA(24),ICLASS(24),
     1              ILEN(24),MAXB,KBLKLA,REVISE
      DATA OSCF/'OSCF'/, CLOSED /'CLOSED'/
      DATA FINI/'END'/,  COMMNT /'NOTE'/
      DATA ALABEL/'1S','2S','2P','2SP','3S','3P','3SP','3D','S','P','D'/
      DATA NBFS /1,1,3,4,1,3,4,6,1,3,6/
      DATA MINF /1,1,2,1,1,2,1,5,1,2,5/
      DATA MAXF /1,1,4,4,1,4,4,10,1,4,10/
      DATA NANGM /1,1,2,2,1,2,2,3,1,2,3/
      DATA PI32 /5.56832799683170D+00/
      DATA TOL /1.0D-10/
      DATA BLANK /'        '/
10    FORMAT(/10X,20(1H*)//10X,'MOLECULAR BASIS SET'//
     1    10X,20(1H*))
20    FORMAT(//1H ,39(2H**)//1X,' ATOM     NUCLEAR',15X,
     1    'COORDINATES',17X,'NUMBER OF'/11X,'CHARGE',7X,'X',13X,
     2    'Y',14X,'Z',7X,'SHELLS'//1H ,39(2H**))
30    FORMAT(/1X,A8,2X,F5.1,3(F12.7,3X),I2)
40    FORMAT(/1H ,78(1H*)//' CONTRACTED PRIMITIVE FUNCTIONS'//
     1    ' Atom Shell Type Primitive  Exponents   ',
     2    9X,'Contraction coefficients')
50    FORMAT(6X,I3,4X,A4,3X,I3,1X,2F15.6,3H  (,F10.6,2H ))
60    FORMAT(' EXCESSIVE NUMBER OF ATOMS')
70    FORMAT(' EXCESSIVE NUMBER OF SHELLS')
80    FORMAT(' EXCESSIVE NUMBER OF BASIS FUNCTIONS')
90    FORMAT(' EXCESSIVE NUMBER OF CONTRACTED PRIMITIVE FUNCTIONS')
100   FORMAT(' EXCESSIVE CONTRACTION INTO SHELL')
110   FORMAT(65X,3A4)
120   FORMAT(/1X,5H*****,' TRANSFORMATION TABLE OF ATOMS',
     1    5H*****/30X,' ROWS ARE ATOMS'/30X,
     2    ' COLUMNS ARE SYMMETRY OPERATIONS')
130   FORMAT(//)
140   FORMAT(1X,16A8)
150   FORMAT(1X,A8,15(2X,I2,3X,1H*))
160   FORMAT(1X,16(2X,I2,3X,1H*))
170   FORMAT(/1X,5H*****,' TRANSFORMATION TABLE OF SHELLS',
     1    5H*****/30X,' ROWS ARE SHELLS'/30X,
     2    ' COLUMNS ARE SYMMETRY OPERATIONS')
180   FORMAT(' THE CONTRACTED PRIMITIVE FUNCTIONS HAVE BEEN ',
     1    'UNNORMALIZED')
190   FORMAT(1H1)
200   FORMAT(/)
210   FORMAT(/1X,5H*****,' INVERSE TRANSFORMATIONS ',5H*****/)
220   FORMAT(' THE CONTRACTED BASIS FUNCTIONS ARE NOW NORMALIZED TO',
     1    ' UNITY')
230   FORMAT(65X,I3,4X,A4,3X,I3,1X,2F14.6,2H (,F10.6,2H ),
     1    F14.6,2H (,F10.6,2H ))
240   FORMAT(/1X,A8)
C     READ IN UNIQUE CENTRES AND ATOMIC BASIS SETS GROUPED
C     IN SHELLS
C     GENERATE ALL NEW CENTERS
C     SET TABLE ( CENTERS VERSUS TRANSFORMATIONS )
C     SET TABLE ( SHELLS VERSUS TRANSFORMATIONS )
      ZERO=0.0D+00
      IF (LBASIS) NATOLD=NAT
      NAT=0
      NUQ=0
270   IF (LBASIS) GO TO 340
320   DO 330 I=1,110
      EX(I)=ZERO
      CS(I)=ZERO
      CP(I)=ZERO
      CD(I)=ZERO
      CSINP(I)=ZERO
      CPINP(I)=ZERO
      CDINP(I)=ZERO
330   CONTINUE
      NSHELL=0
      LOC=0
      NGAUSS=0
C     ----- READ IN UNIQUE CENTER -----
340   CALL READAT(ATOM1)
      IF(ATOM1.EQ.FINI) GO TO 590
      NAT=NAT+1
      NATBAS(NAT)=0
      IF(NAT.GT.MAXCEN)GOTO 801
      ANAM(NAT)=ATOM1
      IF (LBASIS .AND. ZAN(NAT) .NE. ZIN(NUQ)) CALL HONDER(2)
      ZAN(NAT)=ZIN(NUQ)
      DO 350 I=1,3
350   C(I,NAT)=X(I,NUQ)
      IF (LBASIS) GO TO 540
C     ----- READ IN SHELLS -----
      ISHELL=0
      IGAUSS=0
      NS(NAT)=0
      KS(NAT)=NSHELL+1
360   CONTINUE
      CALL READC
      CALL READA(BUFF)
      IF (BUFF .EQ. BLANK .OR. BUFF .EQ. COMMNT) GO TO 360
      IF(BUFF.EQ.FINI) GOTO 540
      JREC=0
      CALL READI(ISHELL)
      CALL READA4(TYPE)
      CALL READI(IGAUSS)
      CALL READA(BASIS)
      CALL READF(SC)
      CALL READF(SCC(1))
      CALL READF(SCC(2))
      CALL READF(SCC(3))
      IF(IGAUSS.LE.20) GO TO 380
      WRITE(IW,100)
      STOP
380   CONTINUE
      DO 390 I=1,11
      IF(TYPE.NE.ALABEL(I)) GOTO 390
      ITYP=I
      GOTO 400
390   CONTINUE
      CALL HONDER(4)
400   CONTINUE
410   CONTINUE
      NSHELL=NSHELL+1
      IF(NSHELL.GT.MAXSHL)GOTO 811
      KMIN(NSHELL)=MINF(ITYP)
      KMAX(NSHELL)=MAXF(ITYP)
      KSTART(NSHELL)=NGAUSS+1
      KATOM(NSHELL)=NAT
      KTYPE(NSHELL)=NANGM(ITYP)
      INTYP(NSHELL)=ITYP
      KNG(NSHELL)=IGAUSS
      KLOC(NSHELL)=LOC+1
      NGAUSS=NGAUSS+IGAUSS
      LOC=LOC+NBFS(ITYP)
      NATBAS(NAT)=NATBAS(NAT)+NBFS(ITYP)
      K1=KSTART(NSHELL)
      K2=K1+KNG(NSHELL)-1
      IF(K2.GT.MAXEXP)GOTO 831
      NS(NAT)=NS(NAT)+1
C     ----- GENERAL BASIS SET -----
      IF(ITYP.LE.7) CALL HONDER(5)
      DO 450 K=K1,K2
420   CALL READC
      CALL READA(BUFF)
      IF (BUFF .EQ. BLANK .OR. BUFF .EQ. COMMNT) GO TO 420
      JREC=0
      CALL READI(KDUM)
      CALL READF(EX(K))
      CALL READF(C1)
      CALL READF(C2)
440   IF(TYPE.EQ.ALABEL(9)) CSINP(K)=C1
      IF(TYPE.EQ.ALABEL(10)) CPINP(K)=C1
      IF(TYPE.EQ.ALABEL(11)) CDINP(K)=C1
      CS(K)=CSINP(K)
      CD(K)=CDINP(K)
      CP(K)=CPINP(K)
450   CONTINUE
C     IF(NORMP.NE.1) ... UNNORMALIZATION OF THE PRIMITIVE FUNCTIONS.
C     IF CONTRACTION COEFFICIENTS ARE GIVEN IN TERMS OF NORMALIZED
C     PRIMITIVE FUNCTIONS, CHANGE THEM TO GO WITH UNNORMALIZED
C     PRIMITIVES .
480   CONTINUE
      IF(NORMP.EQ.1) GO TO 500
      DO 490 IG=K1,K2
      EE=EX(IG)+EX(IG)
      FACS=PI32/(EE*DSQRT(EE))
      A4=EE+EE
      FACP=FACS/A4
      FACD=3.0*FACP/A4
      CS(IG)=CS(IG)/DSQRT(FACS)
      CP(IG)=CP(IG)/DSQRT(FACP)
      CD(IG)=CD(IG)/DSQRT(FACD)
490   CONTINUE
500   CONTINUE
C     IF(NORMF.NE.1) NORMALIZE THE CONTRACTED BASIS FUNCTIONS.
      IF(NORMF.EQ.1) GO TO 360
      FACS=ZERO
      FACP=ZERO
      FACD=ZERO
      DO 520 IG=K1,K2
      DO 520 JG=K1,IG
      EE=EX(IG)+EX(JG)
      FAC=EE*DSQRT(EE)
      DUMS=CS(IG)*CS(JG)/FAC
      A4=EE+EE
      DUMP=CP(IG)*CP(JG)/(A4*FAC)
      DUMD=3.0*CD(IG)*CD(JG)/(A4*A4*FAC)
      IF(IG.EQ.JG) GO TO 510
      DUMS=DUMS+DUMS
      DUMP=DUMP+DUMP
      DUMD=DUMD+DUMD
510   FACS=FACS+DUMS
      FACP=FACP+DUMP
      FACD=FACD+DUMD
520   CONTINUE
      DO 530 IG=K1,K2
      IF(FACS.GT.TOL) CS(IG)=CS(IG)/DSQRT(FACS*PI32)
      IF(FACP.GT.TOL) CP(IG)=CP(IG)/DSQRT(FACP*PI32)
      IF(FACD.GT.TOL) CD(IG)=CD(IG)/DSQRT(FACD*PI32)
530   CONTINUE
      GO TO 360
C     GENERATE EQUIVALENT CENTERS
540   IF (NT .EQ. 1) GO TO 340
      XS=U1*(C(1,NAT)-X0)+U2*(C(2,NAT)-Y0)+U3*(C(3,NAT)-Z0)
      YS=V1*(C(1,NAT)-X0)+V2*(C(2,NAT)-Y0)+V3*(C(3,NAT)-Z0)
      ZS=W1*(C(1,NAT)-X0)+W2*(C(2,NAT)-Y0)+W3*(C(3,NAT)-Z0)
      NAT0=NAT
C  Loop over symmetry-generated points
      DO 570 IT=2,NT
      NN=9*(IT-1)
      XNEW=XS*T(NN+1)+YS*T(NN+2)+ZS*T(NN+3)
      YNEW=XS*T(NN+4)+YS*T(NN+5)+ZS*T(NN+6)
      ZNEW=XS*T(NN+7)+YS*T(NN+8)+ZS*T(NN+9)
      XP=X0+U1*XNEW+V1*YNEW+W1*ZNEW
      YP=Y0+U2*XNEW+V2*YNEW+W2*ZNEW
      ZP=Z0+U3*XNEW+V3*YNEW+W3*ZNEW
      DO 550 IAT=1,NAT
      TEST=(XP-C(1,IAT))**2+(YP-C(2,IAT))**2+(ZP-C(3,IAT))**2
      IF(TEST.LE.TOL) GO TO 570
550   CONTINUE
      NUAT=NAT
      NAT=NAT+1
      IF(NAT.GT.MAXCEN)GOTO 801
      C(1,NAT)=C(1,NUAT)
      C(2,NAT)=C(2,NUAT)
      C(3,NAT)=C(3,NUAT)
      C(1,NUAT)=XP
      C(2,NUAT)=YP
      C(3,NUAT)=ZP
      IF (LBASIS) GO TO 570
      NS(NAT)=NS(NAT0)
      KS(NAT)=KS(NAT-1)+NS(NAT0)
      ANAM(NAT)=ANAM(NAT0)
      ZAN(NAT)=ZAN(NAT0)
      NSHELL=NSHELL+NS(NAT)
      NS1=NS(NAT)
      IF(NS1.EQ.0) GOTO 570
      DO 560 K=1,NS1
      J=KS(NAT0)+K-1
      JJ=KS(NAT)+K-1
      KMIN(JJ)=KMIN(J)
      KMAX(JJ)=KMAX(J)
      KSTART(JJ)=KSTART(J)
      KTYPE(JJ)=KTYPE(J)
      KNG(JJ)=KNG(J)
      KATOM(JJ)=NAT
      KLOC(JJ)=LOC+1
      INTYP(JJ)=INTYP(J)
560   LOC=LOC+NBFS(INTYP(JJ))
      NATBAS(NAT)=NATBAS(NAT)+NBFS(INTYP(JJ))
570   CONTINUE
      GO TO 340
590   IF (LBASIS .AND. NAT .NE. NATOLD) CALL HONDER(2)
      IF (LBASIS) RETURN
C     IF(NORMP.NE.1) THE CONTRACTED BASIS FUNCTIONS HAVE BEEN
C     EXPRESSED IN TERMS OF UNNORMALIZED PRIMITIVE FUNCTIONS.
      IF(NORMP.NE.1) WRITE(IW,180)
C     IF(NORMF.NE.1) THE CONTRACTED BASIS FUNCTIONS HAVE BEEN
C     NORMALIZED TO UNITY
      IF(NORMF.NE.1) WRITE(IW,220)
C     FORM TRANSFORMATION TABLES FOR ATOMS AND SHELLS.
      DO 640 IAT=1,NAT
      CX=C(1,IAT)
      CY=C(2,IAT)
      CZ=C(3,IAT)
      NS1=KS(IAT)-1
      NS2=NS(IAT)
      IF(NS2.EQ.0) GOTO 640
      XS=U1*(CX-X0)+U2*(CY-Y0)+U3*(CZ-Z0)
      YS=V1*(CX-X0)+V2*(CY-Y0)+V3*(CZ-Z0)
      ZS=W1*(CX-X0)+W2*(CY-Y0)+W3*(CZ-Z0)
      DO 630 IT=1,NT
      NN=9*(IT-1)
      XNEW=XS*T(NN+1)+YS*T(NN+2)+ZS*T(NN+3)
      YNEW=XS*T(NN+4)+YS*T(NN+5)+ZS*T(NN+6)
      ZNEW=XS*T(NN+7)+YS*T(NN+8)+ZS*T(NN+9)
      XP=X0+U1*XNEW+V1*YNEW+W1*ZNEW
      YP=Y0+U2*XNEW+V2*YNEW+W2*ZNEW
      ZP=Z0+U3*XNEW+V3*YNEW+W3*ZNEW
      DO 600 I=1,NAT
      TEST=(XP-C(1,I))**2+(YP-C(2,I))**2+(ZP-C(3,I))**2
      IF(TEST.GT.TOL) GO TO 600
      ICTR=I
      GO TO 610
600   CONTINUE
610   ICT(IAT,IT)=ICTR
C  ICT(IAT,IT) is the number of the atom into which atom IAT is taken
C  by symmetry operation IT.
      NS3=KS(ICTR)-1
      DO 620 ISH=1,NS2
620   NEWSH(NS1+ISH,IT)=NS3+ISH
C  NEWSH(NS,IT) is the number of the shell into which shell NS is taken
C  by symmetry operation IT.
630   CONTINUE
640   CONTINUE
C     NPRINT=1   ... EXTRA PRINTING FOR BASIS SET + SYMMETRY.
C     NPRINT=0   ... NORMAL PRINTING
      IF(NPRINT.EQ.6) GO TO 800
      WRITE(IW,10)
C     WRITE( *,20)
      WRITE(IW,20)
      DO 650 IAT=1,NAT
      WRITE(IW,30) ANAM(IAT),ZAN(IAT),C(1,IAT),C(2,IAT),
     1  C(3,IAT),NS(IAT)
C     WRITE( *,30) ANAM(IAT),ZAN(IAT),C(1,IAT),C(2,IAT),
C    2   C(3,IAT),NS(IAT)
      IF(NS(IAT).EQ.0) GOTO 650
      NS1=KS(IAT)
      NS2=NS1+NS(IAT)-1
C     WRITE( *,110) (ALABEL(INTYP(ISH)),ISH=NS1,NS2)
      WRITE(IW,110) (ALABEL(INTYP(ISH)),ISH=NS1,NS2)
650   CONTINUE
      WRITE(IW,40)
      DO 740 IAT=1,NAT
      DO 660 IT=1,NT
      IF(ICT(IAT,IT).GT.IAT) GO TO 740
660   CONTINUE
      WRITE(IW,240) ANAM(IAT)
      NS1=KS(IAT)
      NS2=NS1+NS(IAT)-1
      IF(NS(IAT).EQ.0) GOTO 740
      DO 730 ISH=NS1,NS2
      WRITE(IW,200)
      I1=KSTART(ISH)
      I2=I1+KNG(ISH)-1
      ITYP=INTYP(ISH)
      DO 720 IG=I1,I2
      GO TO (670,670,680,700,670,680,700,690,670,680,690) ,ITYP
670   C1=CS(IG)
      C2=CSINP(IG)
      GO TO 710
680   C1=CP(IG)
      C2=CPINP(IG)
      GO TO 710
690   C1=CD(IG)
      C2=CDINP(IG)
      GOTO 710
700   C1=CS(IG)
      C2=CSINP(IG)
      C3=CP(IG)
      C4=CPINP(IG)
      WRITE(IW,230) ISH,ALABEL(ITYP),IG,EX(IG),C1,C2,C3,C4
      GO TO 720
710   WRITE(IW,50) ISH,ALABEL(ITYP),IG,EX(IG),C1,C2
720   CONTINUE
730   CONTINUE
740   CONTINUE
800   CONTINUE
      IF(NAT.LE.MAXCEN) GO TO 810
801   WRITE(IW,60)
      CALL HONDER(7)
810   IF(NSHELL.LE.MAXSHL) GO TO 820
811   WRITE(IW,70)
      CALL HONDER(7)
820   IF(LOC.LE.MAXBFN) GO TO 830
821   WRITE(IW,80)
      CALL HONDER(7)
830   IF(NGAUSS.LE.MAXEXP) GO TO 840
831   WRITE(IW,90)
      CALL HONDER(7)
840   CONTINUE
      NUM=LOC
      NX=NUM*(NUM+1)/2
      RETURN
      END
      SUBROUTINE READAT(ATOM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      INTEGER IATCON(3),IAT1,IAT2,IAT3,P,P1, P2, P3
      CHARACTER*8 ANAM,ATNAME,PARNAM,GROUP,ATOM
      CHARACTER*8 ACONX,COMMNT,FINI,SEP,BLANK,BCONX
      CHARACTER*12 BFLAB
      DIMENSION ACONX(2)
      COMMON/SYMTRY/TT(216),INVT(24),ISO(MAXSHL,24),NT,NT2
     1             ,XSMAL,YSMAL,ZSMAL,XNEW,YNEW,ZNEW,XP,YP,ZP
     2             ,U1,U2,U3,V1,V2,V3,W1,W2,W3,X0,Y0,Z0
     3             ,INDEX,NAXIS
      COMMON/SYMTRB/GROUP
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1               ZAN(MAXCEN),C(3,MAXCEN),
     2               NVAR,NPAR,NVAL,NUQ,CFR,CFA,KONTYP(MAXCEN),
     3               P(MAXCEN,3),KR(MAXCEN),KA(MAXCEN),KB(MAXCEN),
     4               PARVAL(MAXN3),ZIN(MAXCEN),X(3,MAXCEN)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1               ATNAME(MAXCEN)
      EQUIVALENCE (IAT1,IATCON(1)),(IAT2,IATCON(2)),(IAT3,IATCON(3))
      DATA COMMNT /'NOTE'/
      DATA ACONX /'XYZ','POL'/
      DATA FINI /'END'/, SEP /'NEXT'/, BLANK /'        '/
C  Initialize
      IF (NUQ .EQ. 0) NVAL=NPAR
C  Read atom name and nuclear charge
10    CALL READC
      CALL READA(ATOM)
      IF (ATOM .EQ. BLANK .OR. ATOM .EQ. COMMNT) GO TO 10
      IF (ATOM .EQ. FINI .OR. ATOM .EQ. SEP) RETURN
      NUQ=NUQ+1
      ATNAME(NUQ)=ATOM
      CALL READF(ZNUC)
      ZIN(NUQ)=ZNUC
C  Read connexion type
      CALL READA(BCONX)
C  Possible connexions are:
C          1. Absolute cartesian coordinates        'XYZ' (default)
C          2. Absolute polar coordinates            'POL'
      KCONX=0
      DO 20 K=1,2
20    IF (BCONX .EQ. ACONX(K)) KCONX=K
      KONTYP(NUQ)=KCONX
      IF (KCONX .EQ. 0) CALL REREAD(-1)
      IF (KCONX .EQ. 2) GO TO 30
C  Read in cartesian coordinates
      CALL READP(X(1,NUQ),KR(NUQ),CFR)
      CALL READP(X(2,NUQ),KA(NUQ),CFR)
      CALL READP(X(3,NUQ),KB(NUQ),CFR)
      GO TO 210
C  Read in polar coordinates
30    CALL READP(R,KR(NUQ),CFR)
      CALL READP(THETA,KA(NUQ),CFA)
      CALL READP(PHI,KB(NUQ),CFA)
      X(3,NUQ)=R*DCOS(THETA)
      X(1,NUQ)=R*DSIN(THETA)*DCOS(PHI)
      X(2,NUQ)=R*DSIN(THETA)*DSIN(PHI)
210   IF (ZIN(NUQ) .LT. 0) GO TO 10
      RETURN
      END
      SUBROUTINE PTGRP(NPRINT,IW)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'maxcen.inc'
      CHARACTER*1 IA
      CHARACTER*8 GRP,DRC,GROUP,FINI,DIRECT,GUFF,BUFF
      DIMENSION GRP(16),DRC(2)
      COMMON/BLKIN/NIRR,MULT(8,8),IRR(MAXBFN+1),AGROUP,XJNK(114)
      COMMON/SYMTRY/T(216),INVT(24),ISO(MAXSHL,24),NT,NT2,
     1              XSMAL,YSMAL,ZSMAL,XNEW,YNEW,ZNEW,XP,YP,ZP
     2             ,U1,U2,U3,V1,V2,V3,W1,W2,W3,X0,Y0,Z0
     3             ,INDEX,NAXIS
      COMMON/SYMTRB/GROUP
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      DATA GRP/'C1','CS','CI','CN','S2N','CNH','CNV',
     1'DN','DNH','DND','CINFV','DINFH','T','TH','TD','O'/
      DATA DRC/'NORMAL','PARALLEL'/
      DATA ZERO,PT5,ONE /0.0D+00,0.5D+00,1.0D+00/
      DATA TOL /1.0D-10/
      DATA FINI/'END'/
      DATA PI2 /6.28318530717958D+00/
10    FORMAT(' LINEAR MOLECULE , POINT GROUP IS CINFV OR DINFH ',/,
     1 ' PLEASE USE GROUP CNV OR DNH...')
20    FORMAT(' ILLEGAL POINT GROUP INPUT. STOP..')
30    FORMAT(/,' THE POINT GROUP OF THE MOLECULE IS ...',A8,/,
     1 ' THE ORDER OF THE PRINCIPAL AXIS IS ...',I5)
40    FORMAT(/,' THE ORIGIN OF THE LOCAL FRAME IS AT X =  ',F10.5,
     1 ' Y = ',F10.5,' Z = ',F10.5,/,
     2 ' DIRECTOR COSINES OF THE NEW AXES ',/,34X,3(5X,F10.5),/,34X,
     3 3(5X,F10.5),/,34X,3(5X,F10.5))
50    FORMAT(' ROTATIONS ABOUT PRINCIPAL AXIS')
60    FORMAT(' SIGMA-H FOLLOWED BY ROTATIONS')
70    FORMAT(' C2 FOLLOWED BY ROTATIONS ')
80    FORMAT(' SIGMA-D FOLLOWED BY ROTATIONS')
90    FORMAT(' SIGMA-V FOLLOWED BY ROTATIONS')
100   FORMAT(/,10X,' CENTER OF SYMMETRY AT X = ',F10.5,' Y = ',F10.5,
     1 ' Z = ',F10.5)
110   FORMAT(/,' PLANE OF SYMMETRY DEFINED BY ITS NORMAL U = ',F10.5,
     1 ' V = ',F10.5,' W = ',F10.5)
120   FORMAT(/,10X,3F15.9,/,10X,3F15.9,/,10X,3F15.9)
130   FORMAT(' C2 FOLLOWED BY SIGMA-H FOLLOWED BY ROTATIONS')
140   FORMAT(' SIGMA-D FOLLOWED BY C2 FOLLOWED BY ROTATIONS')
150   FORMAT(' S2N ROTATION FOLLOWED BY ROTATIONS')
160   CALL READC
      CALL READA(GROUP)
      CALL READI(NAXIS)
170   INDEX=17
      DO 180 I=1,16
180   IF(GROUP.EQ.GRP(I)) INDEX=I
      WRITE(IW,30) GROUP,NAXIS
      IF(INDEX.LE.17) GO TO 190
      WRITE(IW,20)
      CALL HONDER(2)
190   IF(INDEX.LE.3) GO TO 410
      IF(INDEX.EQ.11.OR.INDEX.EQ.12) NAXIS=2
      IF(INDEX.EQ.11) INDEX=7
      IF(INDEX.EQ.12) INDEX=9
C     DEFINE LOCAL FRAME
C     READ IN PRINCIPAL AXIS   ( 1 CARD )
C     READ IN X-LOCAL AXIS   ( 1 CARD )
C     DEFAULT OPTION : LOCAL FRAME IDENTICAL TO MASTER FRAME
      CALL READC
      CALL READA(GUFF)
      IF(GUFF.EQ.FINI) GOTO 200
      JREC=0
      CALL READF(X0)
      CALL READF(Y0)
      CALL READF(Z0)
      CALL READF(X1)
      CALL READF(Y1)
      CALL READF(Z1)
      CALL READC
      CALL READA(GUFF)
      IF(GUFF.EQ.FINI) CALL HONDER(2)
      JREC=0
      CALL READF(X2)
      CALL READF(Y2)
      CALL READF(Z2)
      CALL READA(DIRECT)
      RHO=DSQRT((X1-X0)**2+(Y1-Y0)**2+(Z1-Z0)**2)
      CALL READC
      CALL READA(GUFF)
      IF(GUFF.NE.FINI) CALL HONDER(2)
      GOTO 210
200   X0=ZERO
      Y0=ZERO
      Z0=ZERO
      X1=ZERO
      Y1=ZERO
      Y2=ZERO
      Z2=ZERO
      Z1=ONE
      X2=ONE
      DIRECT=DRC(2)
      RHO=ONE
210   CONTINUE
      IF(DIRECT.NE.DRC(1)) DIRECT=DRC(2)
      W1=(X1-X0)/RHO
      W2=(Y1-Y0)/RHO
      W3=(Z1-Z0)/RHO
      WW=W1*W1+W2*W2+W3*W3
      X02=X2-X0
      Y02=Y2-Y0
      Z02=Z2-Z0
      RHO=(W1*X02+W2*Y02+W3*Z02)/WW
      DUM=RHO*W1
      X0=X0+DUM
      X02=X02-DUM
      DUM=RHO*W2
      Y0=Y0+DUM
      Y02=Y02-DUM
      DUM=RHO*W3
      Z0=Z0+DUM
      Z02=Z02-DUM
      UU=(X02*X02+Y02*Y02+Z02*Z02)
      U=DSQRT(UU)
      U1=X02/U
      U2=Y02/U
      U3=Z02/U
      V3=W1*U2-W2*U1
      V2=W3*U1-W1*U3
      V1=W2*U3-W3*U2
      IF(DIRECT.EQ.DRC(2)) GO TO 220
      DUM=U1
      U1=V1
      V1=-DUM
      DUM=U2
      U2=V2
      V2=-DUM
      DUM=U3
      U3=V3
      V3=-DUM
220    CONTINUE
      IF(NPRINT.NE.1) GO TO 230
      WRITE(IW,40) X0,Y0,Z0,U1,V1,W1,U2,V2,W2,U3,V3,W3
230   CONTINUE
      IF(INDEX.GE.13) GO TO 410
C     ROTATION ABOUT PRINCIPAL AXIS
      NN=0
      N=NAXIS
      ALPHA=ZERO
      ALPH=PI2/FLOAT(N)
240   NN=NN+1
      IF(NN.GT.N) GO TO 250
      COSA=DCOS(ALPHA)
      SINA=DSIN(ALPHA)
      I=9*(NN-1)
      T(I+1)=COSA
      T(I+5)=COSA
      T(I+2)=-SINA
      T(I+4)=SINA
      T(I+3)=ZERO
      T(I+6)=ZERO
      T(I+7)=ZERO
      T(I+8)=ZERO
      T(I+9)=ONE
      ALPHA=ALPHA+ALPH
      GO TO 240
C     END OF GROUP 4
250   NT=N
      II=9*NT
      IF(NPRINT.NE.1) GO TO 260
      WRITE(IW,50)
      N1=1
      N2=NAXIS
      CALL PRINT(N1,N2,IW)
260   CONTINUE
      IF(INDEX.EQ.4) GO TO 630
      IF(INDEX.EQ.5) GO TO 500
      IF(INDEX.EQ.7) GO TO 380
      IF(INDEX.NE.6.AND.INDEX.NE.9) GO TO 310
C     SIGMA-H PLANE  EQUATION (Z=0) IN LOCAL FRAME
      NN=0
270   NN=NN+1
      IF(NN.GT.NT) GO TO 290
C     GROUP 6 0R 9
      I=II+9*(NN-1)
      DO 280 J=1,8
280   T(I+J)=T(I+J-II)
      T(I+9)=-T(I+9-II)
      GO TO 270
290   NT=NT+NT
      II=9*NT
      IF(NPRINT.NE.1) GO TO 300
      WRITE(IW,60)
      N1=N2+1
      N2=N2+NAXIS
      CALL PRINT(N1,N2,IW)
300   CONTINUE
C     END OF GROUP 6
      IF(INDEX.EQ.6) GO TO 630
C     ONE CP2 AXIS IS THE X-AXIS OF THE LOCAL FRAME
C     GROUP 8 , 9 ,10
310   CONTINUE
      NN=0
320   NN=NN+1
      IF(NN.GT.NT) GO TO 330
      I=II+9*(NN-1)
      T(I+1)=T(I+1-II)
      T(I+2)=-T(I+2-II)
      T(I+3)=-T(I+3-II)
      T(I+4)=T(I+4-II)
      T(I+5)=-T(I+5-II)
      T(I+6)=-T(I+6-II)
      T(I+7)=T(I+7-II)
      T(I+8)=-T(I+8-II)
      T(I+9)=-T(I+9-II)
      GO TO 320
330   NT=NT+NT
      II=9*NT
      IF(NPRINT.NE.1) GO TO 340
      WRITE(IW,70)
      N1=N2+1
      N2=N2+NAXIS
      CALL PRINT(N1,N2,IW)
      IF(INDEX.NE.9) GO TO 340
      WRITE(IW,130)
      N1=N2+1
      N2=N2+NAXIS
      CALL PRINT(N1,N2,IW)
340   CONTINUE
C     END OF GROUP 8 AND 9
      IF(INDEX.EQ.8.OR.INDEX.EQ.9) GO TO 630
C     DND GROUP . EQUATION OF PLANE SIGMA-D IS :
C     DSIN(ALPH/4)*X-DCOS(ALPH/4)*Y=0
C     THE X-AXIS IS THE CP2 AXIS.
C     GROUP 10
      BETA=PT5*ALPH
      COSA=DCOS(BETA)
      SINA=DSIN(BETA)
      NN=0
350   NN=NN+1
      IF(NN.GT.NT) GO TO 360
      I=II+9*(NN-1)
      T(I+1)=COSA*T(I+1-II) + SINA*T(I+2-II)
      T(I+2)=SINA*T(I+1-II) - COSA*T(I+2-II)
      T(I+3)=     T(I+3-II)
      T(I+4)=COSA*T(I+4-II) + SINA*T(I+5-II)
      T(I+5)=SINA*T(I+4-II) - COSA*T(I+5-II)
      T(I+6)=     T(I+6-II)
      T(I+7)=COSA*T(I+7-II) + SINA*T(I+8-II)
      T(I+8)=SINA*T(I+7-II) - COSA*T(I+8-II)
      T(I+9)=     T(I+9-II)
      GO TO 350
360   NT=NT+NT
      II=9*NT
      IF(NPRINT.NE.1) GO TO 370
      WRITE(IW,80)
      N1=N2+1
      N2=N2+NAXIS
      CALL PRINT(N1,N2,IW)
      WRITE(IW,140)
      N1=N2+1
      N2=N2+NAXIS
      CALL PRINT(N1,N2,IW)
370   CONTINUE
C     END OF GROUP 10
      GO TO 630
C     GROUP 7
C     SIGMA-V IS THE (X-Z) PLANE OF LOCAL FRAME
380   CONTINUE
      NN=0
390   NN=NN+1
      IF(NN.GT.NT) GO TO 400
      I=II+9*(NN-1)
      T(I+1)=T(I+1-II)
      T(I+2)=-T(I+2-II)
      T(I+3)=T(I+3-II)
      T(I+4)=T(I+4-II)
      T(I+5)=-T(I+5-II)
      T(I+6)=T(I+6-II)
      T(I+7)=T(I+7-II)
      T(I+8)=-T(I+8-II)
      T(I+9)=T(I+9-II)
      GO TO 390
400   NT=NT+NT
      II=9*NT
C     END OF GROUP 7
      IF(NPRINT.NE.1) GO TO 630
      WRITE(IW,90)
      N1=N2+1
      N2=N2+NAXIS
      CALL PRINT(N1,N2,IW)
      GO TO 630
410   CONTINUE
      T(1)=ONE
      T(5)=ONE
      T(9)=ONE
      T(2)=ZERO
      T(3)=ZERO
      T(4)=ZERO
      T(6)=ZERO
      T(7)=ZERO
      T(8)=ZERO
      IF(INDEX.EQ.1) GO TO 420
      IF(INDEX.EQ.2) GO TO 430
      IF(INDEX.EQ.3) GO TO 460
      IF(INDEX.EQ.11.OR.INDEX.EQ.12) GO TO 490
      GO TO 530
420   NT=1
      X0=ZERO
      Y0=ZERO
      Z0=ZERO
      U1=ONE
      V2=ONE
      W3=ONE
      U2=ZERO
      U3=ZERO
      V1=ZERO
      V3=ZERO
      W1=ZERO
      W2=ZERO
      CALL READC
      CALL READA(BUFF)
      IF(BUFF.NE.FINI) CALL HONDER(2)
      GO TO 630
C     CS SYMMETRY GROUP
C     THE 3 POINTS 1,2,3 DEFINE SIGMA-H PLANE
430   CONTINUE
      CALL READC
      CALL READA(GUFF)
      IF(GUFF.EQ.FINI) GOTO 440
      JREC=0
      CALL READF(X1)
      CALL READF(Y1)
      CALL READF(Z1)
      CALL READF(X2)
      CALL READF(Y2)
      CALL READF(Z2)
      CALL READC
      CALL READA(GUFF)
      IF(GUFF.EQ.FINI) CALL HONDER(2)
      JREC=0
      CALL READF(X3)
      CALL READF(Y3)
      CALL READF(Z3)
      RHO=(X2-X1)**2+(Y2-Y1)**2+(Z2-Z1)**2
      CALL READC
      CALL READA(GUFF)
      IF(GUFF.NE.FINI) CALL HONDER(2)
      GOTO 450
C     DEFAULT OPTION : PLANE IS THE (X,Z) PLANE
440   X1=ZERO
      Y1=ZERO
      Z1=ZERO
      X2=ZERO
      Y2=ZERO
      Z2=ONE
      X3=ONE
      Y3=ZERO
      Z3=ZERO
450   CONTINUE
      NT=2
      W1=(Y2-Y1)*(Z3-Z1)-(Y3-Y1)*(Z2-Z1)
      W2=(Z2-Z1)*(X3-X1)-(Z3-Z1)*(X2-X1)
      W3=(X2-X1)*(Y3-Y1)-(X3-X1)*(Y2-Y1)
      RHO=DSQRT(W1*W1+W2*W2+W3*W3)
      W1=W1/RHO
      W2=W2/RHO
      W3=W3/RHO
      U1=X2-X1
      U2=Y2-Y1
      U3=Z2-Z1
      RHO=DSQRT(U1*U1+U2*U2+U3*U3)
      U1=U1/RHO
      U2=U2/RHO
      U3=U3/RHO
      V1=W2*U3-W3*U2
      V2=W3*U1-W1*U3
      V3=W1*U2-W2*U1
      X0=X1
      Y0=Y1
      Z0=Z1
      T(10)=ONE
      T(14)=ONE
      T(18)=-ONE
      T(11)=ZERO
      T(12)=ZERO
      T(13)=ZERO
      T(15)=ZERO
      T(16)=ZERO
      T(17)=ZERO
      IF(NPRINT.NE.1) GO TO 630
      WRITE(IW,110) W1,W2,W3
      WRITE(IW,120) U1,V1,W1,U2,V2,W2,U3,V3,W3
      GO TO 630
C     CI SYMMETRY GROUP
C     CENTER OF INVERSION IS (X0,Y0,Z0)
460   X0=ZERO
      Y0=ZERO
      Z0=ZERO
470   CALL READC
      CALL READA(GUFF)
      IF(GUFF.EQ.FINI) GOTO 480
      JREC=0
      CALL READF(X0)
      CALL READF(Y0)
      CALL READF(Z0)
      CALL READC
      CALL READA(GUFF)
      IF(GUFF.NE.FINI) CALL HONDER(2)
480   IF(NPRINT.EQ.3) WRITE(IW,100) X0,Y0,Z0
      T(10)=-ONE
      T(14)=-ONE
      T(18)=-ONE
      T(11)=ZERO
      T(12)=ZERO
      T(13)=ZERO
      T(15)=ZERO
      T(16)=ZERO
      T(17)=ZERO
      NT=2
      U1=ONE
      V2=ONE
      W3=ONE
      U2=ZERO
      U3=ZERO
      V1=ZERO
      V3=ZERO
      W1=ZERO
      W2=ZERO
      GO TO 630
490   WRITE(IW,10)
      STOP
500   NN=0
      BETA=PT5*ALPH
      COSB=DCOS(BETA)
      SINB=DSIN(BETA)
510   NN=NN+1
      IF(NN.GT.NT) GO TO 520
C     S2N GROUP
C     THE PLANE OF SYMMETRY FOR THE IMPROPER ROTATION
C     IS THE (X,Y) PLANE OF THE LOCAL FRAME
      I=II+9*(NN-1)
      T(I+1)= COSB*T(I+1-II)+SINB*T(I+2-II)
      T(I+2)=-SINB*T(I+1-II)+COSB*T(I+2-II)
      T(I+3)=     -T(I+3-II)
      T(I+4)= COSB*T(I+4-II)+SINB*T(I+5-II)
      T(I+5)=-SINB*T(I+4-II)+COSB*T(I+5-II)
      T(I+6)=     -T(I+6-II)
      T(I+7)= COSB*T(I+7-II)+SINB*T(I+8-II)
      T(I+8)=-SINB*T(I+7-II)+COSB*T(I+8-II)
      T(I+9)=     -T(I+9-II)
      GO TO 510
520   NT=NT+NT
      II=9*NT
      IF(NPRINT.NE.1) GO TO 630
      WRITE(IW,150)
      N1=N2+1
      N2=N2+NAXIS
      CALL PRINT(N1,N2,IW)
      GO TO 630
C     T GROUP AND OTHERS CONTAINING A SUBGROUP T :
C     LOCAL X,Y,Z ARE THE C2 AXES
530   DO 540 I=10,36
540   T(I)=ZERO
      T(10)=ONE
      T(23)=ONE
      T(36)=ONE
      T(14)=-ONE
      T(18)=-ONE
      T(19)=-ONE
      T(27)=-ONE
      T(28)=-ONE
      T(32)=-ONE
      DO 550 II=5,12
      I=9*(II-1)
      J=9*(II-5)
      T(I+1)=T(J+7)
      T(I+2)=T(J+8)
      T(I+3)=T(J+9)
      T(I+4)=T(J+1)
      T(I+5)=T(J+2)
      T(I+6)=T(J+3)
      T(I+7)=T(J+4)
      T(I+8)=T(J+5)
550   T(I+9)=T(J+6)
      NT=12
      IF(INDEX.EQ.13) GO TO 630
      IF(INDEX.EQ.14) GO TO 560
      IF(INDEX.EQ.15) GO TO 590
      GO TO 580
C     TH GROUP
C     EXPAND GROUP BY TAKING DIRECT PRODUCT WITH CI
560   I=9*NT
      DO 570 J=1,I
570   T(J+I)=-T(J)
      NT=NT+NT
      GO TO 630
C     OCTAHEDRAL GROUP IS DIRECT PRODUCT OF T AND A C4 ROTATION
C     ABOUT Z AXIS
580   SIGN=-ONE
      GO TO 600
C     TD GROUP IS DIRECT PRODUCT OF T AND A REFLECTION IN A
C     PLANE ( EQUATION OF THE PLANE   X=Y  )
590   SIGN=ONE
600   DO 610 II=13,24
      I=9*(II-1)
      J=9*(II-13)
      T(I+1)=T(J+4)*SIGN
      T(I+2)=T(J+5)*SIGN
      T(I+3)=T(J+6)*SIGN
      T(I+4)=T(J+1)
      T(I+5)=T(J+2)
      T(I+6)=T(J+3)
      T(I+7)=T(J+7)
      T(I+8)=T(J+8)
610   T(I+9)=T(J+9)
      NT=24
630   CONTINUE
C     FIND THE INVERSE TRANSFORMATIONS
      DO 650 ITR=1,NT
      NN=9*(ITR-1)
      DO 640 IT=1,NT
      II=9*(IT-1)
      TEST= T(NN+1)*T(II+1)+T(NN+2)*T(II+4)+T(NN+3)*T(II+7)
     1     +T(NN+4)*T(II+2)+T(NN+5)*T(II+5)+T(NN+6)*T(II+8)
     2     +T(NN+7)*T(II+3)+T(NN+8)*T(II+6)+T(NN+9)*T(II+9)
     3     -3.0D+00
      IF(DABS(TEST).GT.TOL) GO TO 640
      INVT(ITR)=IT
      GO TO 650
640   CONTINUE
650   CONTINUE
      RETURN
      END
      SUBROUTINE READP(Q,K,CF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      CHARACTER*8 BLANK,S,B,PARNAM,ATNAME,ANAM
      CHARACTER*12 BFLAB
      INTEGER P1, P2, P3
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1               ZAN(MAXCEN),C(3,MAXCEN),
     2               NVAR,NPAR,NVAL,NUQ,CFR,CFA,KONTYP(MAXCEN),
     3               P1(MAXCEN),P2(MAXCEN),P3(MAXCEN),KR(MAXCEN),
     5               KA(MAXCEN),KB(MAXCEN),
     4               PARVAL(MAXN3),ZIN(MAXCEN),X(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1               ATNAME(MAXCEN)
      DATA S /'-'/, BLANK /'        '/
      KS=-1
10    KS=-KS
      CALL READA(B)
      IF (B .EQ. S) GO TO 10
20    DO 30 I=1,NPAR
      IF (B .EQ. PARNAM(I)) GO TO 50
30    CONTINUE
      CALL REREAD(-1)
      CALL READF(Q)
      IF (Q .EQ. 0D0) GO TO 60
      IF (Q .LT. 0D0) KS=-KS
      Q=DABS(Q)*CF
      N1=NVAR+1
      DO 40 I=N1,NVAL
      IF (Q .EQ. PARVAL(I)) GO TO 50
40    CONTINUE
C  No match - insert new table entry
      NVAL=NVAL+1
      IF (NVAL .GT. MAXN3) CALL HONDER(13)
      PARNAM(NVAL)=BLANK
      PARVAL(NVAL)=Q
      I=NVAL
50    K=I*KS
      Q=KS*PARVAL(I)
      RETURN
60    K=0
      RETURN
      END
      SUBROUTINE GETFIL(NFILE,IBLK,LBLK,NOTAPE)
      CHARACTER*1 IA
      CHARACTER*4 IED,ITEST
      DIMENSION IBLK(4),LBLK(4),NOTAPE(4)
      COMMON /STREAM/ IR,IW
      COMMON/WORK/JREC,JUMP,INUMB(80),IWIDTH
      COMMON/WORKB/IA(80)
      COMMON/DISC/ISELL(5),IPOS(16),IBLKSZ(16)
      COMMON/DISCB/IED(256)
      IF(JUMP.GT.13)JUMP=13
      GOTO(10,40,40,40,50,50,50,60,60,60,70,70,70),JUMP
10    WRITE(IW,20)
20    FORMAT(//1X,'No files specified')
      WRITE(IW,30) IA
30    FORMAT(/1X,'Last card read '/1X,80A1)
C     CALL CLENUP
      STOP
40    NFILE=1
      GOTO 80
50    NFILE=2
      GOTO 80
60    NFILE=3
      GOTO 80
70    NFILE=4
80    DO 160 I=1,NFILE
      CALL READA4(ITEST)
      DO 90 ISEL=1,16
      IF(ITEST.EQ.IED(ISEL))GOTO 110
90    CONTINUE
      WRITE(IW,100)
100   FORMAT(//1X,'Illegal file name')
      WRITE(IW,30) IA
C     CALL CLENUP
      STOP
110   IF(ISEL.NE.8)GOTO 130
      WRITE(IW,120)
120   FORMAT(//1X,'ED7 is reserved for the Scratchfile')
      WRITE(IW,30) IA
C     CALL CLENUP
      STOP
130   IF(IPOS(ISEL).GE.0)GOTO 150
      WRITE(IW,140)
140   FORMAT(/1X,'File has not been opened')
      WRITE(IW,30) IA
C     CALL CLENUP
      STOP
150   NOTAPE(I)=ISEL
      CALL READI(III)
      IF(III.EQ.0)III=1
      IBLK(I)=III
      CALL READI(LBLK(I))
160   CONTINUE
      RETURN
      END
C     READA  M2
C
      SUBROUTINE READA(BUFF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*1 IA,IBLNK,IBUF
      CHARACTER*8 BUFF
      DIMENSION IBUF(8)
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      DATA IBLNK/' '/
      DO 10 I=1,8
10    IBUF(I)=IBLNK
      JREC=JREC+1
      IF(JREC.GT.JUMP) GOTO 30
      N=INUMB(JREC)
      NSTRT=ISTRT(JREC)
      IF(N.GT.8) N=8
      DO 20 I=1,N
      IBUF(I)=IA(NSTRT)
20    NSTRT=NSTRT+1
30    CALL PACK8(BUFF,IBUF)
      RETURN
      END
      SUBROUTINE READA4(BUFF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*1 IA,IBLNK,IBUF
      CHARACTER*4 BUFF
      DIMENSION IBUF(4)
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      DATA IBLNK/' '/
      DO 10 I=1,4
10    IBUF(I)=IBLNK
      JREC=JREC+1
      IF(JREC.GT.JUMP) GOTO 30
      N=INUMB(JREC)
      NSTRT=ISTRT(JREC)
      IF(N.GT.4) N=4
      DO 20 I=1,N
      IBUF(I)=IA(NSTRT)
20    NSTRT=NSTRT+1
30    CALL PACK4(BUFF,IBUF)
      RETURN
      END
      SUBROUTINE PACK8(BUFF,IBUF)
      CHARACTER*1 IBUF(8),LBUF(8)
      CHARACTER*8 A,BUFF
      EQUIVALENCE (A,LBUF)
      DO 10 I=1,8
10    LBUF(I)=IBUF(I)
      BUFF=A
      RETURN
      END
      SUBROUTINE PACK4(BUFF,IBUF)
      CHARACTER*1 IBUF(4),LBUF(4)
      CHARACTER*4 A,BUFF
      EQUIVALENCE (A,LBUF)
      DO 10 I=1,4
10    LBUF(I)=IBUF(I)
      BUFF=A
      RETURN
      END
      SUBROUTINE READC
      CHARACTER*1 IA, IBLNK
      LOGICAL INITEM
      COMMON/STREAM/IR,IW
      COMMON/WORK/ITEM,NITEMS,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
C
      DATA IBLNK/' '/
C
      NITEMS=0
      ITEM=0
      INITEM=.FALSE.
      READ(IR,10,END=50) (IA(J),J=1,80)
10    FORMAT(80A1)
      DO 40 I=1,IWIDTH
      IF(IA(I).EQ.IBLNK) GOTO 30
      IF (INITEM) GO TO 20
      NITEMS=NITEMS+1
      ISTRT(NITEMS)=I
      INUMB(NITEMS)=0
      INITEM=.TRUE.
20    INUMB(NITEMS)=INUMB(NITEMS)+1
      GOTO 40
30    INITEM=.FALSE.
40    CONTINUE
      RETURN
C
C  End of data file
50    WRITE (IW,60)
60    FORMAT (' End of data file')
C     CALL CLENUP
C      CALL ERRTRA
      STOP
      END
C
C     READF  M2
C
      SUBROUTINE READF(BUFF)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*1 ICHAR, ITEMP,IA
      DIMENSION ICHAR(13)
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      DATA ICHAR/'0','1','2','3','4','5','6','7','8','9',
     1'+','-','.'/
      BUFF=0.0D0
      JREC=JREC+1
      IF(JREC.GT.JUMP) GOTO 80
      LIMIT=13
      IFACT2=0
      N=INUMB(JREC)
      FACT=1.0D0
      IST=ISTRT(JREC)
      NSTRT=IST+N-1
      DO 60 I=1,N
      ITEMP=IA(NSTRT)
      DO 10 J=1,LIMIT
      IF(ICHAR(J).EQ.ITEMP) GOTO 30
10    CONTINUE
20    CALL HONDER(68)
30    IF(J.LT.11) GOTO 50
      IF(J.LT.13) GOTO 40
      IFACT2=I-1
      LIMIT=12
      GOTO 60
40    IF(NSTRT.NE.IST) GOTO 20
      IF(J.EQ.12) BUFF=-BUFF
      GOTO 70
50    BUFF=BUFF+(J-1)*FACT
      FACT=FACT*10.0D0
60    NSTRT=NSTRT-1
70    BUFF=BUFF/10D0**IFACT2
80    RETURN
      END
C     READI  M2
C
      SUBROUTINE READI(JBUF)
      CHARACTER*1 ITEMP,IA,ICHAR
      DIMENSION ICHAR(12)
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      DATA ICHAR/'0','1','2','3','4','5','6','7','8',
     1'9','-','+'/
      JBUF=0
      JREC=JREC+1
      IF(JREC.GT.JUMP) GOTO 60
      N=INUMB(JREC)
      IFACT=1
      IST=ISTRT(JREC)
      NSTRT=IST+N-1
      DO 50 I=1,N
      ITEMP=IA(NSTRT)
      DO 10 J=1,12
      IF(ICHAR(J).EQ.ITEMP) GOTO 30
10    CONTINUE
20    CALL HONDER(69)
30    IF(J.LT.11) GOTO 40
      IF(NSTRT.NE.IST) GOTO 20
      IF(J.EQ.11) JBUF=-JBUF
      GOTO 60
40    JBUF=JBUF+(J-1)*IFACT
      IFACT=IFACT*10
50    NSTRT=NSTRT-1
60    RETURN
      END
C     REREAD  M2
C
      SUBROUTINE REREAD(K)
C  K positive: reset input so as to reread the Kth item on the current
C  card.
C  K negative: move back -K items (e.g. with K=-1 read the last item aga
      CHARACTER*1 IA
      COMMON/WORK/JREC,JUMP,ISTRT(40),INUMB(40),IWIDTH
      COMMON/WORKB/IA(80)
      IF (K .GT. 0) JREC=K-1
      IF (K .LT. 0) JREC=JREC+K
      RETURN
      END
      FUNCTION RIJ(C,I,J)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION C(3,MAXSHL)
      RIJSQ=(C(1,I)-C(1,J))**2+(C(2,I)-C(2,J))**2+(C(3,I)-C(3,J))**2
      RIJ=DSQRT(RIJSQ)
      RETURN
      END
C=====================================================================
      SUBROUTINE MOVORG
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
C     MOVE ORIGIN        R D AMOS      1986
      CHARACTER*8 B,PARNAM,ATNAME,ANAM
      CHARACTER*8 COM,COC,BUFF
      CHARACTER*12 BFLAB
      INTEGER P1, P2, P3
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1               ZAN(MAXCEN),C(3,MAXCEN),
     2               NVAR,NPAR,NVAL,NUQ,CFR,CFA,KONTYP(MAXCEN),
     3               P1(MAXCEN),P2(MAXCEN),P3(MAXCEN),KR(MAXCEN),
     5               KA(MAXCEN),KB(MAXCEN),
     4               PARVAL(MAXN3),ZIN(MAXCEN),XUNK(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1               ATNAME(MAXCEN)
      COMMON/ATMWT/AMS(37),AMASS(MAXCEN)
      DATA BOHR/0.52917724924D0/
      DATA COM,COC/'COM','COC'/
      CALL READA(BUFF)
      IF(BUFF.EQ.COM)THEN
      ITYPE=1
      WRITE(*,10)
      WRITE(97,10)
10    FORMAT(/1X,'Origin to be moved to centre of mass'//)
      ELSE
      IF(BUFF.EQ.COC)THEN
      ITYPE=2
      WRITE(*,20)
      WRITE(97,20)
20    FORMAT(/1X,'Origin to be moved to centre of charge'//)
      ELSE
      CALL REREAD(-1)
      CALL READF(X)
      CALL READF(Y)
      CALL READF(Z)
      WRITE(*,30) X,  Y,  Z
      WRITE(97,30) X , Y ,Z
30    FORMAT(/1X,'Origin to be moved to the point',3F16.8)
      ITYPE=3
      ENDIF
      ENDIF
C
C
      GOTO(21,22,23),ITYPE
21    X=0.0D0
      Y=0.0D0
      Z=0.0D0
      AT=0.0D0
      DO 31 N=1,NAT
      IZ=IDINT(ZAN(N)+0.1D0)
      IF(IZ.LT.1)GOTO 31
      AM=AMS(IZ)
      AT=AT+AM
      X=X+AM*C(1,N)
      Y=Y+AM*C(2,N)
      Z=Z+AM*C(3,N)
31    CONTINUE
      X=X/AT
      Y=Y/AT
      Z=Z/AT
      XA=X*BOHR
      YA=Y*BOHR
      ZA=Z*BOHR
      WRITE(97,67) X,Y,Z,XA,YA,ZA
      WRITE(*,67) X,Y,Z,XA,YA,ZA
67    FORMAT(/1X,'Current position of centre of mass is'
     & /10X,3F16.8,'  atomic units'
     & /10X,3F16.8,'  angstrom')
      GOTO 23
22    X=0.0D0
      Y=0.0D0
      Z=0.0D0
      AT=0.0D0
      DO 32 N=1,NAT
      AM=ZAN(N)
      IF(AM.LT.0.9999D0)GOTO 32
      AT=AT+AM
      X=X+AM*C(1,N)
      Y=Y+AM*C(2,N)
      Z=Z+AM*C(3,N)
32    CONTINUE
      X=X/AT
      Y=Y/AT
      Z=Z/AT
      XA=X*BOHR
      YA=Y*BOHR
      ZA=Z*BOHR
      WRITE(97,66) X,Y,Z,XA,YA,ZA
      WRITE(*,66) X,Y,Z,XA,YA,ZA
66    FORMAT(/1X,'Current position of centre of charge is'
     & /10X,3F16.8,'  atomic units'
     & /10X,3F16.8,'  angstrom')
      WRITE(*,47)
23    WRITE(97,47)
47    FORMAT(//1X,'New geometry in atomic units'//)
      DO 45 N=1,NAT
      C(1,N)=C(1,N)-X
      C(2,N)=C(2,N)-Y
      C(3,N)=C(3,N)-Z
      WRITE(*,46) C(1,N),C(2,N),C(3,N)
45    WRITE(97,46) C(1,N),C(2,N),C(3,N)
46    FORMAT(10X,3F16.8)
      WRITE(*,48)
      WRITE(97,48)
48    FORMAT(//1X,'in angstrom'//)
      DO 49 N=1,NAT
      XA=C(1,N)*BOHR
      YA=C(2,N)*BOHR
      ZA=C(3,N)*BOHR
      WRITE(*,46) XA,YA,ZA
      WRITE(97,46)XA,YA,ZA
49    CONTINUE
      RETURN
      END
C   HELFEY  A1
      SUBROUTINE HELFEY
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXBF1=MAXBFN+1)
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2,MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.25*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.25*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-1521-MAXN3*36)
      INTEGER P1,P2,P3
      LOGICAL IANDJ,OUT,NORM,DOUBLE,ALLOUT,LADAPT,LSKIP
      CHARACTER*8 TITLE,SCFTYP,RUNTYP,GUESS,CONF
      CHARACTER*8 ANAM,ATNAME,PARNAM,DNAM
      CHARACTER*12 BFLAB
      DIMENSION DNAM(3)
      COMMON/RTWT/XX,U(12),W(12),NROOTS,NJUNK,ZJUNK(60)
      COMMON/OPTNSB/TITLE(10),SCFTYP,RUNTYP,GUESS,CONF
      COMMON/OPTNS/TIMLIM,VIBSIZ,NOPT,NVIB,IREST2,IREST3,
     &            LADAPT,LSKIP,NPRINT,ITOL,ICUT,NORMF,NORMP,
     &            IREST,NREC,INTLOC,IST,JST,KST,LST,IR,IW,
     &            IBLKD,IFILD,IBLKS,IFILS,IBLKM,IFILM,MBLKM,
     &            NOTAPE(3),IBLK(3),LBLK(3),ILOW,NCOORB,NSA,
     &            MINVEC,DIISE,DIISD,MINULL,
     &            ICONV,NRUNS,NMUL(2),IPOSM,LDA(24),ISEX(24)
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NNP, NE, NA, NB,
     1    ZAN(MAXCEN), C(3,MAXCEN),
     2    NVAR, NPAR, NVAL, NUQ, CFR, CFA, KONTYP(MAXCEN),
     3    P1(MAXCEN), P2(MAXCEN), P3(MAXCEN), KR(MAXCEN), KA(MAXCEN),
     5    KB(MAXCEN),
     4    PARVAL(MAXN3), ZZIN(MAXCEN), X(MAXN3)
      COMMON/INFOB/ ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1    ATNAME(MAXCEN)
C
      COMMON/NSHEL/EX(MAXEXP),CS(MAXEXP),CP(MAXEXP),CD(MAXEXP),
     1             KSTART(MAXSHL),KATOM(MAXSHL),KTYPE(MAXSHL),
     3             KNG(MAXSHL),KLOC(MAXSHL),
     2             KMIN(MAXSHL),KMAX(MAXSHL),NSHELL,NSEL2
C
      COMMON/BIG/XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
     1 ,CX,CY,CZ,IJN(400),IJX(36),IJY(36),IJZ(36),
     2 XIN(150),YIN(150),ZIN(150),DFAC(400),DIJ(400),HELF(36,MAXCEN,3),
     3 DD(JNKBIG)
      COMMON/BIGG/DDV(MAXNX2),DDE(JKBIGG)
      COMMON/MAPPER/IA(MAXBF1)
      COMMON/GRAD/DE(3,MAXCEN)
      COMMON/BLKIN/GOUT(510),NINTH,NJUNK1
      DATA NDIM/5/
      DATA DNAM /'E''X','E''Y','E''Z'/
      DATA PI212 /1.1283791670955D0/
      DATA ZERO,ONE,TWO /0.0D0,1.0D0,2.0D0/
C
C
CCCC      CALL ONEPDM(DD(1),DDV(1))
C
      OUT=NPRINT.EQ.-3
      ALLOUT=NPRINT.EQ.-10
      ALLOUT=.TRUE.
C      IF(ALLOUT) WRITE(IW,10)
10    FORMAT(/,10X,26(1H-),/,10X,'Hellmann-Feynman integrals',
     1 /,10X,26(1H-))
C      IF(ALLOUT)WRITE(IW,11)
11    FORMAT(//5X,'I',4X,'J',4X,'K',15X,'Ex',18X,'Ey',18X,'Ez',18X,
     & 'Dij')
      TOL=2.30258D0*ITOL
      DO 20 I=1,3
      DO 20 N=1,NAT
20    DE(I,N)=ZERO
      NINTH=1
      NORM=NORMF.NE.1.OR.NORMP.NE.1
C     ----- ISHELL
      DO 310 II=1,NSHELL
      I=KATOM(II)
      XI=C(1,I)
      YI=C(2,I)
      ZI=C(3,I)
      I1=KSTART(II)
      I2=I1+KNG(II)-1
      LIT=KTYPE(II)
      MINI=KMIN(II)
      MAXI=KMAX(II)
      LOCI=KLOC(II)-MINI
C     ----- JSHELL
      DO 310 JJ=1,II
      J=KATOM(JJ)
      XJ=C(1,J)
      YJ=C(2,J)
      ZJ=C(3,J)
      J1=KSTART(JJ)
      J2=J1+KNG(JJ)-1
      LJT=KTYPE(JJ)
      MINJ=KMIN(JJ)
      MAXJ=KMAX(JJ)
      LOCJ=KLOC(JJ)-MINJ
      NROOTS=(LIT+LJT+1)/2
      ND2=NDIM*NDIM
      ND2R=ND2*NROOTS
      RR=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
      IANDJ=II.EQ.JJ
C     ----- PREPARE INDICES FOR PAIRS OF (I,J) FUNCTIONS
      IJ=0
      MAX=MAXJ
      DO 40 I=MINI,MAXI
      IF(IANDJ) MAX=I
      DO 40 J=MINJ,MAX
      IJ=IJ+1
      IJN(IJ)=IA(LOCI+I)+LOCJ+J
      DFAC(IJ)=TWO
40    IF(IANDJ.AND.I.EQ.J) DFAC(IJ)=ONE
      CALL INDXA(IJX,IJY,IJZ,IJ,MINI,MAXI,MINJ,MAXJ,IANDJ,NDIM,1,1)
      DO 60 I=1,IJ
      DO 60 J=1,NAT
      DO 60 K=1,3
60    HELF(I,J,K)=ZERO
C     ----- I PRIMITIVE
      JGMAX=J2
      DO 250 IG=I1,I2
      AI=EX(IG)
      ARRI=AI*RR
      AXI=AI*XI
      AYI=AI*YI
      AZI=AI*ZI
      CSI=CS(IG)
      CPI=CP(IG)
      CDI=CD(IG)
C     ----- J PRIMTIVE
      IF(IANDJ) JGMAX=IG
      DO 250 JG=J1,JGMAX
      AJ=EX(JG)
      AA=AI+AJ
      AAINV=ONE/AA
      DUM=AJ*ARRI*AAINV
      IF(DUM.GT.TOL) GO TO 250
      FAC=DEXP(-DUM)
      CSJ=CS(JG)*FAC
      CPJ=CP(JG)*FAC
      CDJ=CD(JG)*FAC
      AX=(AXI+AJ*XJ)*AAINV
      AY=(AYI+AJ*YJ)*AAINV
      AZ=(AZI+AJ*ZJ)*AAINV
C     ----- DENSITY FACTOR
      DOUBLE=IANDJ.AND.IG.NE.JG
      CALL DENFAN(DIJ,CSI,CPI,CDI,CSJ,CPJ,CDJ,MINI,MAXI,
     &    MINJ,MAXJ,IANDJ,DOUBLE,NORM)
C     ..... HELLMANN-FEYNMAN TERM .....
      DUM=PI212/AA
      DUM=DUM+DUM
      DO 190 I=1,IJ
190   DIJ(I)=DIJ(I)*DUM
      AAX=AA*AX
      AAY=AA*AY
      AAZ=AA*AZ
      DO 240 IC=1,NAT
      ZNUC=-ZAN(IC)
      CX=C(1,IC)
      CY=C(2,IC)
      CZ=C(3,IC)
      XX=AA*((AX-CX)**2+(AY-CY)**2+(AZ-CZ)**2)
      CALL ROOTS
      MM=0
      DO 210 K=1,NROOTS
      UU=AA*U(K)
      WW=W(K)*ZNUC
      WW=WW*UU
      TT=AA+UU
      T=DSQRT(TT)
      TINV=ONE/TT
      X0=(AAX+UU*CX)*TINV
      Y0=(AAY+UU*CY)*TINV
      Z0=(AAZ+UU*CZ)*TINV
      IN=-NDIM+MM
      DO 200 I=1,LIT
      IN=IN+NDIM
      NI=I
      DO 200 J=1,LJT
      JN=IN+J
      NJ=J
      CALL STVINT
      XIN(JN)=XINT
      YIN(JN)=YINT
      ZIN(JN)=ZINT*WW
      CALL DVINT
      XIN(JN+ND2R)=XINT
      YIN(JN+ND2R)=YINT
200   ZIN(JN+ND2R)=ZINT*WW
210   MM=MM+ND2
      DO 230 I=1,IJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DUMX=ZERO
      DUMY=ZERO
      DUMZ=ZERO
      MM=0
      DO 220 K=1,NROOTS
      DUMX=DUMX+XIN(NX+MM+ND2R)*YIN(NY+MM   )*ZIN(NZ+MM   )
      DUMY=DUMY+XIN(NX+MM   )*YIN(NY+MM+ND2R)*ZIN(NZ+MM   )
      DUMZ=DUMZ+XIN(NX+MM   )*YIN(NY+MM   )*ZIN(NZ+MM+ND2R)
220   MM=MM+ND2
      DUM=DIJ(I)
      DUMX=DUMX*DUM
      DUMY=DUMY*DUM
      DUMZ=DUMZ*DUM
      HELF(I,IC,1)=HELF(I,IC,1)+DUMX
      HELF(I,IC,2)=HELF(I,IC,2)+DUMY
      HELF(I,IC,3)=HELF(I,IC,3)+DUMZ
      DUM=DD(IJN(I))*DFAC(I)
      DE(1,IC)=DE(1,IC)+DUM*DUMX
      DE(2,IC)=DE(2,IC)+DUM*DUMY
230   DE(3,IC)=DE(3,IC)+DUM*DUMZ
240   CONTINUE
250   CONTINUE
      IF(.NOT.ALLOUT)GOTO 280
      IIJ=0
      DO 260 I=MINI,MAXI
      MAX=MAXJ
      IF(IANDJ)MAX=I
      IP=LOCI+I
      DO 260 J=MINJ,MAX
      IIJ=IIJ+1
      JP=LOCJ+J
      DO 260 K=1,NAT
C     WRITE(41,'(3(I3,1X),3(F14.8,1X))') IP,JP,K,(HELF(IIJ,K,L),L=1,3)
C   WRITE(IW,270) IP,JP,K,(HELF(IIJ,K,L),L=1,3),DD(IJN(IIJ))
260   CONTINUE
270   FORMAT(1X,3I5,5X,4F20.8)
280   CONTINUE
C     ----- END OF 'PRIMITIVE' LOOPS -----
310   CONTINUE
C     ----- END OF 'SHELL' LOOPS -----
320   IF(.NOT.OUT) GOTO 350
      MAX=0
330   MIN=MAX+1
      MAX=MAX+5
      IF(MAX.GT.NAT) MAX=NAT
      WRITE(IW,360)
      WRITE(IW,370) (I,I=MIN,MAX)
      WRITE(IW,360)
      DO 340 N=1,3
340   WRITE(IW,380) DNAM(N),(DE(N,I),I=MIN,MAX)
      IF(MAX.LT.NAT) GO TO 330
350   CALL NUCDER(NPRINT,IW)
      IF(OUT) CALL WHTPS
      WRITE(IW,390)
360   FORMAT(/)
370   FORMAT(5X,'ATOM',5(6X,I2,6X))
380   FORMAT(7X,A3,5D14.7)
390   FORMAT(/,' ...... END OF HELLMANN-FEYNMAN FORCE ......',/)
      RETURN
      END
      SUBROUTINE NUCDER(NPRINT,IW)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      INCLUDE 'maxcen.inc'
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2,MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.25*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.25*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-MAXCEN*MAXCEN-MAXN3)
      INTEGER P1,P2,P3
      LOGICAL OUT
      CHARACTER*8 DNAM,ANAM,ATNAME,PARNAM
      CHARACTER*12 BFLAB
      DIMENSION DNAM(3)
      COMMON /INFOA/ NAT, ICH, MUL, NUM, NX, NE, NA, NB,
     1    ZAN(MAXCEN), C(3,MAXCEN),
     2    NVAR, NPAR, NVAL, NUQ, CFR, CFA, KONTYP(MAXCEN),
     3    P1(MAXCEN), P2(MAXCEN), P3(MAXCEN), KR(MAXCEN), KA(MAXCEN),
     5    KB(MAXCEN),
     4    PARVAL(MAXN3), ZIN(MAXCEN), X(MAXN3)
      COMMON/INFOB/ANAM(MAXCEN),BFLAB(MAXBFN),PARNAM(MAXN3),
     1    ATNAME(MAXCEN)
      COMMON/BIG/DRG(MAXCEN,MAXCEN),DNUC(3,MAXCEN),XJUNK(JNKBIG)
      COMMON/GRAD/DE(3,MAXCEN)
      DATA DNAM /'E''X','E''Y','E''Z'/
      DATA ZERO,ONE /0.0D0,1.0D0/
      OUT=NPRINT.EQ.-3.OR.NPRINT.EQ.-10
      OUT=.TRUE.
      DO 10 K=1,NAT
      DO 10 KK=1,3
10    DNUC(KK,K)=ZERO
      DRG(1,1)=ZERO
      DO 30 K=2,NAT
      DRG(K,K)=ZERO
      K1=K-1
      DO 30 L=1,K1
      RKL=ZERO
      DO 20 I=1,3
20    RKL=RKL+(C(I,K)-C(I,L))**2
      DRG(K,L)=-ONE/RKL
30    DRG(L,K)=DSQRT(RKL)
      DO 60 KK=1,3
      DO 40 K=2,NAT
      ZAK=ZAN(K)
      KM1=K-1
      DO 40 L=1,KM1
      ZAL=ZAN(L)
      PKL=(C(KK,K)-C(KK,L))/DRG(L,K)
      DNUC(KK,K)=DNUC(KK,K)+PKL*DRG(K,L)*ZAK*ZAL
40    CONTINUE
      NAT1=NAT-1
      DO 50 K=1,NAT1
      ZAK=ZAN(K)
      KP1=K+1
      DO 50 L=KP1,NAT
      ZAL=ZAN(L)
      PKL=(C(KK,K)-C(KK,L))/DRG(K,L)
      DNUC(KK,K)=DNUC(KK,K)+PKL*DRG(L,K)*ZAK*ZAL
50    CONTINUE
60    CONTINUE
C     ----- PRINT SECTION -----
      DO 70 K=1,NAT
      DO 70 KK=1,3
70    DE(KK,K)=DE(KK,K)+DNUC(KK,K)
      IF(.NOT.OUT)GOTO 110
C      WRITE(41,80)
80    FORMAT(///10X,'NUCLEAR CONTIBUTION TO GRADIENT'//)
      MAX=0
90    MIN=MAX+1
      MAX=MAX+5
      IF(MAX.GT.NAT) MAX=NAT
C      WRITE(41,140)
      WRITE(IW,140)
C      WRITE(41,150) (I,I=MIN,MAX)
      WRITE(IW,150) (I,I=MIN,MAX)
C      WRITE(41,140)
      WRITE(IW,140)
      DO 100 N=1,3
C      WRITE(41,160) DNAM(N),(DNUC(N,I),I=MIN,MAX)
100   WRITE(IW,160) DNAM(N),(DNUC(N,I),I=MIN,MAX)
      IF(MAX.LT.NAT)GOTO 90
110   WRITE(IW,170)
C      WRITE( *,170)
C     write(*,*)'Hellman-Feynman integrals are in HELFEY'
      MAX=0
120   MIN=MAX+1
      MAX=MAX+5
      IF(MAX.GT.NAT) MAX=NAT
C     WRITE( *,140)
      WRITE(IW,140)
C     WRITE( *,150) (I,I=MIN,MAX)
      WRITE(IW,150) (I,I=MIN,MAX)
C     WRITE( *,140)
      WRITE(IW,140)
      DO 130 N=1,3
C     WRITE( *,160) DNAM(N),(DE(N,I),I=MIN,MAX)
130   WRITE(IW,160) DNAM(N),(DE(N,I),I=MIN,MAX)
      IF(MAX.LT.NAT) GO TO 120
C     WRITE(41,*)
      DO I=1,NAT
      DO J=1,3 
C      WRITE(41,*) DE(J,I)
      END DO
      END DO
140   FORMAT(/)
150   FORMAT(5X,'ATOM',5(6X,I2,6X))
160   FORMAT(7X,A3,5F14.7)
170   FORMAT(/,10X,22(1H-),/,10X,'HELLMANN-FEYNMAN FORCE',
     1 /,10X,22(1H-))
      RETURN
      END
      FUNCTION LENSEC(N)
      LENSEC=(N-1)/511+1
      RETURN
      END
      FUNCTION LENINT(N)
C     LENINT is the number of REALS corresponding to N INTEGERS
      LENINT=(N+1)/2
CCRAY LENINT=N
      RETURN
      END
      SUBROUTINE DVINT
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INCLUDE 'maxcen.inc'
C     PARAMETER (MAXCEN=30,MAXN3=90,MAXEXP=440,MAXBFN=126,MAXSHL=120)
      PARAMETER (MAXNX=(MAXBFN*(MAXBFN+1))/2,MAXNX2=MAXNX*2)
      PARAMETER (MXBIGG=3*MAXNX+1040,JKBIGG=MXBIGG-MAXNX2)
      PARAMETER (MXBIGK=MAXNX)
C Use this parameter if MAXBFN>4.25*MAXCEN
C     PARAMETER (MAXBIG=2*MAXNX+2*MAXCEN)
C Use this parameter if MAXBFN<4.25*MAXCEN
      PARAMETER (MAXBIG=2*MAXN3*MAXN3+3*MAXN3)
      PARAMETER (JNKBIG=MAXBIG-17)
C
C     ----- GAUSS-HERMITE QUADRATURE USING MINIMUM POINT FORMULA -----
C
      DIMENSION H(21),W(21),MIN(6),MAX(6)
      COMMON/BIG/XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
     1 ,CX,CY,CZ,QJNK(JNKBIG)
      COMMON/HERMIT/H1,H2(2),H3(3),H4(4),H5(5),H6(6),H7(7)
      COMMON/WERMIT/W1,W2(2),W3(3),W4(4),W5(5),W6(6),W7(7)
      EQUIVALENCE (H(1),H1),(W(1),W1)
      DATA MIN /1,2,4,7,11,16/
      DATA MAX /1,3,6,10,15,21/
      DATA ZERO /0.0D0/
      XINT=ZERO
      YINT=ZERO
      ZINT=ZERO
      NPTS=(NI+NJ-1)/2+1
      IMIN=MIN(NPTS)
      IMAX=MAX(NPTS)
      DO 13 I=IMIN,IMAX
      DUM=H(I)/T
      PTX=DUM+X0
      PTY=DUM+Y0
      PTZ=DUM+Z0
      PX=PTX-CX
      PY=PTY-CY
      PZ=PTZ-CZ
      AX=PTX-XI
      AY=PTY-YI
      AZ=PTZ-ZI
      BX=PTX-XJ
      BY=PTY-YJ
      BZ=PTZ-ZJ
      GO TO (5,4,3,2,1),NI
    1 PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
    2 PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
    3 PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
    4 PX=PX*AX
      PY=PY*AY
      PZ=PZ*AZ
    5 GO TO (12,11,10,9,8,7,6),NJ
    6 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
    7 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
    8 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
    9 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
   10 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
   11 PX=PX*BX
      PY=PY*BY
      PZ=PZ*BZ
   12 DUM=W(I)
      XINT=XINT+DUM*PX
      YINT=YINT+DUM*PY
      ZINT=ZINT+DUM*PZ
   13 CONTINUE
      RETURN
      END
      SUBROUTINE TIMIT(INDEX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER*2 IH,IM,IS,IHS
      COMMON/TIMEX/TSTART,TI,TX,TIM,TTGO,TIMLIM
      GOTO (1,2,1),INDEX
   2  ISTART=XCLOCK( )
      TSTART=DBLE(FLOAT(ISTART))
      TSTART=TSTART*0.01D00
      TIM=0.0D0
      TX=0.0D0
      TI=0.0D0
      TTGO=TIMLIM
      GOTO 3
   1  ITIM1=XCLOCK( )
      TIM1=DBLE(FLOAT(ITIM1))
      TIM1=TIM1*0.01D00
      TIM=TIM1
      TX=(TIM-TI)
      TI=TIM
      TTGO=TIMLIM-TIM
3     IF(INDEX.NE.1) RETURN
      WRITE(97,1000) TX,TIM,TTGO
1000  FORMAT(//1X,79('-'),
     &//10X,'LAST STEP USED ',F8.2,' SECS ',//10X,'TOTAL USED ',F8.2,
     &' SECS ',//10X,'REMAINING ',F8.2,' SECS'//1X,79('-'))
      RETURN
      END
      SUBROUTINE INPUT(IRR,IWW,IRW)
CThis routine reads and re-writes MICROMOL INPUT FILE
C IRR says where to READ
C IWW says where to WRITE
C if IRW=0 the routine READ and WRITE
C if IRW=1 the routine just READ
C if IRW=2 the routine just WRITE
C* Once read the input, information about the basis and the molecule
C* is kept in the commons /BASIS/ and /MOLEC/
CThe input file is of the kind:
C*************************************************************************
C   CHARGE 0 (! charge 0 is default - line can be omitted)
C   CONVERGENCE 7 (! convergence 1.D-5 is default - line can be omitted)
C   ATOMS
C   NAME1 CHARGE X1 Y1 Z1
C       L1 M1 N1 'NUMBER OF CONTRACTION TERMS'
C         ALPHA1   C1
C         ALPHA2   C2
C         ...........
C         ALPHAN   CN
C        L2  M2 N2 ...
C         ........
C         ........
C         ........
C    GCM L M N OMEGA.MIN  DELTA   A  'NUMBER OF FUNCTIONS'
C  END
C  NAME2 CHARGE ....
C        ........
C        ........
C        .......
C  END
C  END
C**************************************************************************
C*******ROV PISA 03/93
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (LIMITS=680)
      PARAMETER (NGMAX=200,NCMAX=20,NATMAX=200)
C
C LIMITS = SUM(J)_0^LMAX SUM(K)_J^0,STEP(-2) (2*K+1)
C
      CHARACTER*1 BLNK,WORD,ATOMN,CHAR,SHELL(200)
      CHARACTER*80 STRING,TITULO
      DIMENSION WORD(80),ATOMN(20,NATMAX)
      DIMENSION INDX(NGMAX,NCMAX),INDY(NGMAX,NCMAX),
     1          INDZ(NGMAX,NCMAX),NTCO(NGMAX),
     2          ALFA(NGMAX,NCMAX),CONTR(NGMAX,NCMAX),LABB(NGMAX)
      DIMENSION GCX(NGMAX),GCY(NGMAX),GCZ(NGMAX)
      DIMENSION Z(NATMAX),CNX(NATMAX),CNY(NATMAX),CNZ(NATMAX)
      DIMENSION INDI(3),INDJ(3),GCI(3),GCJ(3),NBAT(NATMAX)
      DIMENSION LMNSPD(3,6,3),NSPD(3),NSHLAT(NATMAX),IFSHL(200)
      COMMON /NUMBER0/ NFO,IAT,NELEC
      COMMON /BASIS/ INDX,INDY,INDZ,NTCO,GCX,GCY,GCZ,ALFA,CONTR
      COMMON /MOLEC/ Z,CNX,CNY,CNZ
      SAVE TITULO,ICON,IPRT,MULT,ICH
      EQUIVALENCE (STRING,WORD)
      DATA BLNK /' '/
      NSPD(1)=1
      NSPD(2)=3
      NSPD(3)=6
      DO ISPD=1,3
       DO I=1,6
       DO J=1,3
         LMNSPD(ISPD,I,J)=0
       END DO
       END DO
      END DO
* x y z xx yy zz       
      DO I=1,3
       LMNSPD(2,I,I)=1
       LMNSPD(3,I,I)=2
      END DO
* xy
      LMNSPD(3,4,1)=1
      LMNSPD(3,4,2)=1
* xz
      LMNSPD(3,5,1)=1
      LMNSPD(3,5,3)=1
* yz
      LMNSPD(3,6,2)=1
      LMNSPD(3,6,3)=1
      IF (IRW.EQ.2) GOTO 5000
*READ TITLE
      REWIND (UNIT=IRR)
2     READ(IRR,'(A80)',END=3) STRING
      IAUX=INDEX(STRING,'TITLE')
      IF (IAUX.EQ.0) GOTO 2
      READ(IRR,'(A80)') TITULO
3     CONTINUE
*READ PRINT
      IPRT=1
      REWIND (UNIT=IRR)
4     READ(IRR,'(A80)',END=5) STRING
      IAUX=INDEX(STRING,'PRINT')
      IF (IAUX.EQ.0) GOTO 4
      STRING(IAUX:IAUX+4)=BLNK
      READ(STRING,*) IPRT
5     CONTINUE
*READ CONVERGENCE CRITERION (default=1.D-5)
      REWIND (UNIT=IRR)
      ICON=5
10    READ(IRR,'(A80)',END=11) STRING
      IAUX=INDEX(STRING,'CONVERGENCE')
      IF (IAUX.EQ.0) GOTO 10
      STRING(IAUX:IAUX+10)=BLNK
      READ(STRING,*)ICON
11    CONV=1.D0**(-ICON)
*READ MOLECULAR CHARGE (default=0.D0)
      REWIND (UNIT=IRR)
      CHARGE=0.D0
      ICH=0
13    READ(IRR,'(A80)',END=14) STRING
      IAUX=INDEX(STRING,'CHARGE')
      IF (IAUX.EQ.0) GOTO 13
      STRING(IAUX:IAUX+5)=BLNK
      READ(STRING,*)ICH
      CHARGE=1.D0*ICH
14    CONTINUE
*READ MULTIPLICITY
      REWIND (UNIT=IRR)
      MULT=1
15    READ(IRR,'(A80)',ERR=16,END=16) STRING
      IAUX=INDEX(STRING,'MULTIPLICITY')
      IF (IAUX.EQ.0) GOTO 15
      STRING(IAUX:IAUX+11)=BLNK
      MULT = 1
C     READ(STRING,*)MULT
16    CONTINUE
      REWIND (UNIT=IRR)
*SEARCH FIRST LINE OF BASIS INPUT ,THAT IS,'ATOMS'
  195 READ(IRR,'(A80)',ERR=997,END=999) STRING
      IF (INDEX(STRING,'ATOMS').EQ.0) GO TO 195
      NSHELL=0
      KCOUNT=0
      IAT=0
      IEND=0
100   CONTINUE
      READ(IRR,'(A80)') STRING
      IAUX=INDEX(STRING,'END')
      IF (IAUX.NE.0) IEND=IEND+1
      IF (IEND.EQ.2) GOTO 180
      IEND=0
*READ ATOM NAME,CHARGE,X,Y,Z
      IAT=IAT+1
      NBAUX=0
      NSAUX=0
      IW=0
110   CONTINUE
      IW=IW+1
      IF (WORD(IW).EQ.BLNK) GOTO 110
      JW=IW
120   CONTINUE
      JW=JW+1
      IF (WORD(JW).NE.BLNK) GOTO 120
      JW=JW-1
      J=0
      DO 130 I=IW,JW
       J=J+1
       ATOMN(J,IAT)=WORD(I)
       WORD(I)=BLNK
130   CONTINUE
      READ(STRING,*) Z(IAT),CNX(IAT),CNY(IAT),CNZ(IAT)
*READ ATOM BASIS SET
140   CONTINUE
      READ(IRR,'(A80)') STRING
      IAUX=INDEX(STRING,'GCM')
      IF (IAUX.NE.0) GOTO 160
      IAUX=INDEX(STRING,'END')
      IF (IAUX.NE.0) THEN
       IEND=1
       GOTO 100
      END IF
**READ L,M,N AND NUMBER OF CONTRACTION TERMS
      KCOUNT=KCOUNT+1
      NSHELL=NSHELL+1
      NBAUX=NBAUX+1
      NSAUX=NSAUX+1
      IFSHL(NSHELL)=KCOUNT
C      NBAT(IAT)=NBAUX
C      READ(STRING,*) L,M,N,NTCO(KCOUNT)
      IAUX=INDEX(STRING,'S')
      CHAR='S'
      IF (IAUX.EQ.0) THEN
        IAUX=INDEX(STRING,'P')
        CHAR='P'
       IF (IAUX.EQ.0) THEN
        IAUX=INDEX(STRING,'D')
        CHAR='D'
       END IF
      END IF
      STRING(1:IAUX+1)=BLNK
      READ(STRING,*) NTCO(KCOUNT)
      ISPD=1
      IF (CHAR.EQ.'P') THEN
       ISPD=2
      END IF
      IF (CHAR.EQ.'D') THEN
       ISPD=3
      END IF
      SHELL(NSHELL)=CHAR
**READ ALPHA's AND C's
      DO 150 J=1,NTCO(KCOUNT)
       READ(IRR,*) LIXO,ALFA(KCOUNT,J),CONTR(KCOUNT,J)
150   CONTINUE
      KAUX=KCOUNT
      NBAUX=NBAUX-1
      KCOUNT=KCOUNT-1
      DO I=1,NSPD(ISPD)
       KCOUNT=KCOUNT+1
       NBAUX=NBAUX+1
       NTCO(KCOUNT)=NTCO(KAUX)
       DO J=1,NTCO(KAUX)
         ALFA(KCOUNT,J)=ALFA(KAUX,J)
         CONTR(KCOUNT,J)=CONTR(KAUX,J)
         INDX(KCOUNT,J)=LMNSPD(ISPD,I,1)
         INDY(KCOUNT,J)=LMNSPD(ISPD,I,2)
         INDZ(KCOUNT,J)=LMNSPD(ISPD,I,3)
       END DO
       GCX(KCOUNT)=CNX(IAT)
       GCY(KCOUNT)=CNY(IAT)
       GCZ(KCOUNT)=CNZ(IAT)
      END DO
*NEXT SHELL
      NBAT(IAT)=NBAUX
      NSHLAT(IAT)=NSAUX
      GOTO 140
*GCM TYPE BASIS
160   CONTINUE
      STRING(IAUX:IAUX+2)=BLNK
**READ L,M,N, OMEGA MIN.,DELTA OMEGA,AOMEGA,NUMBER OF FUNCT.
      READ(STRING,*) L,M,N,OMG,DLTOMG,AOMG,NOMG
      DO 170 I=1,NOMG
       KCOUNT=KCOUNT+1
       NSHELL=NSHELL+1
       ALFA(KCOUNT,1)=DEXP(AOMG*(OMG+(I-1)*DLTOMG))
       INDX(KCOUNT,1)=L
       INDY(KCOUNT,1)=M
       INDZ(KCOUNT,1)=N
       GCX(KCOUNT)=CNX(IAT)
       GCY(KCOUNT)=CNY(IAT)
       GCZ(KCOUNT)=CNZ(IAT)
       NTCO(KCOUNT)=1
       CONTR(KCOUNT,1)=1.D0
       NBAUX=NBAUX+1
       NBAT(IAT)=NBAUX
170   CONTINUE
*NEXT SPECIES
      GOTO 140
180   CONTINUE
      NFO=KCOUNT
C NORMALIZE CONTRACTION COEFFICIENTS
C      DO 245 I=1,NFO
C      SOVPAR=0.D0
C      DO ICON=1,NTCO(I)
C       CALL TRANS(I,ICON,INDI,GCI,ALF1)
C      DO JCON=1,NTCO(I)
C       CALL TRANS(I,JCON,INDJ,GCJ,ALF2)
C       AN=FNORM(I,ICON)*FNORM(I,JCON)
C       GOV=AN*OVLP(INDI,GCI,ALF1,INDJ,GCJ,ALF2)
C       SOVPAR=SOVPAR+GOV*CONTR(I,ICON)*CONTR(I,JCON)
C      END DO
C      END DO
C      COF=1.D0/DSQRT(SOVPAR)
C      DO JMUL=1,NTCO(I)
C      CONTR(I,JMUL)=CONTR(I,JMUL)*COF
C      END DO
C  245 CONTINUE
*number of electrons
      ZT=0.D0
      DO I=1,IAT
       ZT=ZT+Z(I)
      END DO
      NELEC=ZT-CHARGE
      IF (IRW.EQ.1) RETURN
5000  CONTINUE
C
C PRINTS
C
C      IF (IPRT.GT.0) THEN
       WRITE(IWW,*)'TITLE'
       WRITE(IWW,'(A80)')TITULO
       WRITE(IWW,*)'CONVERGENCE',ICON
       WRITE(IWW,*)'PRINT',IPRT
       WRITE(IWW,*)'MULTIPLICITY',MULT
       IF (ICH.NE.0) THEN
         WRITE(IWW,*)'CHARGE',ICH
       END IF
       WRITE(IWW,*)'ATOMS'
       IN=0
       INF=0 
       DO 500 J=1,IAT
       WRITE(IWW,'(20A1,4X,4(F12.6,2X))') (ATOMN(I,J),I=1,20),
     .        Z(J),CNX(J),CNY(J),CNZ(J)
       DO 480 II=1,NSHLAT(J)
        IN=IN+1
        IS=IFSHL(IN)
        WRITE(IWW,'(14X,I2,5X,A1,5X,I2)')II,SHELL(IN),NTCO(IS)
        DO 460 III=1,NTCO(IS)
         INF=INF+1
         C=CONTR(IS,III)
          WRITE(IWW,'(1X,I2,8X,2(F16.8,2X))') III,ALFA(IS,III),C
460     CONTINUE
480    CONTINUE
       WRITE(IWW,*)'END'
500    CONTINUE
       WRITE(IWW,*)'END'
       WRITE(IWW,*)'RUNTYP INTEGRAL'
       WRITE(IWW,*)'START'
       WRITE(IWW,*)'FINISH'
       NG=0
       DO I=1,KCOUNT
         NG=NG+NTCO(I)
       END DO
       WRITE(IWW,*)'NUMBER OF ATOMS',IAT
       WRITE(IWW,*)'NUMBER OF GAUSSIANS',NG
       WRITE(IWW,*)'NUMBER OF FUNCTIONS',KCOUNT
       WRITE(IWW,*)'NUMBER OF SHELLS',NSHELL
C      END IF
       RETURN
  999 WRITE (6,'(////A////)') '!!!!!! NO BASIS IN INPUT (NO &INP)!!!!!!'
      STOP 999
  998 WRITE (6,'(////A////)') 
     1 '!!!!!! NO TERMINATION IN BASIS INPUT (NO &END)!!!!!!'
      STOP 998
  997 WRITE (6,'(////A////)') 
     1 '!!!!!! GENERAL ERROR IN BASIS INPUT !!!!!!'
      STOP 997
      END
      SUBROUTINE OUTINT(S,H,G,M,NGG)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      PARAMETER (ND1=50)
      PARAMETER (NDG1=ND1*(ND1+1)/2)
      PARAMETER (NDG3=NDG1*(NDG1+1)/2)
      DIMENSION S(ND1,ND1),H(ND1,ND1),G(NDG3)
  101 FORMAT(5D15.8)
      DO 1 J=1,M
    1 WRITE(26,101)(S(I,J),I=1,M)
      DO 2 J=1,M
    2 WRITE(26,101)(H(I,J),I=1,M)
      WRITE(26,101)(G(N),N=1,NGG)
      REWIND 26
      RETURN
      END
      SUBROUTINE RD2E00(IO2E,G)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION G(*),GG(10000),INDEXIJ(10000),INDEXKL(10000)
      REWIND(IO2E)
C     LBUFF = 10000
      LBUFF = 4095
      NREC  = 0
   32 NREC  = NREC+1
      READ(IO2E)(GG(I),I=1,LBUFF),(INDEXIJ(I),I=1,LBUFF),
     &          (INDEXKL(I),I=1,LBUFF),NINT
      IF(NINT.GT.LBUFF) CALL ABORT0('RD2E000001')
      DO 50 IREC=1,NINT
        IJKL = INDEXIJ(IREC)*(INDEXIJ(IREC)-1)/2 + INDEXKL(IREC)
        G(IJKL) = GG(IREC)
   50 CONTINUE
      IF(NINT.NE.LBUFF)GOTO 201
      GOTO 32
  201 RETURN
      END
      SUBROUTINE IJKLG0(IAO2E,GG,II,JJ,KK,LL,NINT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION GG(*),INDIJ(20000),INDKL(20000)
      DIMENSION II(*),JJ(*),KK(*),LL(*)      
      LBUFF = 4095
      READ(IAO2E)(GG(I),I=1,LBUFF),(INDIJ(I),I=1,LBUFF),
     &                             (INDKL(I),I=1,LBUFF),NINT
      IF(NINT.GT.LBUFF) CALL ABORT0('IJKLG0001')
      DO 50 IREC=1,NINT
         CALL DECODEIJ(INDIJ(IREC),II(IREC),JJ(IREC))
         CALL DECODEIJ(INDKL(IREC),KK(IREC),LL(IREC))
C        WRITE(6,'(5I5,D15.6)')
C    &       IREC,II(IREC),JJ(IREC),KK(IREC),KK(IREC),GG(IREC)
   50 CONTINUE
  201 RETURN
      END
C*
C*
      SUBROUTINE GETDON(NREC,NWORD)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON/GI/BUFF(511)
      READ(3,REC=NREC)(BUFF(I),I=1,511),NWORD
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C*********** End of integrals ****************

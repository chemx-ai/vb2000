#!/bin/csh
#     Copyright (C) 2017 Jiabo Li, Brian Duke, and Roy McWeeny
# 
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see
#     <https://www.gnu.org/licenses/>.
###########################################################################
#
#
#   Run FTNCHEK, a FORTRAN syntax checker, on GAMESS.
#
#   Option 1 is to test individual source code in the directory TestDir,
#   by the command 'checkgms'.
#
#   Option 2 is to test source code in the directory TestDir, plus the
#   remaining parts of GAMESS in the production code directory ProdDir,
#   as a total program, by the command 'checkgms all'.  In order to
#   run the second option, you must redimension a table in FTNCHEK,
#   namely, raise HASHSZ from 20930 to 40930 in ftnchek.h, as GAMESS
#   is now too big to fit in the default space.
#
#   FTNCHEK is available from its point of origin, Fordham University,
#   by anonymous FTP to ftp.dsm.fordham.edu, directory /pub/ftnchek.
#   or see http:/www.dsm.fordham.edu/~ftnchek/ftp-index.html
#   This program is also available at netlib and sunsite, typically.
#   The author, Robert Moniot, is a hero!
#
#   Note that in addition to the dimension change just noted, we suppress
#   a few of the warning messages issued by FTNCHEK for argument testing.
#   A list of these modifications can be sent to you, if you wish.
#
#set CMEM='CSTA'
set CMEM='CDYN'
set CBIT='CL64'
set TARGET=vb2000.src
set VERS='C000'

set COMPTAG='  Compiler  IFORT 12.1.5 '
echo "sed "s/=========================/$COMPTAG/" ./SRC/$TARGET | \"
echo " sed "s/^$VERS/    /g" | sed "s/^CTMAP/     /g" | \"
echo " sed "s/^$CBIT/    /g" | sed "s/^$CMEM/    /g" >vb2000.f"
sed "s/=========================/$COMPTAG/" ./SRC/$TARGET | \
sed "s/^$VERS/    /g" | sed "s/^CTMAP/     /g" | \
sed "s/^$CBIT/    /g" | sed "s/^$CMEM/    /g" >vb2000.f
echo ""

cp ./SRC/vb2000-so.src  vb2000-so.f 
cp ./SRC/vb2000ints.src  vb2000ints.f 
cp ./SRC/*.inc .

if ($1 == all) goto do_it_all_together
#
#   ----- this section tests each module separately -----
#
#   The 2nd argument to "comp" causes source activation only,
#   placing the pure FORTRAN in your ~/scr directory for checking.
#   -noextern suppresses messages about unresolved references
#   -common=2 ensures commons agree in type and length
#   -arguments=1 checks only number of args
#   -arguments=2 also ensures arguments agree in data type
#   -array=0 suppresses most array dimension checking
#   -calltree=1 generates who calls whom list, 0 disables this.
#   -crossref generates who is called by whom list, including commons
#
foreach file (*.f)
   set file=$file:r
   ftnchek -noextern -common=2 -arguments=1 -array=0 \
           -calltree=0 -nocrossref -portability=tab \
           -f77=automatic-array,relops,cycle-exit,case-construct \
       $file.f >& $file.lis
   echo FTNCHEK output for this module is now in $file.lis
#  rm -f *.inc
#  rm *.f
end
   rm -f *.inc
   rm *.f
exit
#
#   ----- this section tests the entire program -----
#
do_it_all_together:
#
echo " "
echo Beginning FTNCHEK of the entire program, stand by...
date
ftnchek -noextern -common=2 -arguments=1 -array=0 \
        -calltree=0 -nocrossref -resources=yes \
        -f77=automatic-array,relops -portability=tab \
        *.f >& vbfull.lis
echo FTNCHEK diagnostic messages are now in vbfull.lis
rm -f *.inc
rm *.f
date
exit
